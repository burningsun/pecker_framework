; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	F:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\opengles\pecker_buffer_gl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?MAX_VERTEXT_ATTRIBUTE_COUNT@pecker_vertex_buffer_gles2@pecker_sdk@@2IB ; pecker_sdk::pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT
;	COMDAT ?MAX_VERTEXT_ATTRIBUTE_COUNT@pecker_vertex_buffer_gles2@pecker_sdk@@2IB
CONST	SEGMENT
?MAX_VERTEXT_ATTRIBUTE_COUNT@pecker_vertex_buffer_gles2@pecker_sdk@@2IB DD 08H ; pecker_sdk::pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT
CONST	ENDS
PUBLIC	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_opengles_v2_object::~pecker_opengles_v2_object
PUBLIC	??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ	; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer
PUBLIC	??0update_gpu_ram_info@pecker_sdk@@QAE@IHH@Z	; pecker_sdk::update_gpu_ram_info::update_gpu_ram_info
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_Fvertex_attribute_info@pecker_sdk@@QAEXXZ	; pecker_sdk::vertex_attribute_info::`default constructor closure'
PUBLIC	??_7pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_vertex_buffer_gles2::`vftable'
PUBLIC	??_7pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@ ; pecker_sdk::pecker_vertex_buffer_gles2::`vftable'
PUBLIC	??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_opengles_v2_object::pecker_opengles_v2_object
PUBLIC	??0Ipecker_vertex_buffer@pecker_sdk@@QAE@XZ	; pecker_sdk::Ipecker_vertex_buffer::Ipecker_vertex_buffer
PUBLIC	??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_vertex_buffer_gles2::pecker_vertex_buffer_gles2
PUBLIC	??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@ ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVpecker_vertex_buffer_gles2@pecker_sdk@@@8 ; pecker_sdk::pecker_vertex_buffer_gles2 `RTTI Type Descriptor'
PUBLIC	??_R3pecker_vertex_buffer_gles2@pecker_sdk@@8	; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2pecker_vertex_buffer_gles2@pecker_sdk@@8	; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@pecker_vertex_buffer_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Ipecker_vertex_buffer@pecker_sdk@@8 ; pecker_sdk::Ipecker_vertex_buffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8	; pecker_sdk::Ipecker_vertex_buffer `RTTI Type Descriptor'
PUBLIC	??_R3Ipecker_vertex_buffer@pecker_sdk@@8	; pecker_sdk::Ipecker_vertex_buffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Ipecker_vertex_buffer@pecker_sdk@@8	; pecker_sdk::Ipecker_vertex_buffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8 ; pecker_sdk::Ipecker_graphic_buffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8	; pecker_sdk::Ipecker_graphic_buffer `RTTI Type Descriptor'
PUBLIC	??_R3Ipecker_graphic_buffer@pecker_sdk@@8	; pecker_sdk::Ipecker_graphic_buffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Ipecker_graphic_buffer@pecker_sdk@@8	; pecker_sdk::Ipecker_graphic_buffer::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8 ; pecker_sdk::pecker_opengles_v2_object `RTTI Type Descriptor'
PUBLIC	??_R3pecker_opengles_v2_object@pecker_sdk@@8	; pecker_sdk::pecker_opengles_v2_object::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2pecker_opengles_v2_object@pecker_sdk@@8	; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVpecker_render_object@pecker_sdk@@@8	; pecker_sdk::pecker_render_object `RTTI Type Descriptor'
PUBLIC	??_R3pecker_render_object@pecker_sdk@@8		; pecker_sdk::pecker_render_object::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2pecker_render_object@pecker_sdk@@8		; pecker_sdk::pecker_render_object::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@pecker_render_object@pecker_sdk@@8	; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	?allocate_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJHQAX@Z ; pecker_sdk::pecker_vertex_buffer_gles2::allocate_buffer_from_cpu_ram
PUBLIC	?release_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_cpu_ram
PUBLIC	?get_buffer_size@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ ; pecker_sdk::pecker_vertex_buffer_gles2::get_buffer_size
PUBLIC	?get_data@pecker_vertex_buffer_gles2@pecker_sdk@@UBEPBEXZ ; pecker_sdk::pecker_vertex_buffer_gles2::get_data
PUBLIC	?lock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z ; pecker_sdk::pecker_vertex_buffer_gles2::lock_data
PUBLIC	?unlock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::unlock_data
PUBLIC	?allocate_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::allocate_buffer_from_gpu_ram
PUBLIC	?release_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_gpu_ram
PUBLIC	?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ; pecker_sdk::pecker_vertex_buffer_gles2::update_gpu_buffer
PUBLIC	?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::update_gpu_buffer
PUBLIC	?set_defualt_gpu_buffer_update_info@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ; pecker_sdk::pecker_vertex_buffer_gles2::set_defualt_gpu_buffer_update_info
PUBLIC	?bind_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::bind_gpu_buffer
PUBLIC	?add_defualt_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUvertex_attribute_info@2@@Z ; pecker_sdk::pecker_vertex_buffer_gles2::add_defualt_vertex_attribute_setting
PUBLIC	?clear_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::clear_vertex_attribute_setting
PUBLIC	?get_vertex_attribute_reference@pecker_vertex_buffer_gles2@pecker_sdk@@UAEPAUvertex_attribute_info@2@I@Z ; pecker_sdk::pecker_vertex_buffer_gles2::get_vertex_attribute_reference
PUBLIC	?get_vertex_attribute_setting_count@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ ; pecker_sdk::pecker_vertex_buffer_gles2::get_vertex_attribute_setting_count
PUBLIC	?set_vbo_using_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJI@Z ; pecker_sdk::pecker_vertex_buffer_gles2::set_vbo_using_setting
PUBLIC	?use_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::use_vertex_attrible
PUBLIC	?finish_using_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::finish_using_vertex_attrible
PUBLIC	??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Complete Object Locator'
PUBLIC	??_Epecker_vertex_buffer_gles2@pecker_sdk@@W3AEPAXI@Z ; [thunk]:pecker_sdk::pecker_vertex_buffer_gles2::`vector deleting destructor'
PUBLIC	?get_object_location@pecker_vertex_buffer_gles2@pecker_sdk@@UBEIXZ ; pecker_sdk::pecker_vertex_buffer_gles2::get_object_location
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Epecker_vertex_buffer_gles2@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::pecker_vertex_buffer_gles2::`vector deleting destructor'
EXTRN	?get_buffer_type@Ipecker_vertex_buffer@pecker_sdk@@UBEIXZ:PROC ; pecker_sdk::Ipecker_vertex_buffer::get_buffer_type
EXTRN	?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z:PROC ; pecker_sdk::pecker_render_object::toString
EXTRN	?get_render_system_info@pecker_opengles_v2_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z:PROC ; pecker_sdk::pecker_opengles_v2_object::get_render_system_info
EXTRN	?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ:PROC ; pecker_sdk::pecker_render_object::get_this_reference
EXTRN	?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ:PROC ; pecker_sdk::pecker_render_object::release_this_reference
;	COMDAT ??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\opengles\pecker_buffer_gl.cpp
rdata$r	SEGMENT
??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ DD 00H ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVpecker_vertex_buffer_gles2@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R13?0A@EA@pecker_render_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_render_object@pecker_sdk@@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R2pecker_render_object@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R3pecker_render_object@pecker_sdk@@8 DD 00H		; pecker_sdk::pecker_render_object::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVpecker_render_object@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AVpecker_render_object@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_render_object `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVpecker_render_object@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_render_object@pecker_sdk@@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R2pecker_opengles_v2_object@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R3pecker_opengles_v2_object@pecker_sdk@@8 DD 00H	; pecker_sdk::pecker_opengles_v2_object::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_opengles_v2_object `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVpecker_opengles_v2_object@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R13?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R2Ipecker_graphic_buffer@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8 ; pecker_sdk::Ipecker_graphic_buffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R3Ipecker_graphic_buffer@pecker_sdk@@8 DD 00H	; pecker_sdk::Ipecker_graphic_buffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::Ipecker_graphic_buffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIpecker_graphic_buffer@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8 DD FLAT:??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8 ; pecker_sdk::Ipecker_graphic_buffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2Ipecker_vertex_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R2Ipecker_vertex_buffer@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@Ipecker_vertex_buffer@pecker_sdk@@8 ; pecker_sdk::Ipecker_vertex_buffer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3Ipecker_vertex_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R3Ipecker_vertex_buffer@pecker_sdk@@8 DD 00H		; pecker_sdk::Ipecker_vertex_buffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Ipecker_vertex_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::Ipecker_vertex_buffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIpecker_vertex_buffer@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Ipecker_vertex_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Ipecker_vertex_buffer@pecker_sdk@@8 DD FLAT:??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8 ; pecker_sdk::Ipecker_vertex_buffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Ipecker_vertex_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@pecker_vertex_buffer_gles2@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_vertex_buffer_gles2@pecker_sdk@@@8 ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R2pecker_vertex_buffer_gles2@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@pecker_vertex_buffer_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_vertex_buffer@pecker_sdk@@8
	DD	FLAT:??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8
	DD	FLAT:??_R13?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8
	DD	FLAT:??_R13?0A@EA@pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R3pecker_vertex_buffer_gles2@pecker_sdk@@8 DD 00H	; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVpecker_vertex_buffer_gles2@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AVpecker_vertex_buffer_gles2@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_vertex_buffer_gles2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVpecker_vertex_buffer_gles2@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@
rdata$r	SEGMENT
??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@ DD 00H ; pecker_sdk::pecker_vertex_buffer_gles2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVpecker_vertex_buffer_gles2@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_vertex_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
CONST	SEGMENT
??_7pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ DD FLAT:??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_vertex_buffer_gles2::`vftable'
	DD	FLAT:??_Epecker_vertex_buffer_gles2@pecker_sdk@@W3AEPAXI@Z
	DD	FLAT:?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z
	DD	FLAT:?get_render_system_info@pecker_opengles_v2_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z
	DD	FLAT:?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ
	DD	FLAT:?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_object_location@pecker_vertex_buffer_gles2@pecker_sdk@@UBEIXZ
CONST	ENDS
;	COMDAT ??_7pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@
CONST	SEGMENT
??_7pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@ DD FLAT:??_R4pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@ ; pecker_sdk::pecker_vertex_buffer_gles2::`vftable'
	DD	FLAT:??_Epecker_vertex_buffer_gles2@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:?allocate_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJHQAX@Z
	DD	FLAT:?release_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_buffer_size@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ
	DD	FLAT:?get_data@pecker_vertex_buffer_gles2@pecker_sdk@@UBEPBEXZ
	DD	FLAT:?lock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z
	DD	FLAT:?unlock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?allocate_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?release_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
	DD	FLAT:?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?set_defualt_gpu_buffer_update_info@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
	DD	FLAT:?bind_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_buffer_type@Ipecker_vertex_buffer@pecker_sdk@@UBEIXZ
	DD	FLAT:?add_defualt_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUvertex_attribute_info@2@@Z
	DD	FLAT:?clear_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_vertex_attribute_reference@pecker_vertex_buffer_gles2@pecker_sdk@@UAEPAUvertex_attribute_info@2@I@Z
	DD	FLAT:?get_vertex_attribute_setting_count@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ
	DD	FLAT:?set_vbo_using_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJI@Z
	DD	FLAT:?use_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?finish_using_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ$1
__ehfuncinfo$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ PROC	; pecker_sdk::pecker_vertex_buffer_gles2::pecker_vertex_buffer_gles2, COMDAT
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_vertex_buffer@pecker_sdk@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	push	OFFSET ??_Fvertex_attribute_info@pecker_sdk@@QAEXXZ
	push	8
	push	24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	push	0
	push	-1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??0update_gpu_ram_info@pecker_sdk@@QAE@IHH@Z ; pecker_sdk::update_gpu_ram_info::update_gpu_ram_info
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+232], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+236], 0

; 21   : 	_M_vertex_buffer._M_buffer = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 22   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer
__unwindfunclet$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
__ehhandler$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0pecker_vertex_buffer_gles2@pecker_sdk@@QAE@XZ ENDP	; pecker_sdk::pecker_vertex_buffer_gles2::pecker_vertex_buffer_gles2
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\pecker_buffer.h
;	COMDAT ??0update_gpu_ram_info@pecker_sdk@@QAE@IHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_usage_type$ = 8					; size = 4
_offset$ = 12						; size = 4
_update_size$ = 16					; size = 4
??0update_gpu_ram_info@pecker_sdk@@QAE@IHH@Z PROC	; pecker_sdk::update_gpu_ram_info::update_gpu_ram_info, COMDAT
; _this$ = ecx

; 35   : 																					{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _usage_type$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _update_size$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 36   : 																						;
; 37   : 																					}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0update_gpu_ram_info@pecker_sdk@@QAE@IHH@Z ENDP	; pecker_sdk::update_gpu_ram_info::update_gpu_ram_info
_TEXT	ENDS
PUBLIC	??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ	; pecker_sdk::Ipecker_graphic_buffer::~Ipecker_graphic_buffer
PUBLIC	??_7Ipecker_vertex_buffer@pecker_sdk@@6B@	; pecker_sdk::Ipecker_vertex_buffer::`vftable'
PUBLIC	??_R4Ipecker_vertex_buffer@pecker_sdk@@6B@	; pecker_sdk::Ipecker_vertex_buffer::`RTTI Complete Object Locator'
EXTRN	??_EIpecker_vertex_buffer@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::Ipecker_vertex_buffer::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R4Ipecker_vertex_buffer@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4Ipecker_vertex_buffer@pecker_sdk@@6B@ DD 00H	; pecker_sdk::Ipecker_vertex_buffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8
	DD	FLAT:??_R3Ipecker_vertex_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7Ipecker_vertex_buffer@pecker_sdk@@6B@
CONST	SEGMENT
??_7Ipecker_vertex_buffer@pecker_sdk@@6B@ DD FLAT:??_R4Ipecker_vertex_buffer@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_vertex_buffer::`vftable'
	DD	FLAT:??_EIpecker_vertex_buffer@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?get_buffer_type@Ipecker_vertex_buffer@pecker_sdk@@UBEIXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ PROC	; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer, COMDAT
; _this$ = ecx

; 124  : 	virtual ~Ipecker_vertex_buffer(){;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_vertex_buffer@pecker_sdk@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_graphic_buffer::~Ipecker_graphic_buffer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ ENDP	; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer
_TEXT	ENDS
PUBLIC	??_7Ipecker_graphic_buffer@pecker_sdk@@6B@	; pecker_sdk::Ipecker_graphic_buffer::`vftable'
PUBLIC	??_R4Ipecker_graphic_buffer@pecker_sdk@@6B@	; pecker_sdk::Ipecker_graphic_buffer::`RTTI Complete Object Locator'
EXTRN	??_EIpecker_graphic_buffer@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::Ipecker_graphic_buffer::`vector deleting destructor'
;	COMDAT ??_R4Ipecker_graphic_buffer@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4Ipecker_graphic_buffer@pecker_sdk@@6B@ DD 00H	; pecker_sdk::Ipecker_graphic_buffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8
	DD	FLAT:??_R3Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7Ipecker_graphic_buffer@pecker_sdk@@6B@
CONST	SEGMENT
??_7Ipecker_graphic_buffer@pecker_sdk@@6B@ DD FLAT:??_R4Ipecker_graphic_buffer@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_graphic_buffer::`vftable'
	DD	FLAT:??_EIpecker_graphic_buffer@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ PROC	; pecker_sdk::Ipecker_graphic_buffer::~Ipecker_graphic_buffer, COMDAT
; _this$ = ecx

; 63   : 	virtual ~Ipecker_graphic_buffer(){;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_graphic_buffer@pecker_sdk@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ ENDP	; pecker_sdk::Ipecker_graphic_buffer::~Ipecker_graphic_buffer
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIpecker_graphic_buffer@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIpecker_graphic_buffer@pecker_sdk@@UAEPAXI@Z PROC	; pecker_sdk::Ipecker_graphic_buffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_graphic_buffer::~Ipecker_graphic_buffer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIpecker_graphic_buffer@pecker_sdk@@UAEPAXI@Z ENDP	; pecker_sdk::Ipecker_graphic_buffer::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GIpecker_vertex_buffer@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIpecker_vertex_buffer@pecker_sdk@@UAEPAXI@Z PROC	; pecker_sdk::Ipecker_vertex_buffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIpecker_vertex_buffer@pecker_sdk@@UAEPAXI@Z ENDP	; pecker_sdk::Ipecker_vertex_buffer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_vertex_buffer_gles2::~pecker_vertex_buffer_gles2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gpecker_vertex_buffer_gles2@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gpecker_vertex_buffer_gles2@pecker_sdk@@UAEPAXI@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_vertex_buffer_gles2::~pecker_vertex_buffer_gles2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gpecker_vertex_buffer_gles2@pecker_sdk@@UAEPAXI@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0Ipecker_graphic_buffer@pecker_sdk@@QAE@XZ	; pecker_sdk::Ipecker_graphic_buffer::Ipecker_graphic_buffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Ipecker_vertex_buffer@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Ipecker_vertex_buffer@pecker_sdk@@QAE@XZ PROC	; pecker_sdk::Ipecker_vertex_buffer::Ipecker_vertex_buffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_graphic_buffer@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_vertex_buffer@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Ipecker_vertex_buffer@pecker_sdk@@QAE@XZ ENDP	; pecker_sdk::Ipecker_vertex_buffer::Ipecker_vertex_buffer
_TEXT	ENDS
PUBLIC	??_7pecker_opengles_v2_object@pecker_sdk@@6B@	; pecker_sdk::pecker_opengles_v2_object::`vftable'
PUBLIC	??_R4pecker_opengles_v2_object@pecker_sdk@@6B@	; pecker_sdk::pecker_opengles_v2_object::`RTTI Complete Object Locator'
EXTRN	??0pecker_render_object@pecker_sdk@@QAE@XZ:PROC	; pecker_sdk::pecker_render_object::pecker_render_object
EXTRN	??_Epecker_opengles_v2_object@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::pecker_opengles_v2_object::`vector deleting destructor'
EXTRN	?get_object_location@pecker_opengles_v2_object@pecker_sdk@@UBEIXZ:PROC ; pecker_sdk::pecker_opengles_v2_object::get_object_location
;	COMDAT ??_R4pecker_opengles_v2_object@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4pecker_opengles_v2_object@pecker_sdk@@6B@ DD 00H	; pecker_sdk::pecker_opengles_v2_object::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7pecker_opengles_v2_object@pecker_sdk@@6B@
CONST	SEGMENT
??_7pecker_opengles_v2_object@pecker_sdk@@6B@ DD FLAT:??_R4pecker_opengles_v2_object@pecker_sdk@@6B@ ; pecker_sdk::pecker_opengles_v2_object::`vftable'
	DD	FLAT:??_Epecker_opengles_v2_object@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z
	DD	FLAT:?get_render_system_info@pecker_opengles_v2_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z
	DD	FLAT:?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ
	DD	FLAT:?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_object_location@pecker_opengles_v2_object@pecker_sdk@@UBEIXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ PROC	; pecker_sdk::pecker_opengles_v2_object::pecker_opengles_v2_object, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0pecker_render_object@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_render_object::pecker_render_object
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_opengles_v2_object@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ ENDP	; pecker_sdk::pecker_opengles_v2_object::pecker_opengles_v2_object
_TEXT	ENDS
EXTRN	??1pecker_render_object@pecker_sdk@@UAE@XZ:PROC	; pecker_sdk::pecker_render_object::~pecker_render_object
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ PROC	; pecker_sdk::pecker_opengles_v2_object::~pecker_opengles_v2_object, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1pecker_render_object@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_render_object::~pecker_render_object
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ ENDP	; pecker_sdk::pecker_opengles_v2_object::~pecker_opengles_v2_object
_TEXT	ENDS
PUBLIC	??0vertex_attribute_info@pecker_sdk@@QAE@HHJII_N0@Z ; pecker_sdk::vertex_attribute_info::vertex_attribute_info
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Fvertex_attribute_info@pecker_sdk@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_Fvertex_attribute_info@pecker_sdk@@QAEXXZ PROC	; pecker_sdk::vertex_attribute_info::`default constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0vertex_attribute_info@pecker_sdk@@QAE@HHJII_N0@Z ; pecker_sdk::vertex_attribute_info::vertex_attribute_info
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_Fvertex_attribute_info@pecker_sdk@@QAEXXZ ENDP	; pecker_sdk::vertex_attribute_info::`default constructor closure'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0vertex_attribute_info@pecker_sdk@@QAE@HHJII_N0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_attribute_index$ = 8					; size = 4
_attribute_size$ = 12					; size = 4
_stride$ = 16						; size = 4
_attribute_data_type$ = 20				; size = 4
_offset$ = 24						; size = 4
_normalized$ = 28					; size = 1
_use_vbo$ = 32						; size = 1
??0vertex_attribute_info@pecker_sdk@@QAE@HHJII_N0@Z PROC ; pecker_sdk::vertex_attribute_info::vertex_attribute_info, COMDAT
; _this$ = ecx

; 117  : 											{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _attribute_index$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _attribute_size$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stride$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _attribute_data_type$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _normalized$[ebp]
	mov	BYTE PTR [eax+20], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _use_vbo$[ebp]
	mov	BYTE PTR [eax+21], cl

; 118  : 												;
; 119  : 											}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
??0vertex_attribute_info@pecker_sdk@@QAE@HHJII_N0@Z ENDP ; pecker_sdk::vertex_attribute_info::vertex_attribute_info
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0Ipecker_graphic_buffer@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Ipecker_graphic_buffer@pecker_sdk@@QAE@XZ PROC	; pecker_sdk::Ipecker_graphic_buffer::Ipecker_graphic_buffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_graphic_buffer@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Ipecker_graphic_buffer@pecker_sdk@@QAE@XZ ENDP	; pecker_sdk::Ipecker_graphic_buffer::Ipecker_graphic_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gpecker_opengles_v2_object@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gpecker_opengles_v2_object@pecker_sdk@@UAEPAXI@Z PROC ; pecker_sdk::pecker_opengles_v2_object::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gpecker_opengles_v2_object@pecker_sdk@@UAEPAXI@Z ENDP ; pecker_sdk::pecker_opengles_v2_object::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\opengles\pecker_buffer_gl.cpp
xdata$x	SEGMENT
__unwindtable$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ$1
__ehfuncinfo$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ PROC	; pecker_sdk::pecker_vertex_buffer_gles2::~pecker_vertex_buffer_gles2, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_vertex_buffer_gles2@pecker_sdk@@6BIpecker_vertex_buffer@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7pecker_vertex_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 26   : 	release_buffer_from_cpu_ram();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_cpu_ram

; 27   : 	release_buffer_from_gpu_ram();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_gpu_ram

; 28   : 	
; 29   : 	_M_bytes_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 30   : 	_M_gpu_target = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 31   : 	_M_vertex_attribute_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 32   : 	_M_vertex_buffer._M_buffer = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 33   : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Ipecker_vertex_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_buffer::~Ipecker_vertex_buffer
__unwindfunclet$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
__ehhandler$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1pecker_vertex_buffer_gles2@pecker_sdk@@UAE@XZ ENDP	; pecker_sdk::pecker_vertex_buffer_gles2::~pecker_vertex_buffer_gles2
PUBLIC	?allocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAPAEH@Z ; pecker_sdk::pecker_simple_allocator<unsigned char>::allocate_objects
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJHQAX@Z
_TEXT	SEGMENT
_i$68575 = -32						; size = 4
_pbyte_data_buffer$ = -20				; size = 4
_this$ = -8						; size = 4
_number_of_bytes$ = 8					; size = 4
_pdata_buffer$ = 12					; size = 4
?allocate_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJHQAX@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::allocate_buffer_from_cpu_ram, COMDAT
; _this$ = ecx

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 	if (null != _M_vertex_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN7@allocate_b

; 38   : 	{
; 39   : 		return P_UNIQUE_ERR;

	mov	eax, -4					; fffffffcH
	jmp	SHORT $LN8@allocate_b
$LN7@allocate_b:

; 40   : 	}
; 41   : 
; 42   : 	_M_vertex_buffer._M_bytes = render_buffer_allocator::allocate_objects(number_of_bytes);

	mov	eax, DWORD PTR _number_of_bytes$[ebp]
	push	eax
	call	?allocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAPAEH@Z ; pecker_sdk::pecker_simple_allocator<unsigned char>::allocate_objects
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 43   : 	if (null != _M_vertex_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN6@allocate_b

; 44   : 	{
; 45   : 		_M_bytes_count = number_of_bytes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _number_of_bytes$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 46   : 	}
; 47   : 	else

	jmp	SHORT $LN5@allocate_b
$LN6@allocate_b:

; 48   : 	{
; 49   : 		return P_FAIL;

	mov	eax, 1
	jmp	SHORT $LN8@allocate_b
$LN5@allocate_b:

; 50   : 	}
; 51   : 	Byte* pbyte_data_buffer = static_cast<Byte*>(pdata_buffer);

	mov	eax, DWORD PTR _pdata_buffer$[ebp]
	mov	DWORD PTR _pbyte_data_buffer$[ebp], eax

; 52   : 	if (null != pbyte_data_buffer)

	cmp	DWORD PTR _pbyte_data_buffer$[ebp], 0
	je	SHORT $LN4@allocate_b

; 53   : 	{
; 54   : 		for (nINDEX i = 0;i<number_of_bytes;++i)

	mov	DWORD PTR _i$68575[ebp], 0
	jmp	SHORT $LN3@allocate_b
$LN2@allocate_b:
	mov	eax, DWORD PTR _i$68575[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68575[ebp], eax
$LN3@allocate_b:
	mov	eax, DWORD PTR _i$68575[ebp]
	cmp	eax, DWORD PTR _number_of_bytes$[ebp]
	jge	SHORT $LN4@allocate_b

; 55   : 		{
; 56   : 			_M_vertex_buffer._M_bytes[i] = pbyte_data_buffer[i];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pbyte_data_buffer$[ebp]
	add	edx, DWORD PTR _i$68575[ebp]
	mov	eax, DWORD PTR _i$68575[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax], dl

; 57   : 		}

	jmp	SHORT $LN2@allocate_b
$LN4@allocate_b:

; 58   : 	}
; 59   : 
; 60   : 	return P_OK;

	xor	eax, eax
$LN8@allocate_b:

; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?allocate_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJHQAX@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::allocate_buffer_from_cpu_ram
_TEXT	ENDS
PUBLIC	?deallocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAXPAE@Z ; pecker_sdk::pecker_simple_allocator<unsigned char>::deallocate_objects
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?release_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_cpu_ram, COMDAT
; _this$ = ecx

; 64   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 	if (null != _M_vertex_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@release_bu

; 66   : 	{
; 67   : 		render_buffer_allocator::deallocate_objects(_M_vertex_buffer._M_bytes);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?deallocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAXPAE@Z ; pecker_sdk::pecker_simple_allocator<unsigned char>::deallocate_objects
	add	esp, 4

; 68   : 		_M_vertex_buffer._M_bytes = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@release_bu:

; 69   : 		
; 70   : 	}
; 71   : 	_M_bytes_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 72   : 
; 73   : 	return P_OK;

	xor	eax, eax

; 74   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release_buffer_from_cpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_cpu_ram
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_buffer_size@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_buffer_size@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::get_buffer_size, COMDAT
; _this$ = ecx

; 77   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 78   : 	return _M_bytes_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_buffer_size@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::get_buffer_size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_data@pecker_vertex_buffer_gles2@pecker_sdk@@UBEPBEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_data@pecker_vertex_buffer_gles2@pecker_sdk@@UBEPBEXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::get_data, COMDAT
; _this$ = ecx

; 82   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   : 	return _M_vertex_buffer._M_bytes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 84   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_data@pecker_vertex_buffer_gles2@pecker_sdk@@UBEPBEXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::get_data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?lock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pdata$ = 8						; size = 4
?lock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::lock_data, COMDAT
; _this$ = ecx

; 87   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 88   : 	if (null == _M_vertex_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@lock_data

; 89   : 	{
; 90   : 		return P_ERR;

	or	eax, -1
	jmp	SHORT $LN3@lock_data

; 91   : 	}
; 92   : 	else

	jmp	SHORT $LN3@lock_data
$LN2@lock_data:

; 93   : 	{
; 94   : 		pdata = _M_vertex_buffer._M_bytes;

	mov	eax, DWORD PTR _pdata$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx

; 95   : 		return P_OK;

	xor	eax, eax
$LN3@lock_data:

; 96   : 	}
; 97   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?lock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::lock_data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?unlock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unlock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::unlock_data, COMDAT
; _this$ = ecx

; 100  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 	return P_OK;

	xor	eax, eax

; 102  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?unlock_data@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::unlock_data
_TEXT	ENDS
EXTRN	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ:PROC ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
EXTRN	__imp__glGenBuffers@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?allocate_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::allocate_buffer_from_gpu_ram, COMDAT
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 	if (0 == _M_gpu_target)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN1@allocate_b@2

; 107  : 	{
; 108  : 		glGenBuffers(1,&_M_gpu_target);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	esi, esp
	push	eax
	push	1
	call	DWORD PTR __imp__glGenBuffers@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 109  : 		_M_first_update_buffer = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+236], 1

; 110  : 		return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	jmp	SHORT $LN2@allocate_b@2
$LN1@allocate_b@2:

; 111  : 	}
; 112  : 	return P_UNIQUE_ERR;

	mov	eax, -4					; fffffffcH
$LN2@allocate_b@2:

; 113  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?allocate_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::allocate_buffer_from_gpu_ram
_TEXT	ENDS
EXTRN	__imp__glDeleteBuffers@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?release_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_gpu_ram, COMDAT
; _this$ = ecx

; 116  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 117  : 	glDeleteBuffers(1,&_M_gpu_target);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	esi, esp
	push	eax
	push	1
	call	DWORD PTR __imp__glDeleteBuffers@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 118  : 	_M_first_update_buffer = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+236], 1

; 119  : 	return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code

; 120  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release_buffer_from_gpu_ram@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::release_buffer_from_gpu_ram
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?set_defualt_gpu_buffer_update_info@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pupdate_info$ = 8					; size = 4
?set_defualt_gpu_buffer_update_info@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::set_defualt_gpu_buffer_update_info, COMDAT
; _this$ = ecx

; 123  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  : 	_M_defual_gpu_buffer_setting = pupdate_info;

	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 125  : 	return P_OK;

	xor	eax, eax

; 126  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?set_defualt_gpu_buffer_update_info@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::set_defualt_gpu_buffer_update_info
_TEXT	ENDS
EXTRN	__imp__glBufferData@16:PROC
EXTRN	__imp__glBufferSubData@16:PROC
EXTRN	__imp__glBindBuffer@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_error_code$ = -20					; size = 4
_this$ = -8						; size = 4
?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::update_gpu_buffer, COMDAT
; _this$ = ecx

; 129  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  : 	glBindBuffer(GL_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34962					; 00008892H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  : 	HResult error_code;
; 132  : 	if (!_M_first_update_buffer && (_M_defual_gpu_buffer_setting._M_offset != 0 || 
; 133  : 		_M_defual_gpu_buffer_setting._M_update_size != _M_bytes_count))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+236]
	test	ecx, ecx
	jne	SHORT $LN4@update_gpu
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+224], 0
	jne	SHORT $LN3@update_gpu
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+228]
	cmp	edx, DWORD PTR [ecx+16]
	je	SHORT $LN4@update_gpu
$LN3@update_gpu:

; 134  : 	{
; 135  : 		glBufferSubData(_M_gpu_target,
; 136  : 			_M_defual_gpu_buffer_setting._M_offset,
; 137  : 			_M_defual_gpu_buffer_setting._M_update_size,
; 138  : 			_M_vertex_buffer._M_bytes + _M_defual_gpu_buffer_setting._M_offset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+224]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+228]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR __imp__glBufferSubData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 139  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 140  : 	}
; 141  : 	else

	jmp	SHORT $LN2@update_gpu
$LN4@update_gpu:

; 142  : 	{
; 143  : 		glBufferData(_M_gpu_target,
; 144  : 			_M_bytes_count,
; 145  : 			_M_vertex_buffer._M_bytes,
; 146  : 			_M_defual_gpu_buffer_setting._M_usage_type);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__glBufferData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 147  : 
; 148  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 149  : 		if (P_OK == error_code)

	cmp	DWORD PTR _error_code$[ebp], 0
	jne	SHORT $LN2@update_gpu

; 150  : 		{
; 151  : 			_M_first_update_buffer = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+236], 0
$LN2@update_gpu:

; 152  : 		}
; 153  : 	}
; 154  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]

; 155  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::update_gpu_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
_TEXT	SEGMENT
_error_code$ = -20					; size = 4
_this$ = -8						; size = 4
_pupdate_info$ = 8					; size = 4
?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::update_gpu_buffer, COMDAT
; _this$ = ecx

; 158  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 159  : 	glBindBuffer(GL_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34962					; 00008892H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 160  : 	HResult error_code;
; 161  : 	if (!_M_first_update_buffer &&(pupdate_info._M_offset != 0 || 
; 162  : 		pupdate_info._M_update_size != _M_bytes_count))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+236]
	test	ecx, ecx
	jne	SHORT $LN4@update_gpu@2
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@update_gpu@2
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+16]
	je	SHORT $LN4@update_gpu@2
$LN3@update_gpu@2:

; 163  : 	{
; 164  : 		glBufferSubData(_M_gpu_target,
; 165  : 			pupdate_info._M_offset,
; 166  : 			pupdate_info._M_update_size,
; 167  : 			_M_vertex_buffer._M_bytes + pupdate_info._M_offset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pupdate_info$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pupdate_info$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR __imp__glBufferSubData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 168  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 169  : 	}
; 170  : 	else

	jmp	SHORT $LN2@update_gpu@2
$LN4@update_gpu@2:

; 171  : 	{
; 172  : 		glBufferData(_M_gpu_target,
; 173  : 			_M_bytes_count,
; 174  : 			_M_vertex_buffer._M_bytes,
; 175  : 			pupdate_info._M_usage_type);

	mov	esi, esp
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__glBufferData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 176  : 
; 177  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 178  : 		if (P_OK == error_code)

	cmp	DWORD PTR _error_code$[ebp], 0
	jne	SHORT $LN2@update_gpu@2

; 179  : 		{
; 180  : 			_M_first_update_buffer = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+236], 0
$LN2@update_gpu@2:

; 181  : 		}
; 182  : 	}
; 183  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]

; 184  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?update_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::update_gpu_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?bind_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?bind_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::bind_gpu_buffer, COMDAT
; _this$ = ecx

; 187  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 188  : 	glBindBuffer(GL_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34962					; 00008892H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 189  : 	return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code

; 190  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?bind_gpu_buffer@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::bind_gpu_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?add_defualt_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUvertex_attribute_info@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vertex_attri_info$ = 8					; size = 4
?add_defualt_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUvertex_attribute_info@2@@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::add_defualt_vertex_attribute_setting, COMDAT
; _this$ = ecx

; 193  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 194  : 	if (vertex_attri_info._M_attribute_index < MAX_VERTEXT_ATTRIBUTE_COUNT &&
; 195  : 		vertex_attri_info._M_attribute_index >= 0)

	mov	eax, DWORD PTR _vertex_attri_info$[ebp]
	cmp	DWORD PTR [eax], 8
	jae	SHORT $LN3@add_defual
	mov	eax, DWORD PTR _vertex_attri_info$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN3@add_defual

; 196  : 	{
; 197  : 		if (_M_vertex_attribute[vertex_attri_info._M_attribute_index]._M_attribute_index < 0)

	mov	eax, DWORD PTR _vertex_attri_info$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+28], 0
	jge	SHORT $LN2@add_defual

; 198  : 		{
; 199  : 			++_M_vertex_attribute_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN2@add_defual:

; 200  : 		}
; 201  : 		_M_vertex_attribute[vertex_attri_info._M_attribute_index] = vertex_attri_info;

	mov	eax, DWORD PTR _vertex_attri_info$[ebp]
	mov	ecx, DWORD PTR _vertex_attri_info$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx+28]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], ecx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+20], eax

; 202  : 		return P_OK;

	xor	eax, eax
	jmp	SHORT $LN4@add_defual

; 203  : 	}
; 204  : 	else

	jmp	SHORT $LN4@add_defual
$LN3@add_defual:

; 205  : 	{
; 206  : 		return P_INVALID_VALUE;

	mov	eax, -2					; fffffffeH
$LN4@add_defual:

; 207  : 	}
; 208  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?add_defualt_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJABUvertex_attribute_info@2@@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::add_defualt_vertex_attribute_setting
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?clear_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_i$68639 = -20						; size = 4
_this$ = -8						; size = 4
?clear_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::clear_vertex_attribute_setting, COMDAT
; _this$ = ecx

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 	for (nINDEX i=0;i<MAX_VERTEXT_ATTRIBUTE_COUNT;++i)

	mov	DWORD PTR _i$68639[ebp], 0
	jmp	SHORT $LN5@clear_vert
$LN4@clear_vert:
	mov	eax, DWORD PTR _i$68639[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68639[ebp], eax
$LN5@clear_vert:
	cmp	DWORD PTR _i$68639[ebp], 8
	jae	SHORT $LN3@clear_vert

; 213  : 	{
; 214  : 		if (_M_vertex_attribute[i]._M_attribute_index >= 0)

	mov	eax, DWORD PTR _i$68639[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+28], 0
	jl	SHORT $LN2@clear_vert

; 215  : 		{
; 216  : 			_M_vertex_attribute[i]._M_attribute_index = -1;

	mov	eax, DWORD PTR _i$68639[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+28], -1

; 217  : 			--_M_vertex_attribute_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN2@clear_vert:

; 218  : 		}
; 219  : 		if (_M_vertex_attribute_count <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jg	SHORT $LN1@clear_vert

; 220  : 		{
; 221  : 			break;

	jmp	SHORT $LN3@clear_vert
$LN1@clear_vert:

; 222  : 		}
; 223  : 	}

	jmp	SHORT $LN4@clear_vert
$LN3@clear_vert:

; 224  : 	return P_OK;

	xor	eax, eax

; 225  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear_vertex_attribute_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::clear_vertex_attribute_setting
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_vertex_attribute_reference@pecker_vertex_buffer_gles2@pecker_sdk@@UAEPAUvertex_attribute_info@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vex_info_index$ = 8					; size = 4
?get_vertex_attribute_reference@pecker_vertex_buffer_gles2@pecker_sdk@@UAEPAUvertex_attribute_info@2@I@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::get_vertex_attribute_reference, COMDAT
; _this$ = ecx

; 228  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 229  : 	if (vex_info_index < MAX_VERTEXT_ATTRIBUTE_COUNT && vex_info_index >= 0)

	cmp	DWORD PTR _vex_info_index$[ebp], 8
	jae	SHORT $LN2@get_vertex
	cmp	DWORD PTR _vex_info_index$[ebp], 0
	jb	SHORT $LN2@get_vertex

; 230  : 	{
; 231  : 		return &_M_vertex_attribute[vex_info_index];

	mov	eax, DWORD PTR _vex_info_index$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+28]
	jmp	SHORT $LN3@get_vertex

; 232  : 	}
; 233  : 	else

	jmp	SHORT $LN3@get_vertex
$LN2@get_vertex:

; 234  : 	{
; 235  : 		return null;

	xor	eax, eax
$LN3@get_vertex:

; 236  : 	}
; 237  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get_vertex_attribute_reference@pecker_vertex_buffer_gles2@pecker_sdk@@UAEPAUvertex_attribute_info@2@I@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::get_vertex_attribute_reference
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_vertex_attribute_setting_count@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_vertex_attribute_setting_count@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::get_vertex_attribute_setting_count, COMDAT
; _this$ = ecx

; 240  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 	return _M_vertex_attribute_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 242  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_vertex_attribute_setting_count@pecker_vertex_buffer_gles2@pecker_sdk@@UBEHXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::get_vertex_attribute_setting_count
_TEXT	ENDS
EXTRN	__imp__glVertexAttribPointer@24:PROC
EXTRN	__imp__glEnableVertexAttribArray@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?use_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
_pIndata$68663 = -44					; size = 4
_i$68658 = -32						; size = 4
_set_count$ = -20					; size = 4
_this$ = -8						; size = 4
?use_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::use_vertex_attrible, COMDAT
; _this$ = ecx

; 245  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 	glBindBuffer(GL_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34962					; 00008892H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 247  : 	nSize set_count = 0;

	mov	DWORD PTR _set_count$[ebp], 0

; 248  : 	for (nINDEX i=0;i<MAX_VERTEXT_ATTRIBUTE_COUNT;++i)

	mov	DWORD PTR _i$68658[ebp], 0
	jmp	SHORT $LN12@use_vertex
$LN11@use_vertex:
	mov	eax, DWORD PTR _i$68658[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68658[ebp], eax
$LN12@use_vertex:
	cmp	DWORD PTR _i$68658[ebp], 8
	jae	$LN10@use_vertex

; 249  : 	{
; 250  : 		if (_M_vertex_attribute[i]._M_attribute_index >= 0)

	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+28], 0
	jl	$LN9@use_vertex

; 251  : 		{
; 252  : 			Byte* pIndata;
; 253  : 			switch(_M_vbo_setting)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 0
	je	SHORT $LN6@use_vertex
	cmp	DWORD PTR tv74[ebp], 1
	je	SHORT $LN5@use_vertex
	jmp	SHORT $LN4@use_vertex
$LN6@use_vertex:

; 254  : 			{
; 255  : 			case ALL_ENABLE_VBO:
; 256  : 				pIndata = null;

	mov	DWORD PTR _pIndata$68663[ebp], 0

; 257  : 				break;

	jmp	SHORT $LN7@use_vertex
$LN5@use_vertex:

; 258  : 			case ALL_DISABLE_VBO:
; 259  : 				pIndata = _M_vertex_buffer._M_bytes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pIndata$68663[ebp], ecx

; 260  : 				break;

	jmp	SHORT $LN7@use_vertex
$LN4@use_vertex:

; 261  : 			case DEFUALT_VBO:
; 262  : 			default:
; 263  : 				if (_M_vertex_attribute[i]._M_use_vbo)

	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+49]
	test	edx, edx
	je	SHORT $LN3@use_vertex

; 264  : 				{
; 265  : 					pIndata = null;

	mov	DWORD PTR _pIndata$68663[ebp], 0

; 266  : 				}
; 267  : 				else

	jmp	SHORT $LN7@use_vertex
$LN3@use_vertex:

; 268  : 				{
; 269  : 					pIndata = _M_vertex_buffer._M_bytes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pIndata$68663[ebp], ecx
$LN7@use_vertex:

; 270  : 				}
; 271  : 				break;
; 272  : 			}
; 273  : 			glEnableVertexAttribArray(_M_vertex_attribute[i]._M_attribute_index);

	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+28]
	push	edx
	call	DWORD PTR __imp__glEnableVertexAttribArray@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 274  : 			glVertexAttribPointer(_M_vertex_attribute[i]._M_attribute_index,
; 275  : 				_M_vertex_attribute[i]._M_attribute_size,
; 276  : 				_M_vertex_attribute[i]._M_attribute_data_type,
; 277  : 				_M_vertex_attribute[i]._M_normalized,
; 278  : 				_M_vertex_attribute[i]._M_stride,
; 279  : 				_M_vertex_attribute[i]._M_offset + pIndata);

	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pIndata$68663[ebp]
	add	edx, DWORD PTR [ecx+eax+44]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+36]
	push	edx
	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+48]
	push	edx
	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+40]
	push	edx
	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+32]
	push	edx
	mov	eax, DWORD PTR _i$68658[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+28]
	push	edx
	call	DWORD PTR __imp__glVertexAttribPointer@24
	cmp	esi, esp
	call	__RTC_CheckEsp

; 280  : 			++set_count;

	mov	eax, DWORD PTR _set_count$[ebp]
	add	eax, 1
	mov	DWORD PTR _set_count$[ebp], eax
$LN9@use_vertex:

; 281  : 		}
; 282  : 
; 283  : 		if (set_count >= _M_vertex_attribute_count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _set_count$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jl	SHORT $LN1@use_vertex

; 284  : 		{
; 285  : 			break;

	jmp	SHORT $LN10@use_vertex
$LN1@use_vertex:

; 286  : 		}
; 287  : 	}

	jmp	$LN11@use_vertex
$LN10@use_vertex:

; 288  : 	return pecker_vertex_buffer_gles2::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code

; 289  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?use_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::use_vertex_attrible
_TEXT	ENDS
EXTRN	__imp__glDisableVertexAttribArray@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?finish_using_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_i$68678 = -32						; size = 4
_set_count$ = -20					; size = 4
_this$ = -8						; size = 4
?finish_using_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::finish_using_vertex_attrible, COMDAT
; _this$ = ecx

; 292  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 	glBindBuffer(GL_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34962					; 00008892H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 294  : 	nSize set_count = 0;

	mov	DWORD PTR _set_count$[ebp], 0

; 295  : 	for (nINDEX i=0;i<MAX_VERTEXT_ATTRIBUTE_COUNT;++i)

	mov	DWORD PTR _i$68678[ebp], 0
	jmp	SHORT $LN5@finish_usi
$LN4@finish_usi:
	mov	eax, DWORD PTR _i$68678[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68678[ebp], eax
$LN5@finish_usi:
	cmp	DWORD PTR _i$68678[ebp], 8
	jae	SHORT $LN3@finish_usi

; 296  : 	{
; 297  : 		if (_M_vertex_attribute[i]._M_attribute_index >= 0)

	mov	eax, DWORD PTR _i$68678[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+28], 0
	jl	SHORT $LN2@finish_usi

; 298  : 		{
; 299  : 			glDisableVertexAttribArray(_M_vertex_attribute[i]._M_attribute_index);

	mov	eax, DWORD PTR _i$68678[ebp]
	imul	eax, 24					; 00000018H
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+28]
	push	edx
	call	DWORD PTR __imp__glDisableVertexAttribArray@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 300  : 			++set_count;

	mov	eax, DWORD PTR _set_count$[ebp]
	add	eax, 1
	mov	DWORD PTR _set_count$[ebp], eax
$LN2@finish_usi:

; 301  : 		}
; 302  : 
; 303  : 		if (set_count >= _M_vertex_attribute_count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _set_count$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jl	SHORT $LN1@finish_usi

; 304  : 		{
; 305  : 			break;

	jmp	SHORT $LN3@finish_usi
$LN1@finish_usi:

; 306  : 		}
; 307  : 	}

	jmp	SHORT $LN4@finish_usi
$LN3@finish_usi:

; 308  : 	return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code

; 309  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?finish_using_vertex_attrible@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::finish_using_vertex_attrible
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?set_vbo_using_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_setting$ = 8						; size = 4
?set_vbo_using_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJI@Z PROC ; pecker_sdk::pecker_vertex_buffer_gles2::set_vbo_using_setting, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 	if (setting < VBO_USING_SETTING_COUNT)

	cmp	DWORD PTR _setting$[ebp], 3
	jae	SHORT $LN1@set_vbo_us

; 314  : 	{
; 315  : 		_M_vbo_setting = setting;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _setting$[ebp]
	mov	DWORD PTR [eax+232], ecx

; 316  : 		return P_OK;

	xor	eax, eax
	jmp	SHORT $LN2@set_vbo_us
$LN1@set_vbo_us:

; 317  : 	}
; 318  : 	return P_INVALID_VALUE;

	mov	eax, -2					; fffffffeH
$LN2@set_vbo_us:

; 319  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?set_vbo_using_setting@pecker_vertex_buffer_gles2@pecker_sdk@@UAEJI@Z ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::set_vbo_using_setting
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_object_location@pecker_vertex_buffer_gles2@pecker_sdk@@UBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_object_location@pecker_vertex_buffer_gles2@pecker_sdk@@UBEIXZ PROC ; pecker_sdk::pecker_vertex_buffer_gles2::get_object_location, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	return _M_gpu_target;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 324  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_object_location@pecker_vertex_buffer_gles2@pecker_sdk@@UBEIXZ ENDP ; pecker_sdk::pecker_vertex_buffer_gles2::get_object_location
_TEXT	ENDS
PUBLIC	??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ	; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer
PUBLIC	??_7pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_index_buffer_gles2::`vftable'
PUBLIC	??_7pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@ ; pecker_sdk::pecker_index_buffer_gles2::`vftable'
PUBLIC	??0Ipecker_index_buffer@pecker_sdk@@QAE@XZ	; pecker_sdk::Ipecker_index_buffer::Ipecker_index_buffer
PUBLIC	??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_index_buffer_gles2::pecker_index_buffer_gles2
PUBLIC	??_R4pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@ ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVpecker_index_buffer_gles2@pecker_sdk@@@8 ; pecker_sdk::pecker_index_buffer_gles2 `RTTI Type Descriptor'
PUBLIC	??_R3pecker_index_buffer_gles2@pecker_sdk@@8	; pecker_sdk::pecker_index_buffer_gles2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2pecker_index_buffer_gles2@pecker_sdk@@8	; pecker_sdk::pecker_index_buffer_gles2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@pecker_index_buffer_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Ipecker_index_buffer@pecker_sdk@@8 ; pecker_sdk::Ipecker_index_buffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIpecker_index_buffer@pecker_sdk@@@8	; pecker_sdk::Ipecker_index_buffer `RTTI Type Descriptor'
PUBLIC	??_R3Ipecker_index_buffer@pecker_sdk@@8		; pecker_sdk::Ipecker_index_buffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Ipecker_index_buffer@pecker_sdk@@8		; pecker_sdk::Ipecker_index_buffer::`RTTI Base Class Array'
PUBLIC	?allocate_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJHQAX@Z ; pecker_sdk::pecker_index_buffer_gles2::allocate_buffer_from_cpu_ram
PUBLIC	?release_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_cpu_ram
PUBLIC	?get_buffer_size@pecker_index_buffer_gles2@pecker_sdk@@UBEHXZ ; pecker_sdk::pecker_index_buffer_gles2::get_buffer_size
PUBLIC	?get_data@pecker_index_buffer_gles2@pecker_sdk@@UBEPBEXZ ; pecker_sdk::pecker_index_buffer_gles2::get_data
PUBLIC	?lock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z ; pecker_sdk::pecker_index_buffer_gles2::lock_data
PUBLIC	?unlock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::unlock_data
PUBLIC	?allocate_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::allocate_buffer_from_gpu_ram
PUBLIC	?release_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_gpu_ram
PUBLIC	?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ; pecker_sdk::pecker_index_buffer_gles2::update_gpu_buffer
PUBLIC	?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::update_gpu_buffer
PUBLIC	?set_defualt_gpu_buffer_update_info@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ; pecker_sdk::pecker_index_buffer_gles2::set_defualt_gpu_buffer_update_info
PUBLIC	?bind_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::bind_gpu_buffer
PUBLIC	??_R4pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Complete Object Locator'
PUBLIC	??_Epecker_index_buffer_gles2@pecker_sdk@@W3AEPAXI@Z ; [thunk]:pecker_sdk::pecker_index_buffer_gles2::`vector deleting destructor'
PUBLIC	?get_object_location@pecker_index_buffer_gles2@pecker_sdk@@UBEIXZ ; pecker_sdk::pecker_index_buffer_gles2::get_object_location
EXTRN	??_Epecker_index_buffer_gles2@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::pecker_index_buffer_gles2::`vector deleting destructor'
EXTRN	?get_buffer_type@Ipecker_index_buffer@pecker_sdk@@UBEIXZ:PROC ; pecker_sdk::Ipecker_index_buffer::get_buffer_type
;	COMDAT ??_R4pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
rdata$r	SEGMENT
??_R4pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ DD 00H ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVpecker_index_buffer_gles2@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2Ipecker_index_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R2Ipecker_index_buffer@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@Ipecker_index_buffer@pecker_sdk@@8 ; pecker_sdk::Ipecker_index_buffer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3Ipecker_index_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R3Ipecker_index_buffer@pecker_sdk@@8 DD 00H		; pecker_sdk::Ipecker_index_buffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Ipecker_index_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIpecker_index_buffer@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AUIpecker_index_buffer@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::Ipecker_index_buffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIpecker_index_buffer@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Ipecker_index_buffer@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Ipecker_index_buffer@pecker_sdk@@8 DD FLAT:??_R0?AUIpecker_index_buffer@pecker_sdk@@@8 ; pecker_sdk::Ipecker_index_buffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Ipecker_index_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@pecker_index_buffer_gles2@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_index_buffer_gles2@pecker_sdk@@@8 ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R2pecker_index_buffer_gles2@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@pecker_index_buffer_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_index_buffer@pecker_sdk@@8
	DD	FLAT:??_R1A@?0A@EA@Ipecker_graphic_buffer@pecker_sdk@@8
	DD	FLAT:??_R13?0A@EA@pecker_opengles_v2_object@pecker_sdk@@8
	DD	FLAT:??_R13?0A@EA@pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R3pecker_index_buffer_gles2@pecker_sdk@@8 DD 00H	; pecker_sdk::pecker_index_buffer_gles2::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVpecker_index_buffer_gles2@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AVpecker_index_buffer_gles2@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_index_buffer_gles2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVpecker_index_buffer_gles2@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R4pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@
rdata$r	SEGMENT
??_R4pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@ DD 00H ; pecker_sdk::pecker_index_buffer_gles2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVpecker_index_buffer_gles2@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_index_buffer_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
CONST	SEGMENT
??_7pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ DD FLAT:??_R4pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_index_buffer_gles2::`vftable'
	DD	FLAT:??_Epecker_index_buffer_gles2@pecker_sdk@@W3AEPAXI@Z
	DD	FLAT:?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z
	DD	FLAT:?get_render_system_info@pecker_opengles_v2_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z
	DD	FLAT:?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ
	DD	FLAT:?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_object_location@pecker_index_buffer_gles2@pecker_sdk@@UBEIXZ
CONST	ENDS
;	COMDAT ??_7pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@
CONST	SEGMENT
??_7pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@ DD FLAT:??_R4pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@ ; pecker_sdk::pecker_index_buffer_gles2::`vftable'
	DD	FLAT:??_Epecker_index_buffer_gles2@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:?allocate_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJHQAX@Z
	DD	FLAT:?release_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_buffer_size@pecker_index_buffer_gles2@pecker_sdk@@UBEHXZ
	DD	FLAT:?get_data@pecker_index_buffer_gles2@pecker_sdk@@UBEPBEXZ
	DD	FLAT:?lock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z
	DD	FLAT:?unlock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?allocate_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?release_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
	DD	FLAT:?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?set_defualt_gpu_buffer_update_info@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
	DD	FLAT:?bind_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_buffer_type@Ipecker_index_buffer@pecker_sdk@@UBEIXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ$1
__ehfuncinfo$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ PROC	; pecker_sdk::pecker_index_buffer_gles2::pecker_index_buffer_gles2, COMDAT
; _this$ = ecx

; 330  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_index_buffer@pecker_sdk@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	push	0
	push	-1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0update_gpu_ram_info@pecker_sdk@@QAE@IHH@Z ; pecker_sdk::update_gpu_ram_info::update_gpu_ram_info
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1

; 331  : 	_M_index_buffer._M_buffer = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 332  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer
__unwindfunclet$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
__ehhandler$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0pecker_index_buffer_gles2@pecker_sdk@@QAE@XZ ENDP	; pecker_sdk::pecker_index_buffer_gles2::pecker_index_buffer_gles2
PUBLIC	??_7Ipecker_index_buffer@pecker_sdk@@6B@	; pecker_sdk::Ipecker_index_buffer::`vftable'
PUBLIC	??_R4Ipecker_index_buffer@pecker_sdk@@6B@	; pecker_sdk::Ipecker_index_buffer::`RTTI Complete Object Locator'
EXTRN	??_EIpecker_index_buffer@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::Ipecker_index_buffer::`vector deleting destructor'
;	COMDAT ??_R4Ipecker_index_buffer@pecker_sdk@@6B@
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\pecker_buffer.h
rdata$r	SEGMENT
??_R4Ipecker_index_buffer@pecker_sdk@@6B@ DD 00H	; pecker_sdk::Ipecker_index_buffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIpecker_index_buffer@pecker_sdk@@@8
	DD	FLAT:??_R3Ipecker_index_buffer@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7Ipecker_index_buffer@pecker_sdk@@6B@
CONST	SEGMENT
??_7Ipecker_index_buffer@pecker_sdk@@6B@ DD FLAT:??_R4Ipecker_index_buffer@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_index_buffer::`vftable'
	DD	FLAT:??_EIpecker_index_buffer@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?get_buffer_type@Ipecker_index_buffer@pecker_sdk@@UBEIXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ PROC		; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer, COMDAT
; _this$ = ecx

; 148  : 	virtual ~Ipecker_index_buffer(){;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_index_buffer@pecker_sdk@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_graphic_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_graphic_buffer::~Ipecker_graphic_buffer
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ ENDP		; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GIpecker_index_buffer@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIpecker_index_buffer@pecker_sdk@@UAEPAXI@Z PROC	; pecker_sdk::Ipecker_index_buffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIpecker_index_buffer@pecker_sdk@@UAEPAXI@Z ENDP	; pecker_sdk::Ipecker_index_buffer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_index_buffer_gles2::~pecker_index_buffer_gles2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gpecker_index_buffer_gles2@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gpecker_index_buffer_gles2@pecker_sdk@@UAEPAXI@Z PROC ; pecker_sdk::pecker_index_buffer_gles2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_index_buffer_gles2::~pecker_index_buffer_gles2
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gpecker_index_buffer_gles2@pecker_sdk@@UAEPAXI@Z ENDP ; pecker_sdk::pecker_index_buffer_gles2::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0Ipecker_index_buffer@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Ipecker_index_buffer@pecker_sdk@@QAE@XZ PROC		; pecker_sdk::Ipecker_index_buffer::Ipecker_index_buffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_graphic_buffer@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_index_buffer@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Ipecker_index_buffer@pecker_sdk@@QAE@XZ ENDP		; pecker_sdk::Ipecker_index_buffer::Ipecker_index_buffer
_TEXT	ENDS
;	COMDAT xdata$x
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\opengles\pecker_buffer_gl.cpp
xdata$x	SEGMENT
__unwindtable$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ$1
__ehfuncinfo$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ PROC	; pecker_sdk::pecker_index_buffer_gles2::~pecker_index_buffer_gles2, COMDAT
; _this$ = ecx

; 335  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_index_buffer_gles2@pecker_sdk@@6BIpecker_index_buffer@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7pecker_index_buffer_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 336  : 	release_buffer_from_cpu_ram();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_cpu_ram

; 337  : 	release_buffer_from_gpu_ram();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_gpu_ram

; 338  : 	_M_bytes_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 339  : 
; 340  : 	_M_first_update_buffer = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1

; 341  : 	_M_gpu_target = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 342  : 	_M_index_buffer._M_buffer = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 343  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Ipecker_index_buffer@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_index_buffer::~Ipecker_index_buffer
__unwindfunclet$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
__ehhandler$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1pecker_index_buffer_gles2@pecker_sdk@@UAE@XZ ENDP	; pecker_sdk::pecker_index_buffer_gles2::~pecker_index_buffer_gles2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJHQAX@Z
_TEXT	SEGMENT
_i$68715 = -32						; size = 4
_pbyte_data_buffer$ = -20				; size = 4
_this$ = -8						; size = 4
_number_of_bytes$ = 8					; size = 4
_pdata_buffer$ = 12					; size = 4
?allocate_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJHQAX@Z PROC ; pecker_sdk::pecker_index_buffer_gles2::allocate_buffer_from_cpu_ram, COMDAT
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	if (null != _M_index_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN7@allocate_b@3

; 349  : 	{
; 350  : 		return P_UNIQUE_ERR;

	mov	eax, -4					; fffffffcH
	jmp	SHORT $LN8@allocate_b@3
$LN7@allocate_b@3:

; 351  : 	}
; 352  : 
; 353  : 	_M_index_buffer._M_bytes = render_buffer_allocator::allocate_objects(number_of_bytes);

	mov	eax, DWORD PTR _number_of_bytes$[ebp]
	push	eax
	call	?allocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAPAEH@Z ; pecker_sdk::pecker_simple_allocator<unsigned char>::allocate_objects
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 354  : 	if (null != _M_index_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN6@allocate_b@3

; 355  : 	{
; 356  : 		_M_bytes_count = number_of_bytes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _number_of_bytes$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 357  : 	}
; 358  : 	else

	jmp	SHORT $LN5@allocate_b@3
$LN6@allocate_b@3:

; 359  : 	{
; 360  : 		return P_FAIL;

	mov	eax, 1
	jmp	SHORT $LN8@allocate_b@3
$LN5@allocate_b@3:

; 361  : 	}
; 362  : 	Byte* pbyte_data_buffer = static_cast<Byte*>(pdata_buffer);

	mov	eax, DWORD PTR _pdata_buffer$[ebp]
	mov	DWORD PTR _pbyte_data_buffer$[ebp], eax

; 363  : 	if (null != pbyte_data_buffer)

	cmp	DWORD PTR _pbyte_data_buffer$[ebp], 0
	je	SHORT $LN4@allocate_b@3

; 364  : 	{
; 365  : 		for (nINDEX i = 0;i<number_of_bytes;++i)

	mov	DWORD PTR _i$68715[ebp], 0
	jmp	SHORT $LN3@allocate_b@3
$LN2@allocate_b@3:
	mov	eax, DWORD PTR _i$68715[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68715[ebp], eax
$LN3@allocate_b@3:
	mov	eax, DWORD PTR _i$68715[ebp]
	cmp	eax, DWORD PTR _number_of_bytes$[ebp]
	jge	SHORT $LN4@allocate_b@3

; 366  : 		{
; 367  : 			_M_index_buffer._M_bytes[i] = pbyte_data_buffer[i];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pbyte_data_buffer$[ebp]
	add	edx, DWORD PTR _i$68715[ebp]
	mov	eax, DWORD PTR _i$68715[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax], dl

; 368  : 		}

	jmp	SHORT $LN2@allocate_b@3
$LN4@allocate_b@3:

; 369  : 	}
; 370  : 
; 371  : 	return P_OK;

	xor	eax, eax
$LN8@allocate_b@3:

; 372  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?allocate_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJHQAX@Z ENDP ; pecker_sdk::pecker_index_buffer_gles2::allocate_buffer_from_cpu_ram
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?release_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_cpu_ram, COMDAT
; _this$ = ecx

; 375  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 376  : 	if (null != _M_index_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@release_bu@2

; 377  : 	{
; 378  : 		render_buffer_allocator::deallocate_objects(_M_index_buffer._M_bytes);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?deallocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAXPAE@Z ; pecker_sdk::pecker_simple_allocator<unsigned char>::deallocate_objects
	add	esp, 4

; 379  : 		_M_index_buffer._M_bytes = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@release_bu@2:

; 380  : 
; 381  : 	}
; 382  : 	_M_bytes_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 383  : 
; 384  : 	return P_OK;

	xor	eax, eax

; 385  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release_buffer_from_cpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_cpu_ram
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_buffer_size@pecker_index_buffer_gles2@pecker_sdk@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_buffer_size@pecker_index_buffer_gles2@pecker_sdk@@UBEHXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::get_buffer_size, COMDAT
; _this$ = ecx

; 388  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 389  : 	return _M_bytes_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 390  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_buffer_size@pecker_index_buffer_gles2@pecker_sdk@@UBEHXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::get_buffer_size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_data@pecker_index_buffer_gles2@pecker_sdk@@UBEPBEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_data@pecker_index_buffer_gles2@pecker_sdk@@UBEPBEXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::get_data, COMDAT
; _this$ = ecx

; 393  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 	return _M_index_buffer._M_bytes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 395  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_data@pecker_index_buffer_gles2@pecker_sdk@@UBEPBEXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::get_data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?lock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pdata$ = 8						; size = 4
?lock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z PROC ; pecker_sdk::pecker_index_buffer_gles2::lock_data, COMDAT
; _this$ = ecx

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 399  : 	if (null == _M_index_buffer._M_bytes)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@lock_data@2

; 400  : 	{
; 401  : 		return P_ERR;

	or	eax, -1
	jmp	SHORT $LN3@lock_data@2

; 402  : 	}
; 403  : 	else

	jmp	SHORT $LN3@lock_data@2
$LN2@lock_data@2:

; 404  : 	{
; 405  : 		pdata = _M_index_buffer._M_bytes;

	mov	eax, DWORD PTR _pdata$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx

; 406  : 		return P_OK;

	xor	eax, eax
$LN3@lock_data@2:

; 407  : 	}
; 408  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?lock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJAAPAE@Z ENDP ; pecker_sdk::pecker_index_buffer_gles2::lock_data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?unlock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unlock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::unlock_data, COMDAT
; _this$ = ecx

; 411  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 	return P_OK;

	xor	eax, eax

; 413  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?unlock_data@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::unlock_data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?allocate_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?allocate_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::allocate_buffer_from_gpu_ram, COMDAT
; _this$ = ecx

; 416  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 417  : 	if (0 == _M_gpu_target)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN1@allocate_b@4

; 418  : 	{
; 419  : 		glGenBuffers(1,&_M_gpu_target);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	esi, esp
	push	eax
	push	1
	call	DWORD PTR __imp__glGenBuffers@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 420  : 		_M_first_update_buffer = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1

; 421  : 		return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	jmp	SHORT $LN2@allocate_b@4
$LN1@allocate_b@4:

; 422  : 	}
; 423  : 	return P_UNIQUE_ERR;

	mov	eax, -4					; fffffffcH
$LN2@allocate_b@4:

; 424  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?allocate_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::allocate_buffer_from_gpu_ram
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?release_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_gpu_ram, COMDAT
; _this$ = ecx

; 427  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 428  : 	glDeleteBuffers(1,&_M_gpu_target);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	esi, esp
	push	eax
	push	1
	call	DWORD PTR __imp__glDeleteBuffers@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 429  : 	_M_first_update_buffer = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1

; 430  : 	return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code

; 431  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release_buffer_from_gpu_ram@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::release_buffer_from_gpu_ram
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?set_defualt_gpu_buffer_update_info@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pupdate_info$ = 8					; size = 4
?set_defualt_gpu_buffer_update_info@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z PROC ; pecker_sdk::pecker_index_buffer_gles2::set_defualt_gpu_buffer_update_info, COMDAT
; _this$ = ecx

; 434  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 435  : 	_M_defual_gpu_buffer_setting = pupdate_info;

	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 436  : 	return P_OK;

	xor	eax, eax

; 437  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?set_defualt_gpu_buffer_update_info@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ENDP ; pecker_sdk::pecker_index_buffer_gles2::set_defualt_gpu_buffer_update_info
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_error_code$ = -20					; size = 4
_this$ = -8						; size = 4
?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::update_gpu_buffer, COMDAT
; _this$ = ecx

; 440  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 441  : 	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34963					; 00008893H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 442  : 	HResult error_code;
; 443  : 	if (!_M_first_update_buffer && (_M_defual_gpu_buffer_setting._M_offset != 0 || 
; 444  : 		_M_defual_gpu_buffer_setting._M_update_size != _M_bytes_count))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	SHORT $LN4@update_gpu@3
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN3@update_gpu@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	cmp	edx, DWORD PTR [ecx+16]
	je	SHORT $LN4@update_gpu@3
$LN3@update_gpu@3:

; 445  : 	{
; 446  : 		glBufferSubData(_M_gpu_target,
; 447  : 			_M_defual_gpu_buffer_setting._M_offset,
; 448  : 			_M_defual_gpu_buffer_setting._M_update_size,
; 449  : 			_M_index_buffer._M_bytes + _M_defual_gpu_buffer_setting._M_offset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR __imp__glBufferSubData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 450  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 451  : 	}
; 452  : 	else

	jmp	SHORT $LN2@update_gpu@3
$LN4@update_gpu@3:

; 453  : 	{
; 454  : 		glBufferData(_M_gpu_target,
; 455  : 			_M_bytes_count,
; 456  : 			_M_index_buffer._M_bytes,
; 457  : 			_M_defual_gpu_buffer_setting._M_usage_type);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__glBufferData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 458  : 
; 459  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 460  : 		if (P_OK == error_code)

	cmp	DWORD PTR _error_code$[ebp], 0
	jne	SHORT $LN2@update_gpu@3

; 461  : 		{
; 462  : 			_M_first_update_buffer = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0
$LN2@update_gpu@3:

; 463  : 		}
; 464  : 	}
; 465  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]

; 466  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::update_gpu_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z
_TEXT	SEGMENT
_error_code$ = -20					; size = 4
_this$ = -8						; size = 4
_pupdate_info$ = 8					; size = 4
?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z PROC ; pecker_sdk::pecker_index_buffer_gles2::update_gpu_buffer, COMDAT
; _this$ = ecx

; 469  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 470  : 	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34963					; 00008893H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 471  : 	HResult error_code;
; 472  : 	if (!_M_first_update_buffer &&(pupdate_info._M_offset != 0 || 
; 473  : 		pupdate_info._M_update_size != _M_bytes_count))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	SHORT $LN4@update_gpu@4
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@update_gpu@4
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+16]
	je	SHORT $LN4@update_gpu@4
$LN3@update_gpu@4:

; 474  : 	{
; 475  : 		glBufferSubData(_M_gpu_target,
; 476  : 			pupdate_info._M_offset,
; 477  : 			pupdate_info._M_update_size,
; 478  : 			_M_index_buffer._M_bytes + pupdate_info._M_offset);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pupdate_info$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pupdate_info$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR __imp__glBufferSubData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 479  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 480  : 	}
; 481  : 	else

	jmp	SHORT $LN2@update_gpu@4
$LN4@update_gpu@4:

; 482  : 	{
; 483  : 		glBufferData(_M_gpu_target,
; 484  : 			_M_bytes_count,
; 485  : 			_M_index_buffer._M_bytes,
; 486  : 			pupdate_info._M_usage_type);

	mov	esi, esp
	mov	eax, DWORD PTR _pupdate_info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp__glBufferData@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 487  : 
; 488  : 		error_code = pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code
	mov	DWORD PTR _error_code$[ebp], eax

; 489  : 		if (P_OK == error_code)

	cmp	DWORD PTR _error_code$[ebp], 0
	jne	SHORT $LN2@update_gpu@4

; 490  : 		{
; 491  : 			_M_first_update_buffer = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0
$LN2@update_gpu@4:

; 492  : 		}
; 493  : 	}
; 494  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]

; 495  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?update_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJABUupdate_gpu_ram_info@2@@Z ENDP ; pecker_sdk::pecker_index_buffer_gles2::update_gpu_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?bind_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?bind_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::bind_gpu_buffer, COMDAT
; _this$ = ecx

; 498  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 499  : 	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,_M_gpu_target);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	34963					; 00008893H
	call	DWORD PTR __imp__glBindBuffer@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 500  : 	return pecker_opengles_v2_object::get_last_error_code();

	call	?get_last_error_code@pecker_opengles_v2_object@pecker_sdk@@SAJXZ ; pecker_sdk::pecker_opengles_v2_object::get_last_error_code

; 501  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?bind_gpu_buffer@pecker_index_buffer_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::bind_gpu_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_object_location@pecker_index_buffer_gles2@pecker_sdk@@UBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_object_location@pecker_index_buffer_gles2@pecker_sdk@@UBEIXZ PROC ; pecker_sdk::pecker_index_buffer_gles2::get_object_location, COMDAT
; _this$ = ecx

; 504  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 505  : 	return _M_gpu_target;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 506  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_object_location@pecker_index_buffer_gles2@pecker_sdk@@UBEIXZ ENDP ; pecker_sdk::pecker_index_buffer_gles2::get_object_location
_TEXT	ENDS
PUBLIC	??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vftable'
PUBLIC	??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vftable'
PUBLIC	??0Ipecker_vertex_index_buffer_collection@pecker_sdk@@QAE@XZ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::Ipecker_vertex_index_buffer_collection
PUBLIC	??_8pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@7B@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vbtable'
PUBLIC	??0pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::pecker_vertex_index_buffer_collection_gles2
PUBLIC	??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@@8 ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2 `RTTI Type Descriptor'
PUBLIC	??_R3pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIpecker_vertex_index_buffer_collection@pecker_sdk@@@8 ; pecker_sdk::Ipecker_vertex_index_buffer_collection `RTTI Type Descriptor'
PUBLIC	??_R3Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Base Class Array'
PUBLIC	??_R1A@33FA@pecker_opengles_v2_object@pecker_sdk@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Descriptor at (0,4,4,80)'
PUBLIC	??_R1A@33EA@pecker_render_object@pecker_sdk@@8	; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (0,4,4,64)'
PUBLIC	?get_vertex_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_vertex_buffer@2@I@Z ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_vertex_buffer_reference
PUBLIC	?get_index_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_index_buffer@2@I@Z ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_index_buffer_reference
PUBLIC	?get_vertex_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_vertex_buffer_count
PUBLIC	?get_index_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_index_buffer_count
PUBLIC	?bind_buffers_and_use_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::bind_buffers_and_use_attribute
PUBLIC	?finish_using_buffer_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::finish_using_buffer_attribute
PUBLIC	?attach_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@@Z ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::attach_buffer
PUBLIC	?dettach_all_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::dettach_all_buffer
PUBLIC	?bind_buffer_index@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@I@Z ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::bind_buffer_index
PUBLIC	??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Complete Object Locator'
PUBLIC	??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@WDA@AEPAXI@Z ; [thunk]:pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vector deleting destructor'
EXTRN	??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vector deleting destructor'
;	COMDAT ??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
rdata$r	SEGMENT
??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ DD 00H ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Complete Object Locator'
	DD	030H
	DD	00H
	DD	FLAT:??_R0?AVpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@33EA@pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@33EA@pecker_render_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_render_object@pecker_sdk@@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (0,4,4,64)'
	DD	00H
	DD	00H
	DD	04H
	DD	04H
	DD	040H
	DD	FLAT:??_R3pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@33FA@pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@33FA@pecker_opengles_v2_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_opengles_v2_object@pecker_sdk@@@8 ; pecker_sdk::pecker_opengles_v2_object::`RTTI Base Class Descriptor at (0,4,4,80)'
	DD	01H
	DD	00H
	DD	04H
	DD	04H
	DD	050H
	DD	FLAT:??_R3pecker_opengles_v2_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
rdata$r	SEGMENT
??_R2Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
rdata$r	SEGMENT
??_R3Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 DD 00H ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIpecker_vertex_index_buffer_collection@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AUIpecker_vertex_index_buffer_collection@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::Ipecker_vertex_index_buffer_collection `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIpecker_vertex_index_buffer_collection@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Ipecker_vertex_index_buffer_collection@pecker_sdk@@8 DD FLAT:??_R0?AUIpecker_vertex_index_buffer_collection@pecker_sdk@@@8 ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@@8 ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R2pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
	DD	FLAT:??_R1A@33FA@pecker_opengles_v2_object@pecker_sdk@@8
	DD	FLAT:??_R1A@33EA@pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	SEGMENT
??_R3pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8 DD 00H ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	04H
	DD	FLAT:??_R2pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AVpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVpecker_vertex_index_buffer_collection_gles2@pecker_s'
	DB	'dk@@', 00H
_DATA	ENDS
;	COMDAT ??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@
rdata$r	SEGMENT
??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@ DD 00H ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@
CONST	SEGMENT
??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ DD FLAT:??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vftable'
	DD	FLAT:??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@WDA@AEPAXI@Z
	DD	FLAT:?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z
	DD	FLAT:?get_render_system_info@pecker_opengles_v2_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z
	DD	FLAT:?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ
	DD	FLAT:?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_object_location@pecker_opengles_v2_object@pecker_sdk@@UBEIXZ
CONST	ENDS
;	COMDAT ??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@
CONST	SEGMENT
??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@ DD FLAT:??_R4pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vftable'
	DD	FLAT:??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:?get_vertex_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_vertex_buffer@2@I@Z
	DD	FLAT:?get_index_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_index_buffer@2@I@Z
	DD	FLAT:?get_vertex_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ
	DD	FLAT:?get_index_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ
	DD	FLAT:?bind_buffers_and_use_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?finish_using_buffer_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?attach_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@@Z
	DD	FLAT:?dettach_all_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ
	DD	FLAT:?bind_buffer_index@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@I@Z
CONST	ENDS
;	COMDAT ??_8pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@7B@
CONST	SEGMENT
??_8pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@7B@ DD 0fffffffcH ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vbtable'
	DD	02cH
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
$T69412 = -212						; size = 4
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
??0pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAE@XZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::pecker_vertex_index_buffer_collection_gles2, COMDAT
; _this$ = ecx

; 522  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T69412[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@pecker_ver
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_8pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0pecker_opengles_v2_object@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR $T69412[ebp]
	or	eax, 1
	mov	DWORD PTR $T69412[ebp], eax
$LN1@pecker_ver:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_vertex_index_buffer_collection@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+4], OFFSET ??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@

; 523  : 
; 524  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAE@XZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::pecker_vertex_index_buffer_collection_gles2
_TEXT	ENDS
PUBLIC	??_Dpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAEXXZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vbase destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAXI@Z PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??_Dpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAXI@Z ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`vftable'
PUBLIC	??_R4Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Complete Object Locator'
EXTRN	??_EIpecker_vertex_index_buffer_collection@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`vector deleting destructor'
;	COMDAT ??_R4Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@ DD 00H ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIpecker_vertex_index_buffer_collection@pecker_sdk@@@8
	DD	FLAT:??_R3Ipecker_vertex_index_buffer_collection@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@
CONST	SEGMENT
??_7Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@ DD FLAT:??_R4Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`vftable'
	DD	FLAT:??_EIpecker_vertex_index_buffer_collection@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Ipecker_vertex_index_buffer_collection@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Ipecker_vertex_index_buffer_collection@pecker_sdk@@QAE@XZ PROC ; pecker_sdk::Ipecker_vertex_index_buffer_collection::Ipecker_vertex_index_buffer_collection, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Ipecker_vertex_index_buffer_collection@pecker_sdk@@QAE@XZ ENDP ; pecker_sdk::Ipecker_vertex_index_buffer_collection::Ipecker_vertex_index_buffer_collection
_TEXT	ENDS
PUBLIC	??1Ipecker_vertex_index_buffer_collection@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::~Ipecker_vertex_index_buffer_collection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIpecker_vertex_index_buffer_collection@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIpecker_vertex_index_buffer_collection@pecker_sdk@@UAEPAXI@Z PROC ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_vertex_index_buffer_collection@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::~Ipecker_vertex_index_buffer_collection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIpecker_vertex_index_buffer_collection@pecker_sdk@@UAEPAXI@Z ENDP ; pecker_sdk::Ipecker_vertex_index_buffer_collection::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\pecker_buffer.h
_TEXT	ENDS
;	COMDAT ??1Ipecker_vertex_index_buffer_collection@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Ipecker_vertex_index_buffer_collection@pecker_sdk@@UAE@XZ PROC ; pecker_sdk::Ipecker_vertex_index_buffer_collection::~Ipecker_vertex_index_buffer_collection, COMDAT
; _this$ = ecx

; 160  : 	virtual ~Ipecker_vertex_index_buffer_collection(){;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_vertex_index_buffer_collection@pecker_sdk@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Ipecker_vertex_index_buffer_collection@pecker_sdk@@UAE@XZ ENDP ; pecker_sdk::Ipecker_vertex_index_buffer_collection::~Ipecker_vertex_index_buffer_collection
_TEXT	ENDS
PUBLIC	??1pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::~pecker_vertex_index_buffer_collection_gles2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Dpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_Dpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAEXXZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::~pecker_vertex_index_buffer_collection_gles2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1pecker_opengles_v2_object@pecker_sdk@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_Dpecker_vertex_index_buffer_collection_gles2@pecker_sdk@@QAEXXZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vbase destructor'
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\render_system\opengles\pecker_buffer_gl.cpp
_TEXT	ENDS
;	COMDAT ??1pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAE@XZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::~pecker_vertex_index_buffer_collection_gles2, COMDAT
; _this$ = ecx

; 527  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6BIpecker_vertex_index_buffer_collection@1@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+4], OFFSET ??_7pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@6Bpecker_opengles_v2_object@1@@

; 528  : 
; 529  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_vertex_index_buffer_collection@pecker_sdk@@UAE@XZ ; pecker_sdk::Ipecker_vertex_index_buffer_collection::~Ipecker_vertex_index_buffer_collection
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAE@XZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::~pecker_vertex_index_buffer_collection_gles2
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_vertex_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_vertex_buffer@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_buffer_index$ = 8					; size = 4
?get_vertex_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_vertex_buffer@2@I@Z PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_vertex_buffer_reference, COMDAT
; _this$ = ecx

; 532  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 	if (buffer_index < pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT)

	cmp	DWORD PTR _buffer_index$[ebp], 8
	jae	SHORT $LN2@get_vertex@2

; 534  : 	{
; 535  : 		return _M_vertex_buffer[buffer_index];

	mov	eax, DWORD PTR _buffer_index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	jmp	SHORT $LN3@get_vertex@2

; 536  : 	}
; 537  : 	else

	jmp	SHORT $LN3@get_vertex@2
$LN2@get_vertex@2:

; 538  : 	{
; 539  : 		return null;

	xor	eax, eax
$LN3@get_vertex@2:

; 540  : 	}
; 541  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get_vertex_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_vertex_buffer@2@I@Z ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_vertex_buffer_reference
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_index_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_index_buffer@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_buffer_index$ = 8					; size = 4
?get_index_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_index_buffer@2@I@Z PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_index_buffer_reference, COMDAT
; _this$ = ecx

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 545  : 	if (buffer_index > 0)

	cmp	DWORD PTR _buffer_index$[ebp], 0
	jbe	SHORT $LN2@get_index_

; 546  : 	{
; 547  : 		return null;

	xor	eax, eax
	jmp	SHORT $LN3@get_index_

; 548  : 	}
; 549  : 	else

	jmp	SHORT $LN3@get_index_
$LN2@get_index_:

; 550  : 	{
; 551  : 		return _M_index_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
$LN3@get_index_:

; 552  : 	}
; 553  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get_index_buffer_reference@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAUIpecker_index_buffer@2@I@Z ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_index_buffer_reference
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_vertex_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_vertex_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_vertex_buffer_count, COMDAT
; _this$ = ecx

; 556  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 	return _M_vertex_buffer_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]

; 558  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_vertex_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_vertex_buffer_count
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_index_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_index_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_index_buffer_count, COMDAT
; _this$ = ecx

; 561  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 562  : 	if (null != _M_index_buffer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@get_index_@2

; 563  : 	{
; 564  : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@get_index_@2

; 565  : 	}
; 566  : 	else

	jmp	SHORT $LN3@get_index_@2
$LN2@get_index_@2:

; 567  : 	{
; 568  : 		return 0;

	xor	eax, eax
$LN3@get_index_@2:

; 569  : 	}
; 570  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_index_buffer_count@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UBEHXZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::get_index_buffer_count
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?bind_buffers_and_use_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_i$68813 = -44						; size = 4
_vex_buf_count$ = -32					; size = 4
_error_code$ = -20					; size = 4
_this$ = -8						; size = 4
?bind_buffers_and_use_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::bind_buffers_and_use_attribute, COMDAT
; _this$ = ecx

; 573  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 574  : 	HResult error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH

; 575  : 	nSize vex_buf_count = _M_vertex_buffer_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _vex_buf_count$[ebp], ecx

; 576  : 	for (nINDEX i=0; i<pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT;++i)

	mov	DWORD PTR _i$68813[ebp], 0
	jmp	SHORT $LN7@bind_buffe
$LN6@bind_buffe:
	mov	eax, DWORD PTR _i$68813[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68813[ebp], eax
$LN7@bind_buffe:
	cmp	DWORD PTR _i$68813[ebp], 8
	jae	SHORT $LN5@bind_buffe

; 577  : 	{
; 578  : 		if (null == _M_vertex_buffer[i])

	mov	eax, DWORD PTR _i$68813[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+8], 0
	jne	SHORT $LN4@bind_buffe

; 579  : 		{
; 580  : 			error_code = _M_vertex_buffer[i]->use_vertex_attrible();

	mov	eax, DWORD PTR _i$68813[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	mov	eax, DWORD PTR _i$68813[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+8]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error_code$[ebp], eax

; 581  : 			--vex_buf_count;

	mov	eax, DWORD PTR _vex_buf_count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _vex_buf_count$[ebp], eax
$LN4@bind_buffe:

; 582  : 		}
; 583  : 		if (P_OK != error_code)

	cmp	DWORD PTR _error_code$[ebp], 0
	je	SHORT $LN3@bind_buffe

; 584  : 		{
; 585  : 			return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]
	jmp	SHORT $LN8@bind_buffe
$LN3@bind_buffe:

; 586  : 		}
; 587  : 		if (0 == vex_buf_count)

	cmp	DWORD PTR _vex_buf_count$[ebp], 0
	jne	SHORT $LN2@bind_buffe

; 588  : 		{
; 589  : 			break;

	jmp	SHORT $LN5@bind_buffe
$LN2@bind_buffe:

; 590  : 		}
; 591  : 		
; 592  : 	}

	jmp	SHORT $LN6@bind_buffe
$LN5@bind_buffe:

; 593  : 
; 594  : 	if (null != _M_index_buffer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@bind_buffe

; 595  : 	{
; 596  : 		error_code = _M_index_buffer->bind_gpu_buffer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error_code$[ebp], eax
$LN1@bind_buffe:

; 597  : 	}
; 598  : 
; 599  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]
$LN8@bind_buffe:

; 600  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?bind_buffers_and_use_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::bind_buffers_and_use_attribute
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?finish_using_buffer_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_i$68826 = -44						; size = 4
_vex_buf_count$ = -32					; size = 4
_error_code$ = -20					; size = 4
_this$ = -8						; size = 4
?finish_using_buffer_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::finish_using_buffer_attribute, COMDAT
; _this$ = ecx

; 603  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 604  : 	HResult error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH

; 605  : 	nSize vex_buf_count = _M_vertex_buffer_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _vex_buf_count$[ebp], ecx

; 606  : 	for (nINDEX i=0; i<pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT;++i)

	mov	DWORD PTR _i$68826[ebp], 0
	jmp	SHORT $LN6@finish_usi@2
$LN5@finish_usi@2:
	mov	eax, DWORD PTR _i$68826[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68826[ebp], eax
$LN6@finish_usi@2:
	cmp	DWORD PTR _i$68826[ebp], 8
	jae	SHORT $LN4@finish_usi@2

; 607  : 	{
; 608  : 		if (null == _M_vertex_buffer[i])

	mov	eax, DWORD PTR _i$68826[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+8], 0
	jne	SHORT $LN3@finish_usi@2

; 609  : 		{
; 610  : 			error_code = _M_vertex_buffer[i]->finish_using_vertex_attrible();

	mov	eax, DWORD PTR _i$68826[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	mov	eax, DWORD PTR _i$68826[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*4+8]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error_code$[ebp], eax

; 611  : 			--vex_buf_count;

	mov	eax, DWORD PTR _vex_buf_count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _vex_buf_count$[ebp], eax
$LN3@finish_usi@2:

; 612  : 		}
; 613  : 		if (P_OK != error_code)

	cmp	DWORD PTR _error_code$[ebp], 0
	je	SHORT $LN2@finish_usi@2

; 614  : 		{
; 615  : 			return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]
	jmp	SHORT $LN7@finish_usi@2
$LN2@finish_usi@2:

; 616  : 		}
; 617  : 		if (0 == vex_buf_count)

	cmp	DWORD PTR _vex_buf_count$[ebp], 0
	jne	SHORT $LN1@finish_usi@2

; 618  : 		{
; 619  : 			break;

	jmp	SHORT $LN4@finish_usi@2
$LN1@finish_usi@2:

; 620  : 		}
; 621  : 
; 622  : 	}

	jmp	SHORT $LN5@finish_usi@2
$LN4@finish_usi@2:

; 623  : 
; 624  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]
$LN7@finish_usi@2:

; 625  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?finish_using_buffer_attribute@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::finish_using_buffer_attribute
_TEXT	ENDS
EXTRN	___RTDynamicCast:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?attach_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@@Z
_TEXT	SEGMENT
tv71 = -232						; size = 4
_error_code$ = -32					; size = 4
_buffer_type$ = -20					; size = 4
_this$ = -8						; size = 4
_pbuffer$ = 8						; size = 4
?attach_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@@Z PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::attach_buffer, COMDAT
; _this$ = ecx

; 628  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 629  : 	if (null == pbuffer)

	cmp	DWORD PTR _pbuffer$[ebp], 0
	jne	SHORT $LN10@attach_buf

; 630  : 	{
; 631  : 		return P_INVALID_VALUE;

	mov	eax, -2					; fffffffeH
	jmp	$LN11@attach_buf
$LN10@attach_buf:

; 632  : 	}
; 633  : 	if (_M_vertex_buffer_count == pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 8
	jne	SHORT $LN9@attach_buf

; 634  : 	{
; 635  : 		return P_OUT_OF_MEMORY;

	mov	eax, -6					; fffffffaH
	jmp	$LN11@attach_buf
$LN9@attach_buf:

; 636  : 	}
; 637  : 	HEnum buffer_type = pbuffer->get_buffer_type();

	mov	eax, DWORD PTR _pbuffer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pbuffer$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer_type$[ebp], eax

; 638  : 	HResult error_code = P_OK;

	mov	DWORD PTR _error_code$[ebp], 0

; 639  : 	switch(buffer_type)

	mov	eax, DWORD PTR _buffer_type$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 1
	je	SHORT $LN6@attach_buf
	cmp	DWORD PTR tv71[ebp], 2
	je	SHORT $LN3@attach_buf
	jmp	$LN1@attach_buf
$LN6@attach_buf:

; 640  : 	{
; 641  : 	case VERTEX_BUFFER_TYPE:
; 642  : 		_M_vertex_buffer[_M_vertex_buffer_count] = dynamic_cast< Ipecker_vertex_buffer* >(pbuffer);

	push	0
	push	OFFSET ??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8
	push	OFFSET ??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8
	push	0
	mov	eax, DWORD PTR _pbuffer$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx*4+8], eax

; 643  : 		if (null != _M_vertex_buffer[_M_vertex_buffer_count])

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+8], 0
	je	SHORT $LN5@attach_buf

; 644  : 		{
; 645  : 			++_M_vertex_buffer_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx

; 646  : 		}
; 647  : 		else

	jmp	SHORT $LN4@attach_buf
$LN5@attach_buf:

; 648  : 		{
; 649  : 			error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH
$LN4@attach_buf:

; 650  : 		}
; 651  : 		break;

	jmp	SHORT $LN7@attach_buf
$LN3@attach_buf:

; 652  : 	case INDEX_BUFFER_TYPE:
; 653  : 		_M_index_buffer = dynamic_cast< Ipecker_index_buffer* >(pbuffer);

	push	0
	push	OFFSET ??_R0?AUIpecker_index_buffer@pecker_sdk@@@8
	push	OFFSET ??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8
	push	0
	mov	eax, DWORD PTR _pbuffer$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 654  : 		if (null == _M_index_buffer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN2@attach_buf

; 655  : 		{
; 656  : 			error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH
$LN2@attach_buf:

; 657  : 		}
; 658  : 		break;

	jmp	SHORT $LN7@attach_buf
$LN1@attach_buf:

; 659  : 	default:
; 660  : 		error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH
$LN7@attach_buf:

; 661  : 		break;
; 662  : 	}
; 663  : 
; 664  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]
$LN11@attach_buf:

; 665  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?attach_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@@Z ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::attach_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?dettach_all_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_i$68860 = -20						; size = 4
_this$ = -8						; size = 4
?dettach_all_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::dettach_all_buffer, COMDAT
; _this$ = ecx

; 668  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 669  : 	for (nINDEX i=0;i<pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT;++i)

	mov	DWORD PTR _i$68860[ebp], 0
	jmp	SHORT $LN3@dettach_al
$LN2@dettach_al:
	mov	eax, DWORD PTR _i$68860[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68860[ebp], eax
$LN3@dettach_al:
	cmp	DWORD PTR _i$68860[ebp], 8
	jae	SHORT $LN1@dettach_al

; 670  : 	{
; 671  : 		_M_vertex_buffer[i] = null;

	mov	eax, DWORD PTR _i$68860[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], 0

; 672  : 	}

	jmp	SHORT $LN2@dettach_al
$LN1@dettach_al:

; 673  : 	_M_index_buffer = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 674  : 	return P_OK;

	xor	eax, eax

; 675  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?dettach_all_buffer@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::dettach_all_buffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?bind_buffer_index@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@I@Z
_TEXT	SEGMENT
tv72 = -256						; size = 4
_ptest_buffer$68886 = -56				; size = 4
_ptest_buffer$68879 = -44				; size = 4
_error_code$ = -32					; size = 4
_buffer_type$ = -20					; size = 4
_this$ = -8						; size = 4
_pbuffer$ = 8						; size = 4
_buffer_index$ = 12					; size = 4
?bind_buffer_index@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@I@Z PROC ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::bind_buffer_index, COMDAT
; _this$ = ecx

; 678  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 679  : 	if (null == pbuffer || buffer_index >= pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT)

	cmp	DWORD PTR _pbuffer$[ebp], 0
	je	SHORT $LN13@bind_buffe@2
	cmp	DWORD PTR _buffer_index$[ebp], 8
	jb	SHORT $LN14@bind_buffe@2
$LN13@bind_buffe@2:

; 680  : 	{
; 681  : 		return P_INVALID_VALUE;

	mov	eax, -2					; fffffffeH
	jmp	$LN15@bind_buffe@2
$LN14@bind_buffe@2:

; 682  : 	}
; 683  : 	if (_M_vertex_buffer_count == pecker_vertex_buffer_gles2::MAX_VERTEXT_ATTRIBUTE_COUNT)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 8
	jne	SHORT $LN12@bind_buffe@2

; 684  : 	{
; 685  : 		return P_OUT_OF_MEMORY;

	mov	eax, -6					; fffffffaH
	jmp	$LN15@bind_buffe@2
$LN12@bind_buffe@2:

; 686  : 	}
; 687  : 	HEnum buffer_type = pbuffer->get_buffer_type();

	mov	eax, DWORD PTR _pbuffer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _pbuffer$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer_type$[ebp], eax

; 688  : 	HResult error_code = P_OK;

	mov	DWORD PTR _error_code$[ebp], 0

; 689  : 	switch(buffer_type)

	mov	eax, DWORD PTR _buffer_type$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	cmp	DWORD PTR tv72[ebp], 1
	je	SHORT $LN9@bind_buffe@2
	cmp	DWORD PTR tv72[ebp], 2
	je	SHORT $LN4@bind_buffe@2
	jmp	$LN1@bind_buffe@2
$LN9@bind_buffe@2:

; 690  : 	{
; 691  : 	case VERTEX_BUFFER_TYPE:
; 692  : 		{
; 693  : 			Ipecker_vertex_buffer* ptest_buffer = dynamic_cast< Ipecker_vertex_buffer* >(pbuffer);

	push	0
	push	OFFSET ??_R0?AUIpecker_vertex_buffer@pecker_sdk@@@8
	push	OFFSET ??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8
	push	0
	mov	eax, DWORD PTR _pbuffer$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ptest_buffer$68879[ebp], eax

; 694  : 			if (null == _M_vertex_buffer[buffer_index] && null != ptest_buffer)

	mov	eax, DWORD PTR _buffer_index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+8], 0
	jne	SHORT $LN8@bind_buffe@2
	cmp	DWORD PTR _ptest_buffer$68879[ebp], 0
	je	SHORT $LN8@bind_buffe@2

; 695  : 			{
; 696  : 				_M_vertex_buffer[buffer_index] = ptest_buffer;

	mov	eax, DWORD PTR _buffer_index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ptest_buffer$68879[ebp]
	mov	DWORD PTR [ecx+eax*4+8], edx

; 697  : 				++_M_vertex_buffer_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
	jmp	SHORT $LN7@bind_buffe@2
$LN8@bind_buffe@2:

; 698  : 			}
; 699  : 			else if (null != ptest_buffer)

	cmp	DWORD PTR _ptest_buffer$68879[ebp], 0
	je	SHORT $LN6@bind_buffe@2

; 700  : 			{
; 701  : 				_M_vertex_buffer[buffer_index] = ptest_buffer;

	mov	eax, DWORD PTR _buffer_index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ptest_buffer$68879[ebp]
	mov	DWORD PTR [ecx+eax*4+8], edx

; 702  : 			}
; 703  : 			else

	jmp	SHORT $LN7@bind_buffe@2
$LN6@bind_buffe@2:

; 704  : 			{
; 705  : 				error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH
$LN7@bind_buffe@2:

; 706  : 			}
; 707  : 		}
; 708  : 
; 709  : 		break;

	jmp	SHORT $LN10@bind_buffe@2
$LN4@bind_buffe@2:

; 710  : 	case INDEX_BUFFER_TYPE:
; 711  : 		{
; 712  : 			Ipecker_index_buffer* ptest_buffer = dynamic_cast< Ipecker_index_buffer* >(pbuffer);

	push	0
	push	OFFSET ??_R0?AUIpecker_index_buffer@pecker_sdk@@@8
	push	OFFSET ??_R0?AUIpecker_graphic_buffer@pecker_sdk@@@8
	push	0
	mov	eax, DWORD PTR _pbuffer$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ptest_buffer$68886[ebp], eax

; 713  : 			if (null != ptest_buffer)

	cmp	DWORD PTR _ptest_buffer$68886[ebp], 0
	je	SHORT $LN3@bind_buffe@2

; 714  : 			{
; 715  : 				_M_index_buffer = ptest_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptest_buffer$68886[ebp]
	mov	DWORD PTR [eax+40], ecx

; 716  : 			}
; 717  : 			else

	jmp	SHORT $LN2@bind_buffe@2
$LN3@bind_buffe@2:

; 718  : 			{
; 719  : 				error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH
$LN2@bind_buffe@2:

; 720  : 			}
; 721  : 		}
; 722  : 
; 723  : 		break;

	jmp	SHORT $LN10@bind_buffe@2
$LN1@bind_buffe@2:

; 724  : 	default:
; 725  : 		error_code = P_INVALID_VALUE;

	mov	DWORD PTR _error_code$[ebp], -2		; fffffffeH
$LN10@bind_buffe@2:

; 726  : 		break;
; 727  : 	}
; 728  : 
; 729  : 	return error_code;

	mov	eax, DWORD PTR _error_code$[ebp]
$LN15@bind_buffe@2:

; 730  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?bind_buffer_index@pecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEJPAUIpecker_graphic_buffer@2@I@Z ENDP ; pecker_sdk::pecker_vertex_index_buffer_collection_gles2::bind_buffer_index
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\native\pecker_allocator.h
;	COMDAT ?allocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAPAEH@Z
_TEXT	SEGMENT
$T69452 = -200						; size = 4
_nSize$ = 8						; size = 4
?allocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAPAEH@Z PROC ; pecker_sdk::pecker_simple_allocator<unsigned char>::allocate_objects, COMDAT

; 45   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 46   : 			if(nSize > 0)

	cmp	DWORD PTR _nSize$[ebp], 0
	jle	SHORT $LN1@allocate_o

; 47   : 			{
; 48   : 				return new className[nSize];

	mov	eax, DWORD PTR _nSize$[ebp]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T69452[ebp], eax
	mov	eax, DWORD PTR $T69452[ebp]
	jmp	SHORT $LN2@allocate_o
$LN1@allocate_o:

; 49   : 			}
; 50   : 			return null;

	xor	eax, eax
$LN2@allocate_o:

; 51   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?allocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAPAEH@Z ENDP ; pecker_sdk::pecker_simple_allocator<unsigned char>::allocate_objects
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAXPAE@Z
_TEXT	SEGMENT
$T69455 = -200						; size = 4
_pDelObject$ = 8					; size = 4
?deallocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAXPAE@Z PROC ; pecker_sdk::pecker_simple_allocator<unsigned char>::deallocate_objects, COMDAT

; 54   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 55   : 			if(null != pDelObject)

	cmp	DWORD PTR _pDelObject$[ebp], 0
	je	SHORT $LN2@deallocate

; 56   : 			{
; 57   : 				delete [] pDelObject;

	mov	eax, DWORD PTR _pDelObject$[ebp]
	mov	DWORD PTR $T69455[ebp], eax
	mov	ecx, DWORD PTR $T69455[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@deallocate:

; 58   : 			}
; 59   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate_objects@?$pecker_simple_allocator@E@pecker_sdk@@SAXPAE@Z ENDP ; pecker_sdk::pecker_simple_allocator<unsigned char>::deallocate_objects
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@WDA@AEPAXI@Z
_TEXT	SEGMENT
??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@WDA@AEPAXI@Z PROC ; [thunk]:pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vector deleting destructor', COMDAT
	sub	ecx, 48					; 00000030H
	jmp	??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@UAEPAXI@Z
??_Epecker_vertex_index_buffer_collection_gles2@pecker_sdk@@WDA@AEPAXI@Z ENDP ; [thunk]:pecker_sdk::pecker_vertex_index_buffer_collection_gles2::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Epecker_vertex_buffer_gles2@pecker_sdk@@W3AEPAXI@Z
_TEXT	SEGMENT
??_Epecker_vertex_buffer_gles2@pecker_sdk@@W3AEPAXI@Z PROC ; [thunk]:pecker_sdk::pecker_vertex_buffer_gles2::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_Epecker_vertex_buffer_gles2@pecker_sdk@@UAEPAXI@Z
??_Epecker_vertex_buffer_gles2@pecker_sdk@@W3AEPAXI@Z ENDP ; [thunk]:pecker_sdk::pecker_vertex_buffer_gles2::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Epecker_index_buffer_gles2@pecker_sdk@@W3AEPAXI@Z
_TEXT	SEGMENT
??_Epecker_index_buffer_gles2@pecker_sdk@@W3AEPAXI@Z PROC ; [thunk]:pecker_sdk::pecker_index_buffer_gles2::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_Epecker_index_buffer_gles2@pecker_sdk@@UAEPAXI@Z
??_Epecker_index_buffer_gles2@pecker_sdk@@W3AEPAXI@Z ENDP ; [thunk]:pecker_sdk::pecker_index_buffer_gles2::`vector deleting destructor'
_TEXT	ENDS
END
