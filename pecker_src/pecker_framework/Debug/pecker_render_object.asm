; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	F:\codes\pecker_framework_git\pecker_src\pecker_framework\render\pecker_render_object.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_7pecker_render_object@pecker_sdk@@6B@	; pecker_sdk::pecker_render_object::`vftable'
PUBLIC	??0pecker_render_object@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_render_object::pecker_render_object
PUBLIC	??_R4pecker_render_object@pecker_sdk@@6B@	; pecker_sdk::pecker_render_object::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVpecker_render_object@pecker_sdk@@@8	; pecker_sdk::pecker_render_object `RTTI Type Descriptor'
PUBLIC	??_R3pecker_render_object@pecker_sdk@@8		; pecker_sdk::pecker_render_object::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2pecker_render_object@pecker_sdk@@8		; pecker_sdk::pecker_render_object::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z ; pecker_sdk::pecker_render_object::toString
PUBLIC	?get_render_system_info@pecker_render_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z ; pecker_sdk::pecker_render_object::get_render_system_info
PUBLIC	?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ ; pecker_sdk::pecker_render_object::get_this_reference
PUBLIC	?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_render_object::release_this_reference
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Epecker_render_object@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::pecker_render_object::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\render\pecker_render_object.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8 DD FLAT:??_R0?AVpecker_render_object@pecker_sdk@@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R2pecker_render_object@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@pecker_render_object@pecker_sdk@@8 ; pecker_sdk::pecker_render_object::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3pecker_render_object@pecker_sdk@@8
rdata$r	SEGMENT
??_R3pecker_render_object@pecker_sdk@@8 DD 00H		; pecker_sdk::pecker_render_object::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVpecker_render_object@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AVpecker_render_object@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_render_object `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVpecker_render_object@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R4pecker_render_object@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4pecker_render_object@pecker_sdk@@6B@ DD 00H	; pecker_sdk::pecker_render_object::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVpecker_render_object@pecker_sdk@@@8
	DD	FLAT:??_R3pecker_render_object@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7pecker_render_object@pecker_sdk@@6B@
CONST	SEGMENT
??_7pecker_render_object@pecker_sdk@@6B@ DD FLAT:??_R4pecker_render_object@pecker_sdk@@6B@ ; pecker_sdk::pecker_render_object::`vftable'
	DD	FLAT:??_Epecker_render_object@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z
	DD	FLAT:?get_render_system_info@pecker_render_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z
	DD	FLAT:?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ
	DD	FLAT:?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0pecker_render_object@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0pecker_render_object@pecker_sdk@@QAE@XZ PROC		; pecker_sdk::pecker_render_object::pecker_render_object, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_render_object@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 18   : 
; 19   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0pecker_render_object@pecker_sdk@@QAE@XZ ENDP		; pecker_sdk::pecker_render_object::pecker_render_object
_TEXT	ENDS
PUBLIC	??1pecker_render_object@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_render_object::~pecker_render_object
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gpecker_render_object@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gpecker_render_object@pecker_sdk@@UAEPAXI@Z PROC	; pecker_sdk::pecker_render_object::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1pecker_render_object@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_render_object::~pecker_render_object
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gpecker_render_object@pecker_sdk@@UAEPAXI@Z ENDP	; pecker_sdk::pecker_render_object::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1pecker_render_object@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1pecker_render_object@pecker_sdk@@UAE@XZ PROC		; pecker_sdk::pecker_render_object::~pecker_render_object, COMDAT
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7pecker_render_object@pecker_sdk@@6B@

; 23   : 	_M_reference_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 24   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1pecker_render_object@pecker_sdk@@UAE@XZ ENDP		; pecker_sdk::pecker_render_object::~pecker_render_object
_TEXT	ENDS
PUBLIC	?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJPBDH_N@Z ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init
EXTRN	_strlen:PROC
EXTRN	__imp_?name@type_info@@QBEPBDPAU__type_info_node@@@Z:PROC
EXTRN	___RTtypeid:PROC
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:QWORD ; __type_info_root_node
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z
_TEXT	SEGMENT
_string_len$ = -32					; size = 4
_pstring_chars$ = -20					; size = 4
_this$ = -8						; size = 4
_string_input$ = 8					; size = 4
?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z PROC ; pecker_sdk::pecker_render_object::toString, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 28   : 	const char* pstring_chars = typeid(*this).name();

	mov	esi, esp
	push	OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	___RTtypeid
	add	esp, 4
	mov	ecx, eax
	call	DWORD PTR __imp_?name@type_info@@QBEPBDPAU__type_info_node@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pstring_chars$[ebp], eax

; 29   : 	nSize string_len = strlen(pstring_chars);

	mov	eax, DWORD PTR _pstring_chars$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _string_len$[ebp], eax

; 30   : 	string_input.init(pstring_chars,string_len);

	push	0
	mov	eax, DWORD PTR _string_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pstring_chars$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _string_input$[ebp]
	call	?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJPBDH_N@Z ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init

; 31   : 	return string_input;

	mov	eax, DWORD PTR _string_input$[ebp]

; 32   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?toString@pecker_render_object@pecker_sdk@@UBEABV?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@2@AAV32@@Z ENDP ; pecker_sdk::pecker_render_object::toString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_render_system_info@pecker_render_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_system_info$ = 8					; size = 4
?get_render_system_info@pecker_render_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z PROC ; pecker_sdk::pecker_render_object::get_render_system_info, COMDAT
; _this$ = ecx

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 36   : 	system_info._M_system_type = UNKNOWN_RENDER_SYSTEM;

	mov	eax, DWORD PTR _system_info$[ebp]
	mov	DWORD PTR [eax], 0

; 37   : 	system_info._M_version_part1 = 0;

	mov	eax, DWORD PTR _system_info$[ebp]
	mov	DWORD PTR [eax+4], 0

; 38   : 	system_info._M_version_part2 = 0;

	mov	eax, DWORD PTR _system_info$[ebp]
	mov	DWORD PTR [eax+8], 0

; 39   : 	return system_info;

	mov	eax, DWORD PTR _system_info$[ebp]

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?get_render_system_info@pecker_render_object@pecker_sdk@@UBEABUpecker_render_system_info@2@AAU32@@Z ENDP ; pecker_sdk::pecker_render_object::get_render_system_info
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ PROC ; pecker_sdk::pecker_render_object::get_this_reference, COMDAT
; _this$ = ecx

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 44   : 	++_M_reference_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 45   : 	return this;

	mov	eax, DWORD PTR _this$[ebp]

; 46   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_this_reference@pecker_render_object@pecker_sdk@@UAEPAV12@XZ ENDP ; pecker_sdk::pecker_render_object::get_this_reference
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_render_object::release_this_reference, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 	--_M_reference_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 51   : 	if (_M_reference_count <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jg	SHORT $LN1@release_th

; 52   : 	{
; 53   : 		this->~pecker_render_object();

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@release_th:

; 54   : 	}
; 55   : 	return P_OK;

	xor	eax, eax

; 56   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?release_this_reference@pecker_render_object@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_render_object::release_this_reference
_TEXT	ENDS
PUBLIC	?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJH_N@Z ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\data\pecker_string.h
;	COMDAT ?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJPBDH_N@Z
_TEXT	SEGMENT
_index$67813 = -32					; size = 4
_init_result$ = -20					; size = 4
_this$ = -8						; size = 4
_pstring_chars$ = 8					; size = 4
_string_length$ = 12					; size = 4
_bnew_buffer$ = 16					; size = 1
?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJPBDH_N@Z PROC ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init, COMDAT
; _this$ = ecx

; 449  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 450  : 		if ( (null == pstring_chars && 0 >= string_length) )

	cmp	DWORD PTR _pstring_chars$[ebp], 0
	jne	SHORT $LN5@init
	cmp	DWORD PTR _string_length$[ebp], 0
	jg	SHORT $LN5@init

; 451  : 		{
; 452  : 			return P_ERR;

	or	eax, -1
	jmp	SHORT $LN6@init
$LN5@init:

; 453  : 		}
; 454  : 
; 455  : 		string_result init_result = init(string_length,bnew_buffer);

	movzx	eax, BYTE PTR _bnew_buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string_length$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJH_N@Z ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init
	mov	DWORD PTR _init_result$[ebp], eax

; 456  : 		if (P_OK != init_result)

	cmp	DWORD PTR _init_result$[ebp], 0
	je	SHORT $LN4@init

; 457  : 		{
; 458  : 			return init_result;

	mov	eax, DWORD PTR _init_result$[ebp]
	jmp	SHORT $LN6@init
$LN4@init:

; 459  : 		}
; 460  : 
; 461  : 		_M_string_length = string_length;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _string_length$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 462  : 		for (string_char_index index = 0; index < string_length; ++index)

	mov	DWORD PTR _index$67813[ebp], 0
	jmp	SHORT $LN3@init
$LN2@init:
	mov	eax, DWORD PTR _index$67813[ebp]
	add	eax, 1
	mov	DWORD PTR _index$67813[ebp], eax
$LN3@init:
	mov	eax, DWORD PTR _index$67813[ebp]
	cmp	eax, DWORD PTR _string_length$[ebp]
	jge	SHORT $LN1@init

; 463  : 		{
; 464  : 			*(_M_pthis_string_data+index) = *(pstring_chars + index);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pstring_chars$[ebp]
	add	edx, DWORD PTR _index$67813[ebp]
	mov	eax, DWORD PTR _index$67813[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax], dl

; 465  : 		}

	jmp	SHORT $LN2@init
$LN1@init:

; 466  : 
; 467  : 		return P_OK;

	xor	eax, eax
$LN6@init:

; 468  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJPBDH_N@Z ENDP ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init
_TEXT	ENDS
PUBLIC	?allocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAPADH@Z ; pecker_sdk::pecker_simple_allocator<char>::allocate_objects
PUBLIC	?deallocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAXPAD@Z ; pecker_sdk::pecker_simple_allocator<char>::deallocate_objects
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJH_N@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
_bis_release_buffer$ = -29				; size = 1
_pheaderpointer$ = -20					; size = 4
_this$ = -8						; size = 4
_string_length$ = 8					; size = 4
_bnew_buffer$ = 12					; size = 1
?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJH_N@Z PROC ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init, COMDAT
; _this$ = ecx

; 361  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 362  : 		if ( (0 >= string_length) )

	cmp	DWORD PTR _string_length$[ebp], 0
	jg	SHORT $LN18@init@2

; 363  : 		{
; 364  : 			return P_ERR;

	or	eax, -1
	jmp	$LN19@init@2
$LN18@init@2:

; 365  : 		}
; 366  : 
; 367  : 		char_value_t* pheaderpointer = null;

	mov	DWORD PTR _pheaderpointer$[ebp], 0

; 368  : 		bool bis_release_buffer = (null == _M_shared_buffer_pre_string && null == _M_shared_buffer_next_string);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN21@init@2
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	jne	SHORT $LN21@init@2
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN22@init@2
$LN21@init@2:
	mov	DWORD PTR tv69[ebp], 0
$LN22@init@2:
	mov	dl, BYTE PTR tv69[ebp]
	mov	BYTE PTR _bis_release_buffer$[ebp], dl

; 369  : 
; 370  : 		if (string_length <= _BUFFER_SIZE)

	cmp	DWORD PTR _string_length$[ebp], 16	; 00000010H
	jg	SHORT $LN17@init@2

; 371  : 		{
; 372  : 			if (_M_string_buffer_size > _BUFFER_SIZE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jle	SHORT $LN16@init@2

; 373  : 			{
; 374  : 				if (STRING_BOOLEAN_FALSE == bnew_buffer)

	movzx	eax, BYTE PTR _bnew_buffer$[ebp]
	test	eax, eax
	jne	SHORT $LN15@init@2

; 375  : 				{
; 376  : 					if (bis_release_buffer)

	movzx	eax, BYTE PTR _bis_release_buffer$[ebp]
	test	eax, eax
	je	SHORT $LN14@init@2

; 377  : 					{
; 378  : 						pheaderpointer = _M_pstring_data_header._Large_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pheaderpointer$[ebp], ecx

; 379  : 					}
; 380  : 					else

	jmp	SHORT $LN13@init@2
$LN14@init@2:

; 381  : 					{
; 382  : 						pheaderpointer = _M_pstring_data_header._Small_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pheaderpointer$[ebp], eax

; 383  : 						_M_string_buffer_size = _BUFFER_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 16			; 00000010H
$LN13@init@2:

; 384  : 					}
; 385  : 				}
; 386  : 				else

	jmp	SHORT $LN12@init@2
$LN15@init@2:

; 387  : 				{
; 388  : 					if (bis_release_buffer)

	movzx	eax, BYTE PTR _bis_release_buffer$[ebp]
	test	eax, eax
	je	SHORT $LN11@init@2

; 389  : 					{
; 390  : 						allocate_object_t::deallocate_objects(_M_pstring_data_header._Large_buffer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?deallocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAXPAD@Z ; pecker_sdk::pecker_simple_allocator<char>::deallocate_objects
	add	esp, 4
$LN11@init@2:

; 391  : 					}
; 392  : 					pheaderpointer = _M_pstring_data_header._Small_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pheaderpointer$[ebp], eax

; 393  : 					_M_string_buffer_size = _BUFFER_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 16			; 00000010H
$LN12@init@2:

; 394  : 				}
; 395  : 			}
; 396  : 			else

	jmp	SHORT $LN10@init@2
$LN16@init@2:

; 397  : 			{
; 398  : 				pheaderpointer = _M_pstring_data_header._Small_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pheaderpointer$[ebp], eax

; 399  : 				_M_string_buffer_size = _BUFFER_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 16			; 00000010H
$LN10@init@2:

; 400  : 			}
; 401  : 		}
; 402  : 		else

	jmp	SHORT $LN9@init@2
$LN17@init@2:

; 403  : 		{
; 404  : 			if ((string_length > _M_string_buffer_size) ||  
; 405  : 				 false == bis_release_buffer || 
; 406  : 				bnew_buffer)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _string_length$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jg	SHORT $LN7@init@2
	movzx	eax, BYTE PTR _bis_release_buffer$[ebp]
	test	eax, eax
	je	SHORT $LN7@init@2
	movzx	eax, BYTE PTR _bnew_buffer$[ebp]
	test	eax, eax
	je	SHORT $LN8@init@2
$LN7@init@2:

; 407  : 			{
; 408  : 				pheaderpointer = allocate_object_t::allocate_objects(string_length);

	mov	eax, DWORD PTR _string_length$[ebp]
	push	eax
	call	?allocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAPADH@Z ; pecker_sdk::pecker_simple_allocator<char>::allocate_objects
	add	esp, 4
	mov	DWORD PTR _pheaderpointer$[ebp], eax

; 409  : 				if (null != pheaderpointer)

	cmp	DWORD PTR _pheaderpointer$[ebp], 0
	je	SHORT $LN6@init@2

; 410  : 				{
; 411  : 						if ( bis_release_buffer && _M_string_buffer_size > _BUFFER_SIZE )

	movzx	eax, BYTE PTR _bis_release_buffer$[ebp]
	test	eax, eax
	je	SHORT $LN5@init@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jle	SHORT $LN5@init@2

; 412  : 						{
; 413  : 							allocate_object_t::deallocate_objects(_M_pstring_data_header._Large_buffer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?deallocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAXPAD@Z ; pecker_sdk::pecker_simple_allocator<char>::deallocate_objects
	add	esp, 4
$LN5@init@2:

; 414  : 						}
; 415  : 						_M_pstring_data_header._Large_buffer = pheaderpointer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pheaderpointer$[ebp]
	mov	DWORD PTR [eax], ecx

; 416  : 						_M_string_buffer_size = string_length;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _string_length$[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN6@init@2:

; 417  : 				}
; 418  : 			}
; 419  : 			else

	jmp	SHORT $LN9@init@2
$LN8@init@2:

; 420  : 			{
; 421  : 				pheaderpointer = _M_pstring_data_header._Large_buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pheaderpointer$[ebp], ecx
$LN9@init@2:

; 422  : 			}
; 423  : 		}
; 424  : 	
; 425  : 		if (null == pheaderpointer)

	cmp	DWORD PTR _pheaderpointer$[ebp], 0
	jne	SHORT $LN3@init@2

; 426  : 		{
; 427  : 			return P_ERR;

	or	eax, -1
	jmp	SHORT $LN19@init@2
$LN3@init@2:

; 428  : 		}
; 429  : 
; 430  : 		if (null != _M_shared_buffer_pre_string)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@init@2

; 431  : 		{
; 432  : 			_M_shared_buffer_pre_string->_M_shared_buffer_next_string = _M_shared_buffer_next_string;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax

; 433  : 			_M_shared_buffer_pre_string = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN2@init@2:

; 434  : 		}
; 435  : 
; 436  : 		if (null != _M_shared_buffer_next_string)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN1@init@2

; 437  : 		{
; 438  : 			_M_shared_buffer_next_string->_M_shared_buffer_pre_string = _M_shared_buffer_pre_string;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax

; 439  : 			_M_shared_buffer_next_string = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
$LN1@init@2:

; 440  : 		}
; 441  : 
; 442  : 		_M_pthis_string_data = pheaderpointer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pheaderpointer$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 443  : 		_M_string_length = 0;//string_length;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 444  : 
; 445  : 		return P_OK;

	xor	eax, eax
$LN19@init@2:

; 446  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?init@?$pecker_share_string_base_t@DU?$pecker_value_compare@D@pecker_sdk@@V?$pecker_simple_allocator@D@2@$0BA@@pecker_sdk@@QAEJH_N@Z ENDP ; pecker_sdk::pecker_share_string_base_t<char,pecker_sdk::pecker_value_compare<char>,pecker_sdk::pecker_simple_allocator<char>,16>::init
_TEXT	ENDS
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\native\pecker_allocator.h
;	COMDAT ?allocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAPADH@Z
_TEXT	SEGMENT
$T68065 = -200						; size = 4
_nSize$ = 8						; size = 4
?allocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAPADH@Z PROC ; pecker_sdk::pecker_simple_allocator<char>::allocate_objects, COMDAT

; 45   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 46   : 			if(nSize > 0)

	cmp	DWORD PTR _nSize$[ebp], 0
	jle	SHORT $LN1@allocate_o

; 47   : 			{
; 48   : 				return new className[nSize];

	mov	eax, DWORD PTR _nSize$[ebp]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T68065[ebp], eax
	mov	eax, DWORD PTR $T68065[ebp]
	jmp	SHORT $LN2@allocate_o
$LN1@allocate_o:

; 49   : 			}
; 50   : 			return null;

	xor	eax, eax
$LN2@allocate_o:

; 51   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?allocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAPADH@Z ENDP ; pecker_sdk::pecker_simple_allocator<char>::allocate_objects
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAXPAD@Z
_TEXT	SEGMENT
$T68068 = -200						; size = 4
_pDelObject$ = 8					; size = 4
?deallocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAXPAD@Z PROC ; pecker_sdk::pecker_simple_allocator<char>::deallocate_objects, COMDAT

; 54   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 55   : 			if(null != pDelObject)

	cmp	DWORD PTR _pDelObject$[ebp], 0
	je	SHORT $LN2@deallocate

; 56   : 			{
; 57   : 				delete [] pDelObject;

	mov	eax, DWORD PTR _pDelObject$[ebp]
	mov	DWORD PTR $T68068[ebp], eax
	mov	ecx, DWORD PTR $T68068[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@deallocate:

; 58   : 			}
; 59   : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate_objects@?$pecker_simple_allocator@D@pecker_sdk@@SAXPAD@Z ENDP ; pecker_sdk::pecker_simple_allocator<char>::deallocate_objects
_TEXT	ENDS
END
