; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	F:\codes\pecker_framework_git\pecker_src\pecker_framework\thread_test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_g_add_num DD	01H DUP (?)
_BSS	ENDS
PUBLIC	??_C@_0BH@ENPCFFAP@thread_num?3?$CFd?0?5num?$DN?$CFd?6?$AA@ ; `string'
PUBLIC	?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
EXTRN	??1pecker_critical_lock@pecker_sdk@@QAE@XZ:PROC	; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
EXTRN	?unlock@pecker_critical_lock@pecker_sdk@@QAEJXZ:PROC ; pecker_sdk::pecker_critical_lock::unlock
EXTRN	__imp__printf:PROC
EXTRN	?lock@pecker_critical_lock@pecker_sdk@@QAEJPAVpecker_critical_section@2@@Z:PROC ; pecker_sdk::pecker_critical_lock::lock
EXTRN	??0pecker_critical_lock@pecker_sdk@@QAE@XZ:PROC	; pecker_sdk::pecker_critical_lock::pecker_critical_lock
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0BH@ENPCFFAP@thread_num?3?$CFd?0?5num?$DN?$CFd?6?$AA@
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\thread_test.cpp
CONST	SEGMENT
??_C@_0BH@ENPCFFAP@thread_num?3?$CFd?0?5num?$DN?$CFd?6?$AA@ DB 'thread_nu'
	DB	'm:%d, num=%d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z$0
__ehfuncinfo$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z
_TEXT	SEGMENT
_cs_lock$67001 = -32					; size = 4
_thread_num$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_lpParameter$ = 8					; size = 4
?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z PROC	; asyn_test_pecker_thread_proc_callback, COMDAT

; 10   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 11   : 	SInt thread_num = ((SInt*)lpParameter)[0];

	mov	eax, DWORD PTR _lpParameter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _thread_num$[ebp], ecx
$LN3@asyn_test_:

; 12   : 	while(1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@asyn_test_

; 13   : 	{
; 14   : 		if (g_add_num > 100)

	cmp	DWORD PTR _g_add_num, 100		; 00000064H
	jle	SHORT $LN1@asyn_test_

; 15   : 		{
; 16   : 			break;

	jmp	SHORT $LN2@asyn_test_
$LN1@asyn_test_:

; 17   : 		}
; 18   : 		pecker_critical_lock cs_lock;

	lea	ecx, DWORD PTR _cs_lock$67001[ebp]
	call	??0pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::pecker_critical_lock
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 19   : 		cs_lock.lock(&g_print_cs_lock);

	push	OFFSET _g_print_cs_lock
	lea	ecx, DWORD PTR _cs_lock$67001[ebp]
	call	?lock@pecker_critical_lock@pecker_sdk@@QAEJPAVpecker_critical_section@2@@Z ; pecker_sdk::pecker_critical_lock::lock

; 20   : 		PECKER_LOG_("thread_num:%d, num=%d\n",thread_num,g_add_num);

	mov	esi, esp
	mov	eax, DWORD PTR _g_add_num
	push	eax
	mov	ecx, DWORD PTR _thread_num$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BH@ENPCFFAP@thread_num?3?$CFd?0?5num?$DN?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 21   : 		cs_lock.unlock();

	lea	ecx, DWORD PTR _cs_lock$67001[ebp]
	call	?unlock@pecker_critical_lock@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_critical_lock::unlock

; 22   : 		++g_add_num;

	mov	eax, DWORD PTR _g_add_num
	add	eax, 1
	mov	DWORD PTR _g_add_num, eax

; 23   : 
; 24   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cs_lock$67001[ebp]
	call	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
	jmp	SHORT $LN3@asyn_test_
$LN2@asyn_test_:

; 25   : 
; 26   : 	return 0;

	xor	eax, eax

; 27   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@asyn_test_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@asyn_test_:
	DD	1
	DD	$LN9@asyn_test_
$LN9@asyn_test_:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@asyn_test_
$LN7@asyn_test_:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z$0:
	lea	ecx, DWORD PTR _cs_lock$67001[ebp]
	jmp	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
__ehhandler$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ENDP	; asyn_test_pecker_thread_proc_callback
PUBLIC	?syn_test_pecker_thread_proc_callback@@YGKPAX@Z	; syn_test_pecker_thread_proc_callback
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z$0
__ehfuncinfo$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z
_TEXT	SEGMENT
$T67293 = -236						; size = 4
_thread_num$ = -32					; size = 4
_cs_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_lpParameter$ = 8					; size = 4
?syn_test_pecker_thread_proc_callback@@YGKPAX@Z PROC	; syn_test_pecker_thread_proc_callback, COMDAT

; 30   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 31   : 	pecker_critical_lock cs_lock;

	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	??0pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::pecker_critical_lock
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 32   : 	SInt thread_num = ((SInt*)lpParameter)[0];

	mov	eax, DWORD PTR _lpParameter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _thread_num$[ebp], ecx
$LN3@syn_test_p:

; 33   : 	while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@syn_test_p

; 34   : 	{
; 35   : 		cs_lock.lock(&g_print_cs_lock);

	push	OFFSET _g_print_cs_lock
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	?lock@pecker_critical_lock@pecker_sdk@@QAEJPAVpecker_critical_section@2@@Z ; pecker_sdk::pecker_critical_lock::lock

; 36   : 		if (g_add_num > 100)

	cmp	DWORD PTR _g_add_num, 100		; 00000064H
	jle	SHORT $LN1@syn_test_p

; 37   : 		{
; 38   : 			break;

	jmp	SHORT $LN2@syn_test_p
$LN1@syn_test_p:

; 39   : 		}
; 40   : 		PECKER_LOG_("thread_num:%d, num=%d\n",thread_num,g_add_num);

	mov	esi, esp
	mov	eax, DWORD PTR _g_add_num
	push	eax
	mov	ecx, DWORD PTR _thread_num$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BH@ENPCFFAP@thread_num?3?$CFd?0?5num?$DN?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 41   : 		++g_add_num;

	mov	eax, DWORD PTR _g_add_num
	add	eax, 1
	mov	DWORD PTR _g_add_num, eax

; 42   : 
; 43   : 		cs_lock.unlock();

	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	?unlock@pecker_critical_lock@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_critical_lock::unlock

; 44   : 	}

	jmp	SHORT $LN3@syn_test_p
$LN2@syn_test_p:

; 45   : 
; 46   : 	return 0;

	mov	DWORD PTR $T67293[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
	mov	eax, DWORD PTR $T67293[ebp]

; 47   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@syn_test_p
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@syn_test_p:
	DD	1
	DD	$LN9@syn_test_p
$LN9@syn_test_p:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@syn_test_p
$LN7@syn_test_p:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z$0:
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	jmp	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
__ehhandler$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?syn_test_pecker_thread_proc_callback@@YGKPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ENDP	; syn_test_pecker_thread_proc_callback
PUBLIC	??_C@_0BP@GFNDCEIA@asyn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@KKNHKPH@syn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@ ; `string'
PUBLIC	?test_thread_proc@@YAXXZ			; test_thread_proc
EXTRN	??1pecker_thread_base@pecker_sdk@@UAE@XZ:PROC	; pecker_sdk::pecker_thread_base::~pecker_thread_base
EXTRN	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z:PROC ; pecker_sdk::pecker_thread_base::join_thread
EXTRN	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z:PROC ; pecker_sdk::pecker_thread_base::start_thread
EXTRN	??0pecker_thread_base@pecker_sdk@@QAE@XZ:PROC	; pecker_sdk::pecker_thread_base::pecker_thread_base
;	COMDAT ??_C@_0BP@GFNDCEIA@asyn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BP@GFNDCEIA@asyn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@ DB 'asyn '
	DB	'proc thread testing.....', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KKNHKPH@syn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@KKNHKPH@syn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@ DB 'syn pro'
	DB	'c thread testing.....', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?test_thread_proc@@YAXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?test_thread_proc@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?test_thread_proc@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?test_thread_proc@@YAXXZ$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?test_thread_proc@@YAXXZ
_TEXT	SEGMENT
_thread_asyn_test_proc4_num$ = -264			; size = 4
_thread_asyn_test_proc3_num$ = -252			; size = 4
_thread_asyn_test_proc2_num$ = -240			; size = 4
_thread_asyn_test_proc1_num$ = -228			; size = 4
_thread_asyn_test_proc4$ = -216				; size = 12
_thread_asyn_test_proc3$ = -196				; size = 12
_thread_asyn_test_proc2$ = -176				; size = 12
_thread_asyn_test_proc1$ = -156				; size = 12
_thread_syn_test_proc4_num$ = -136			; size = 4
_thread_syn_test_proc3_num$ = -124			; size = 4
_thread_syn_test_proc2_num$ = -112			; size = 4
_thread_syn_test_proc1_num$ = -100			; size = 4
_thread_syn_test_proc4$ = -88				; size = 12
_thread_syn_test_proc3$ = -68				; size = 12
_thread_syn_test_proc2$ = -48				; size = 12
_thread_syn_test_proc1$ = -28				; size = 12
__$EHRec$ = -12						; size = 12
?test_thread_proc@@YAXXZ PROC				; test_thread_proc, COMDAT

; 109  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?test_thread_proc@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 110  : 	pecker_thread_base thread_syn_test_proc1;

	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 111  : 	pecker_thread_base thread_syn_test_proc2;

	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 112  : 	pecker_thread_base thread_syn_test_proc3;

	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 113  : 	pecker_thread_base thread_syn_test_proc4;

	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 114  : 	SInt thread_syn_test_proc1_num = 1;

	mov	DWORD PTR _thread_syn_test_proc1_num$[ebp], 1

; 115  : 	SInt thread_syn_test_proc2_num = 2;

	mov	DWORD PTR _thread_syn_test_proc2_num$[ebp], 2

; 116  : 	SInt thread_syn_test_proc3_num = 3;

	mov	DWORD PTR _thread_syn_test_proc3_num$[ebp], 3

; 117  : 	SInt thread_syn_test_proc4_num = 4;

	mov	DWORD PTR _thread_syn_test_proc4_num$[ebp], 4

; 118  : 	g_add_num = 0;

	mov	DWORD PTR _g_add_num, 0

; 119  : 	PECKER_LOG_("syn proc thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BO@KKNHKPH@syn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 120  : 	thread_syn_test_proc1.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc1_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc1_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 121  : 	thread_syn_test_proc2.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc2_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc2_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 122  : 	thread_syn_test_proc3.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc3_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc3_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 123  : 	thread_syn_test_proc4.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc4_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc4_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 124  : 	thread_syn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 125  : 	thread_syn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 126  : 	thread_syn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 127  : 	thread_syn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 128  : 
; 129  : 	pecker_thread_base thread_asyn_test_proc1;

	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 130  : 	pecker_thread_base thread_asyn_test_proc2;

	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 131  : 	pecker_thread_base thread_asyn_test_proc3;

	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 132  : 	pecker_thread_base thread_asyn_test_proc4;

	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 133  : 	SInt thread_asyn_test_proc1_num = 1;

	mov	DWORD PTR _thread_asyn_test_proc1_num$[ebp], 1

; 134  : 	SInt thread_asyn_test_proc2_num = 2;

	mov	DWORD PTR _thread_asyn_test_proc2_num$[ebp], 2

; 135  : 	SInt thread_asyn_test_proc3_num = 3;

	mov	DWORD PTR _thread_asyn_test_proc3_num$[ebp], 3

; 136  : 	SInt thread_asyn_test_proc4_num = 4;

	mov	DWORD PTR _thread_asyn_test_proc4_num$[ebp], 4

; 137  : 	g_add_num = 0;

	mov	DWORD PTR _g_add_num, 0

; 138  : 	PECKER_LOG_("asyn proc thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BP@GFNDCEIA@asyn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 139  : 	thread_asyn_test_proc1.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc1_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc1_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 140  : 	thread_asyn_test_proc2.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc2_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc2_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 141  : 	thread_asyn_test_proc3.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc3_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc3_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 142  : 	thread_asyn_test_proc4.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc4_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc4_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 143  : 	thread_asyn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 144  : 	thread_asyn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 145  : 	thread_asyn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 146  : 	thread_asyn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 147  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@test_threa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN29@test_threa:
	DD	16					; 00000010H
	DD	$LN28@test_threa
$LN28@test_threa:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN11@test_threa
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN12@test_threa
	DD	-68					; ffffffbcH
	DD	12					; 0000000cH
	DD	$LN13@test_threa
	DD	-88					; ffffffa8H
	DD	12					; 0000000cH
	DD	$LN14@test_threa
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN15@test_threa
	DD	-112					; ffffff90H
	DD	4
	DD	$LN16@test_threa
	DD	-124					; ffffff84H
	DD	4
	DD	$LN17@test_threa
	DD	-136					; ffffff78H
	DD	4
	DD	$LN18@test_threa
	DD	-156					; ffffff64H
	DD	12					; 0000000cH
	DD	$LN19@test_threa
	DD	-176					; ffffff50H
	DD	12					; 0000000cH
	DD	$LN20@test_threa
	DD	-196					; ffffff3cH
	DD	12					; 0000000cH
	DD	$LN21@test_threa
	DD	-216					; ffffff28H
	DD	12					; 0000000cH
	DD	$LN22@test_threa
	DD	-228					; ffffff1cH
	DD	4
	DD	$LN23@test_threa
	DD	-240					; ffffff10H
	DD	4
	DD	$LN24@test_threa
	DD	-252					; ffffff04H
	DD	4
	DD	$LN25@test_threa
	DD	-264					; fffffef8H
	DD	4
	DD	$LN26@test_threa
$LN26@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN25@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN24@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN23@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN22@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN21@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN20@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN19@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN18@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN17@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN16@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN15@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN14@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN13@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN12@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN11@test_threa:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?test_thread_proc@@YAXXZ$0:
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$1:
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$2:
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$3:
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$4:
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$5:
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$6:
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_proc@@YAXXZ$7:
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__ehhandler$?test_thread_proc@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-464]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?test_thread_proc@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?test_thread_proc@@YAXXZ ENDP				; test_thread_proc
PUBLIC	??1test_syn_runable@@UAE@XZ			; test_syn_runable::~test_syn_runable
PUBLIC	??1test_asyn_runable@@UAE@XZ			; test_asyn_runable::~test_asyn_runable
PUBLIC	??_C@_0BO@EMDLMJJH@asyn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@ ; `string'
PUBLIC	??0test_asyn_runable@@QAE@XZ			; test_asyn_runable::test_asyn_runable
PUBLIC	??_C@_0BN@ICBCFPEB@syn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@ ; `string'
PUBLIC	??0test_syn_runable@@QAE@XZ			; test_syn_runable::test_syn_runable
PUBLIC	?test_thread_runable@@YAXXZ			; test_thread_runable
EXTRN	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z:PROC ; pecker_sdk::pecker_thread_base::start_thread
;	COMDAT ??_C@_0BO@EMDLMJJH@asyn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@EMDLMJJH@asyn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@ DB 'asyn o'
	DB	'bj thread testing.....', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ICBCFPEB@syn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BN@ICBCFPEB@syn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@ DB 'syn obj'
	DB	' thread testing.....', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?test_thread_runable@@YAXXZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?test_thread_runable@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?test_thread_runable@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$?test_thread_runable@@YAXXZ$9
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?test_thread_runable@@YAXXZ
_TEXT	SEGMENT
_thread_asyn_test_proc4$ = -200				; size = 12
_thread_asyn_test_proc3$ = -180				; size = 12
_thread_asyn_test_proc2$ = -160				; size = 12
_thread_asyn_test_proc1$ = -140				; size = 12
_asyn_run_target$ = -120				; size = 8
_thread_syn_test_proc4$ = -104				; size = 12
_thread_syn_test_proc3$ = -84				; size = 12
_thread_syn_test_proc2$ = -64				; size = 12
_thread_syn_test_proc1$ = -44				; size = 12
_syn_run_target$ = -24					; size = 8
__$EHRec$ = -12						; size = 12
?test_thread_runable@@YAXXZ PROC			; test_thread_runable, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?test_thread_runable@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 151  : 	test_syn_runable syn_run_target;

	lea	ecx, DWORD PTR _syn_run_target$[ebp]
	call	??0test_syn_runable@@QAE@XZ		; test_syn_runable::test_syn_runable
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 152  : 	pecker_thread_base thread_syn_test_proc1;

	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 153  : 	pecker_thread_base thread_syn_test_proc2;

	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 154  : 	pecker_thread_base thread_syn_test_proc3;

	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 155  : 	pecker_thread_base thread_syn_test_proc4;

	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 156  : 
; 157  : 	PECKER_LOG_("syn obj thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BN@ICBCFPEB@syn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 158  : 
; 159  : 	thread_syn_test_proc1.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 160  : 	thread_syn_test_proc2.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 161  : 	thread_syn_test_proc3.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 162  : 	thread_syn_test_proc4.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 163  : 
; 164  : 	thread_syn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 165  : 	thread_syn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 166  : 	thread_syn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 167  : 	thread_syn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 168  : 
; 169  : 	test_asyn_runable asyn_run_target;

	lea	ecx, DWORD PTR _asyn_run_target$[ebp]
	call	??0test_asyn_runable@@QAE@XZ		; test_asyn_runable::test_asyn_runable
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 170  : 	pecker_thread_base thread_asyn_test_proc1;

	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 171  : 	pecker_thread_base thread_asyn_test_proc2;

	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 172  : 	pecker_thread_base thread_asyn_test_proc3;

	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 173  : 	pecker_thread_base thread_asyn_test_proc4;

	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??0pecker_thread_base@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_thread_base::pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 174  : 
; 175  : 	PECKER_LOG_("asyn obj thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BO@EMDLMJJH@asyn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 176  : 
; 177  : 	thread_asyn_test_proc1.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 178  : 	thread_asyn_test_proc2.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 179  : 	thread_asyn_test_proc3.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 180  : 	thread_asyn_test_proc4.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?start_thread@pecker_thread_base@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread_base::start_thread

; 181  : 
; 182  : 	thread_asyn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 183  : 	thread_asyn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 184  : 	thread_asyn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 185  : 	thread_asyn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 186  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _asyn_run_target$[ebp]
	call	??1test_asyn_runable@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _syn_run_target$[ebp]
	call	??1test_syn_runable@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@test_threa@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN25@test_threa@2:
	DD	10					; 0000000aH
	DD	$LN24@test_threa@2
$LN24@test_threa@2:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN13@test_threa@2
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN14@test_threa@2
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN15@test_threa@2
	DD	-84					; ffffffacH
	DD	12					; 0000000cH
	DD	$LN16@test_threa@2
	DD	-104					; ffffff98H
	DD	12					; 0000000cH
	DD	$LN17@test_threa@2
	DD	-120					; ffffff88H
	DD	8
	DD	$LN18@test_threa@2
	DD	-140					; ffffff74H
	DD	12					; 0000000cH
	DD	$LN19@test_threa@2
	DD	-160					; ffffff60H
	DD	12					; 0000000cH
	DD	$LN20@test_threa@2
	DD	-180					; ffffff4cH
	DD	12					; 0000000cH
	DD	$LN21@test_threa@2
	DD	-200					; ffffff38H
	DD	12					; 0000000cH
	DD	$LN22@test_threa@2
$LN22@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN21@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN20@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN19@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN18@test_threa@2:
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN17@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN16@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN15@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN14@test_threa@2:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN13@test_threa@2:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?test_thread_runable@@YAXXZ$0:
	lea	ecx, DWORD PTR _syn_run_target$[ebp]
	jmp	??1test_syn_runable@@UAE@XZ
__unwindfunclet$?test_thread_runable@@YAXXZ$1:
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$2:
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$3:
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$4:
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$5:
	lea	ecx, DWORD PTR _asyn_run_target$[ebp]
	jmp	??1test_asyn_runable@@UAE@XZ
__unwindfunclet$?test_thread_runable@@YAXXZ$6:
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$7:
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$8:
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__unwindfunclet$?test_thread_runable@@YAXXZ$9:
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	jmp	??1pecker_thread_base@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_thread_base::~pecker_thread_base
__ehhandler$?test_thread_runable@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?test_thread_runable@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?test_thread_runable@@YAXXZ ENDP			; test_thread_runable
PUBLIC	??_7test_syn_runable@@6B@			; test_syn_runable::`vftable'
PUBLIC	??0Ipecker_runable@pecker_sdk@@QAE@XZ		; pecker_sdk::Ipecker_runable::Ipecker_runable
PUBLIC	??_R4test_syn_runable@@6B@			; test_syn_runable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVtest_syn_runable@@@8			; test_syn_runable `RTTI Type Descriptor'
PUBLIC	??_R3test_syn_runable@@8			; test_syn_runable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2test_syn_runable@@8			; test_syn_runable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@test_syn_runable@@8		; test_syn_runable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Ipecker_runable@pecker_sdk@@8	; pecker_sdk::Ipecker_runable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIpecker_runable@pecker_sdk@@@8		; pecker_sdk::Ipecker_runable `RTTI Type Descriptor'
PUBLIC	??_R3Ipecker_runable@pecker_sdk@@8		; pecker_sdk::Ipecker_runable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Ipecker_runable@pecker_sdk@@8		; pecker_sdk::Ipecker_runable::`RTTI Base Class Array'
PUBLIC	?run@test_syn_runable@@UAEXXZ			; test_syn_runable::run
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Etest_syn_runable@@UAEPAXI@Z:PROC		; test_syn_runable::`vector deleting destructor'
;	COMDAT ??_R2Ipecker_runable@pecker_sdk@@8
rdata$r	SEGMENT
??_R2Ipecker_runable@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@Ipecker_runable@pecker_sdk@@8 ; pecker_sdk::Ipecker_runable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Ipecker_runable@pecker_sdk@@8
rdata$r	SEGMENT
??_R3Ipecker_runable@pecker_sdk@@8 DD 00H		; pecker_sdk::Ipecker_runable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Ipecker_runable@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIpecker_runable@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AUIpecker_runable@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::Ipecker_runable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIpecker_runable@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Ipecker_runable@pecker_sdk@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Ipecker_runable@pecker_sdk@@8 DD FLAT:??_R0?AUIpecker_runable@pecker_sdk@@@8 ; pecker_sdk::Ipecker_runable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Ipecker_runable@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@test_syn_runable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@test_syn_runable@@8 DD FLAT:??_R0?AVtest_syn_runable@@@8 ; test_syn_runable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3test_syn_runable@@8
rdata$r	ENDS
;	COMDAT ??_R2test_syn_runable@@8
rdata$r	SEGMENT
??_R2test_syn_runable@@8 DD FLAT:??_R1A@?0A@EA@test_syn_runable@@8 ; test_syn_runable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_runable@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3test_syn_runable@@8
rdata$r	SEGMENT
??_R3test_syn_runable@@8 DD 00H				; test_syn_runable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2test_syn_runable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVtest_syn_runable@@@8
_DATA	SEGMENT
??_R0?AVtest_syn_runable@@@8 DD FLAT:??_7type_info@@6B@	; test_syn_runable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtest_syn_runable@@', 00H
_DATA	ENDS
;	COMDAT ??_R4test_syn_runable@@6B@
rdata$r	SEGMENT
??_R4test_syn_runable@@6B@ DD 00H			; test_syn_runable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtest_syn_runable@@@8
	DD	FLAT:??_R3test_syn_runable@@8
rdata$r	ENDS
;	COMDAT ??_7test_syn_runable@@6B@
CONST	SEGMENT
??_7test_syn_runable@@6B@ DD FLAT:??_R4test_syn_runable@@6B@ ; test_syn_runable::`vftable'
	DD	FLAT:??_Etest_syn_runable@@UAEPAXI@Z
	DD	FLAT:?run@test_syn_runable@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0test_syn_runable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0test_syn_runable@@QAE@XZ PROC			; test_syn_runable::test_syn_runable, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_runable@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7test_syn_runable@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 58   : 		;
; 59   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0test_syn_runable@@QAE@XZ ENDP			; test_syn_runable::test_syn_runable
_TEXT	ENDS
PUBLIC	??_C@_0BG@CHGENEMN@thread_id?3?$CFd?0?5num?$DN?$CFd?6?$AA@ ; `string'
EXTRN	?get_current_thread_id@pecker_thread_base@pecker_sdk@@SAKXZ:PROC ; pecker_sdk::pecker_thread_base::get_current_thread_id
;	COMDAT ??_C@_0BG@CHGENEMN@thread_id?3?$CFd?0?5num?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BG@CHGENEMN@thread_id?3?$CFd?0?5num?$DN?$CFd?6?$AA@ DB 'thread_id:'
	DB	'%d, num=%d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?run@test_syn_runable@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run@test_syn_runable@@UAEXXZ$0
__ehfuncinfo$?run@test_syn_runable@@UAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?run@test_syn_runable@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?run@test_syn_runable@@UAEXXZ
_TEXT	SEGMENT
_cs_lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?run@test_syn_runable@@UAEXXZ PROC			; test_syn_runable::run, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run@test_syn_runable@@UAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		pecker_critical_lock cs_lock;

	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	??0pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::pecker_critical_lock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN3@run:

; 64   : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@run

; 65   : 		{
; 66   : 			cs_lock.lock(&g_print_cs_lock);

	push	OFFSET _g_print_cs_lock
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	?lock@pecker_critical_lock@pecker_sdk@@QAEJPAVpecker_critical_section@2@@Z ; pecker_sdk::pecker_critical_lock::lock

; 67   : 			if (_M_add_num > 100)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 100			; 00000064H
	jle	SHORT $LN1@run

; 68   : 			{
; 69   : 				break;

	jmp	SHORT $LN2@run
$LN1@run:

; 70   : 			}
; 71   : 			PECKER_LOG_("thread_id:%d, num=%d\n",pecker_thread_base::get_current_thread_id(),_M_add_num);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?get_current_thread_id@pecker_thread_base@pecker_sdk@@SAKXZ ; pecker_sdk::pecker_thread_base::get_current_thread_id
	push	eax
	push	OFFSET ??_C@_0BG@CHGENEMN@thread_id?3?$CFd?0?5num?$DN?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 72   : 			++_M_add_num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 73   : 
; 74   : 			cs_lock.unlock();

	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	?unlock@pecker_critical_lock@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_critical_lock::unlock

; 75   : 		}

	jmp	SHORT $LN3@run
$LN2@run:

; 76   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@run
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@run:
	DD	1
	DD	$LN9@run
$LN9@run:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@run
$LN7@run:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?run@test_syn_runable@@UAEXXZ$0:
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	jmp	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
__ehhandler$?run@test_syn_runable@@UAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run@test_syn_runable@@UAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?run@test_syn_runable@@UAEXXZ ENDP			; test_syn_runable::run
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gtest_syn_runable@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gtest_syn_runable@@UAEPAXI@Z PROC			; test_syn_runable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1test_syn_runable@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gtest_syn_runable@@UAEPAXI@Z ENDP			; test_syn_runable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7Ipecker_runable@pecker_sdk@@6B@		; pecker_sdk::Ipecker_runable::`vftable'
PUBLIC	??_R4Ipecker_runable@pecker_sdk@@6B@		; pecker_sdk::Ipecker_runable::`RTTI Complete Object Locator'
EXTRN	??_EIpecker_runable@pecker_sdk@@UAEPAXI@Z:PROC	; pecker_sdk::Ipecker_runable::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R4Ipecker_runable@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4Ipecker_runable@pecker_sdk@@6B@ DD 00H		; pecker_sdk::Ipecker_runable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIpecker_runable@pecker_sdk@@@8
	DD	FLAT:??_R3Ipecker_runable@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7Ipecker_runable@pecker_sdk@@6B@
CONST	SEGMENT
??_7Ipecker_runable@pecker_sdk@@6B@ DD FLAT:??_R4Ipecker_runable@pecker_sdk@@6B@ ; pecker_sdk::Ipecker_runable::`vftable'
	DD	FLAT:??_EIpecker_runable@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Ipecker_runable@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Ipecker_runable@pecker_sdk@@QAE@XZ PROC		; pecker_sdk::Ipecker_runable::Ipecker_runable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_runable@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Ipecker_runable@pecker_sdk@@QAE@XZ ENDP		; pecker_sdk::Ipecker_runable::Ipecker_runable
_TEXT	ENDS
PUBLIC	??1Ipecker_runable@pecker_sdk@@UAE@XZ		; pecker_sdk::Ipecker_runable::~Ipecker_runable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIpecker_runable@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIpecker_runable@pecker_sdk@@UAEPAXI@Z PROC		; pecker_sdk::Ipecker_runable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_runable@pecker_sdk@@UAE@XZ	; pecker_sdk::Ipecker_runable::~Ipecker_runable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIpecker_runable@pecker_sdk@@UAEPAXI@Z ENDP		; pecker_sdk::Ipecker_runable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\native\pecker_thread.h
_TEXT	ENDS
;	COMDAT ??1Ipecker_runable@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Ipecker_runable@pecker_sdk@@UAE@XZ PROC		; pecker_sdk::Ipecker_runable::~Ipecker_runable, COMDAT
; _this$ = ecx

; 63   : 	virtual ~Ipecker_runable(){;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Ipecker_runable@pecker_sdk@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Ipecker_runable@pecker_sdk@@UAE@XZ ENDP		; pecker_sdk::Ipecker_runable::~Ipecker_runable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1test_syn_runable@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1test_syn_runable@@UAE@XZ PROC			; test_syn_runable::~test_syn_runable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_runable@pecker_sdk@@UAE@XZ	; pecker_sdk::Ipecker_runable::~Ipecker_runable
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1test_syn_runable@@UAE@XZ ENDP			; test_syn_runable::~test_syn_runable
_TEXT	ENDS
PUBLIC	??_7test_asyn_runable@@6B@			; test_asyn_runable::`vftable'
PUBLIC	??_R4test_asyn_runable@@6B@			; test_asyn_runable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVtest_asyn_runable@@@8			; test_asyn_runable `RTTI Type Descriptor'
PUBLIC	??_R3test_asyn_runable@@8			; test_asyn_runable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2test_asyn_runable@@8			; test_asyn_runable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@test_asyn_runable@@8		; test_asyn_runable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?run@test_asyn_runable@@UAEXXZ			; test_asyn_runable::run
EXTRN	??_Etest_asyn_runable@@UAEPAXI@Z:PROC		; test_asyn_runable::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@test_asyn_runable@@8
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\thread_test.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@test_asyn_runable@@8 DD FLAT:??_R0?AVtest_asyn_runable@@@8 ; test_asyn_runable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3test_asyn_runable@@8
rdata$r	ENDS
;	COMDAT ??_R2test_asyn_runable@@8
rdata$r	SEGMENT
??_R2test_asyn_runable@@8 DD FLAT:??_R1A@?0A@EA@test_asyn_runable@@8 ; test_asyn_runable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Ipecker_runable@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R3test_asyn_runable@@8
rdata$r	SEGMENT
??_R3test_asyn_runable@@8 DD 00H			; test_asyn_runable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2test_asyn_runable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVtest_asyn_runable@@@8
_DATA	SEGMENT
??_R0?AVtest_asyn_runable@@@8 DD FLAT:??_7type_info@@6B@ ; test_asyn_runable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtest_asyn_runable@@', 00H
_DATA	ENDS
;	COMDAT ??_R4test_asyn_runable@@6B@
rdata$r	SEGMENT
??_R4test_asyn_runable@@6B@ DD 00H			; test_asyn_runable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtest_asyn_runable@@@8
	DD	FLAT:??_R3test_asyn_runable@@8
rdata$r	ENDS
;	COMDAT ??_7test_asyn_runable@@6B@
CONST	SEGMENT
??_7test_asyn_runable@@6B@ DD FLAT:??_R4test_asyn_runable@@6B@ ; test_asyn_runable::`vftable'
	DD	FLAT:??_Etest_asyn_runable@@UAEPAXI@Z
	DD	FLAT:?run@test_asyn_runable@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0test_asyn_runable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0test_asyn_runable@@QAE@XZ PROC			; test_asyn_runable::test_asyn_runable, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Ipecker_runable@pecker_sdk@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7test_asyn_runable@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 85   : 		;
; 86   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0test_asyn_runable@@QAE@XZ ENDP			; test_asyn_runable::test_asyn_runable
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?run@test_asyn_runable@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run@test_asyn_runable@@UAEXXZ$0
__ehfuncinfo$?run@test_asyn_runable@@UAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?run@test_asyn_runable@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?run@test_asyn_runable@@UAEXXZ
_TEXT	SEGMENT
_cs_lock$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?run@test_asyn_runable@@UAEXXZ PROC			; test_asyn_runable::run, COMDAT
; _this$ = ecx

; 89   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?run@test_asyn_runable@@UAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 		pecker_critical_lock cs_lock;

	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	??0pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::pecker_critical_lock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN3@run@2:

; 91   : 		while (1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@run@2

; 92   : 		{
; 93   : 			
; 94   : 			if (_M_add_num > 100)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 100			; 00000064H
	jle	SHORT $LN1@run@2

; 95   : 			{
; 96   : 				break;

	jmp	SHORT $LN2@run@2
$LN1@run@2:

; 97   : 			}
; 98   : 			cs_lock.lock(&g_print_cs_lock);

	push	OFFSET _g_print_cs_lock
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	?lock@pecker_critical_lock@pecker_sdk@@QAEJPAVpecker_critical_section@2@@Z ; pecker_sdk::pecker_critical_lock::lock

; 99   : 			PECKER_LOG_("thread_id:%d, num=%d\n",pecker_thread_base::get_current_thread_id(),_M_add_num);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?get_current_thread_id@pecker_thread_base@pecker_sdk@@SAKXZ ; pecker_sdk::pecker_thread_base::get_current_thread_id
	push	eax
	push	OFFSET ??_C@_0BG@CHGENEMN@thread_id?3?$CFd?0?5num?$DN?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 100  : 			cs_lock.unlock();

	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	?unlock@pecker_critical_lock@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_critical_lock::unlock

; 101  : 			++_M_add_num;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 102  : 
; 103  : 			
; 104  : 		}

	jmp	SHORT $LN3@run@2
$LN2@run@2:

; 105  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	call	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@run@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@run@2:
	DD	1
	DD	$LN9@run@2
$LN9@run@2:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@run@2
$LN7@run@2:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	95					; 0000005fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?run@test_asyn_runable@@UAEXXZ$0:
	lea	ecx, DWORD PTR _cs_lock$[ebp]
	jmp	??1pecker_critical_lock@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_lock::~pecker_critical_lock
__ehhandler$?run@test_asyn_runable@@UAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run@test_asyn_runable@@UAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?run@test_asyn_runable@@UAEXXZ ENDP			; test_asyn_runable::run
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gtest_asyn_runable@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gtest_asyn_runable@@UAEPAXI@Z PROC			; test_asyn_runable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1test_asyn_runable@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gtest_asyn_runable@@UAEPAXI@Z ENDP			; test_asyn_runable::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1test_asyn_runable@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1test_asyn_runable@@UAE@XZ PROC			; test_asyn_runable::~test_asyn_runable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Ipecker_runable@pecker_sdk@@UAE@XZ	; pecker_sdk::Ipecker_runable::~Ipecker_runable
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1test_asyn_runable@@UAE@XZ ENDP			; test_asyn_runable::~test_asyn_runable
_TEXT	ENDS
PUBLIC	?test_thread_proc_1@@YAXXZ			; test_thread_proc_1
EXTRN	??1pecker_thread@pecker_sdk@@UAE@XZ:PROC	; pecker_sdk::pecker_thread::~pecker_thread
EXTRN	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z:PROC ; pecker_sdk::pecker_thread::start_thread
EXTRN	??0pecker_thread@pecker_sdk@@QAE@XZ:PROC	; pecker_sdk::pecker_thread::pecker_thread
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?test_thread_proc_1@@YAXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?test_thread_proc_1@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?test_thread_proc_1@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?test_thread_proc_1@@YAXXZ$7
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?test_thread_proc_1@@YAXXZ
_TEXT	SEGMENT
_thread_asyn_test_proc4_num$ = -616			; size = 4
_thread_asyn_test_proc3_num$ = -604			; size = 4
_thread_asyn_test_proc2_num$ = -592			; size = 4
_thread_asyn_test_proc1_num$ = -580			; size = 4
_thread_asyn_test_proc4$ = -568				; size = 56
_thread_asyn_test_proc3$ = -504				; size = 56
_thread_asyn_test_proc2$ = -440				; size = 56
_thread_asyn_test_proc1$ = -376				; size = 56
_thread_syn_test_proc4_num$ = -312			; size = 4
_thread_syn_test_proc3_num$ = -300			; size = 4
_thread_syn_test_proc2_num$ = -288			; size = 4
_thread_syn_test_proc1_num$ = -276			; size = 4
_thread_syn_test_proc4$ = -264				; size = 56
_thread_syn_test_proc3$ = -200				; size = 56
_thread_syn_test_proc2$ = -136				; size = 56
_thread_syn_test_proc1$ = -72				; size = 56
__$EHRec$ = -12						; size = 12
?test_thread_proc_1@@YAXXZ PROC				; test_thread_proc_1, COMDAT

; 189  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?test_thread_proc_1@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 800				; 00000320H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-812]
	mov	ecx, 200				; 000000c8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 190  : 	pecker_thread thread_syn_test_proc1;

	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 191  : 	pecker_thread thread_syn_test_proc2;

	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 192  : 	pecker_thread thread_syn_test_proc3;

	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 193  : 	pecker_thread thread_syn_test_proc4;

	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 194  : 	SInt thread_syn_test_proc1_num = 1;

	mov	DWORD PTR _thread_syn_test_proc1_num$[ebp], 1

; 195  : 	SInt thread_syn_test_proc2_num = 2;

	mov	DWORD PTR _thread_syn_test_proc2_num$[ebp], 2

; 196  : 	SInt thread_syn_test_proc3_num = 3;

	mov	DWORD PTR _thread_syn_test_proc3_num$[ebp], 3

; 197  : 	SInt thread_syn_test_proc4_num = 4;

	mov	DWORD PTR _thread_syn_test_proc4_num$[ebp], 4

; 198  : 	g_add_num = 0;

	mov	DWORD PTR _g_add_num, 0

; 199  : 	PECKER_LOG_("syn proc thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BO@KKNHKPH@syn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 200  : 	thread_syn_test_proc1.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc1_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc1_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 201  : 	thread_syn_test_proc2.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc2_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc2_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 202  : 	thread_syn_test_proc3.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc3_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc3_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 203  : 	thread_syn_test_proc4.start_thread(syn_test_pecker_thread_proc_callback,&thread_syn_test_proc4_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_syn_test_proc4_num$[ebp]
	push	eax
	push	OFFSET ?syn_test_pecker_thread_proc_callback@@YGKPAX@Z ; syn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 204  : 	thread_syn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 205  : 	thread_syn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 206  : 	thread_syn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 207  : 	thread_syn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 208  : 
; 209  : 	pecker_thread thread_asyn_test_proc1;

	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 210  : 	pecker_thread thread_asyn_test_proc2;

	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 211  : 	pecker_thread thread_asyn_test_proc3;

	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 212  : 	pecker_thread thread_asyn_test_proc4;

	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 213  : 	SInt thread_asyn_test_proc1_num = 1;

	mov	DWORD PTR _thread_asyn_test_proc1_num$[ebp], 1

; 214  : 	SInt thread_asyn_test_proc2_num = 2;

	mov	DWORD PTR _thread_asyn_test_proc2_num$[ebp], 2

; 215  : 	SInt thread_asyn_test_proc3_num = 3;

	mov	DWORD PTR _thread_asyn_test_proc3_num$[ebp], 3

; 216  : 	SInt thread_asyn_test_proc4_num = 4;

	mov	DWORD PTR _thread_asyn_test_proc4_num$[ebp], 4

; 217  : 	g_add_num = 0;

	mov	DWORD PTR _g_add_num, 0

; 218  : 	PECKER_LOG_("asyn proc thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BP@GFNDCEIA@asyn?5proc?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 219  : 	thread_asyn_test_proc1.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc1_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc1_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 220  : 	thread_asyn_test_proc2.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc2_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc2_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 221  : 	thread_asyn_test_proc3.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc3_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc3_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 222  : 	thread_asyn_test_proc4.start_thread(asyn_test_pecker_thread_proc_callback,&thread_asyn_test_proc4_num);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _thread_asyn_test_proc4_num$[ebp]
	push	eax
	push	OFFSET ?asyn_test_pecker_thread_proc_callback@@YGKPAX@Z ; asyn_test_pecker_thread_proc_callback
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJP6GKPAX@Z0PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 223  : 	thread_asyn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 224  : 	thread_asyn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 225  : 	thread_asyn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 226  : 	thread_asyn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 227  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@test_threa@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 812				; 0000032cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN29@test_threa@3:
	DD	16					; 00000010H
	DD	$LN28@test_threa@3
$LN28@test_threa@3:
	DD	-72					; ffffffb8H
	DD	56					; 00000038H
	DD	$LN11@test_threa@3
	DD	-136					; ffffff78H
	DD	56					; 00000038H
	DD	$LN12@test_threa@3
	DD	-200					; ffffff38H
	DD	56					; 00000038H
	DD	$LN13@test_threa@3
	DD	-264					; fffffef8H
	DD	56					; 00000038H
	DD	$LN14@test_threa@3
	DD	-276					; fffffeecH
	DD	4
	DD	$LN15@test_threa@3
	DD	-288					; fffffee0H
	DD	4
	DD	$LN16@test_threa@3
	DD	-300					; fffffed4H
	DD	4
	DD	$LN17@test_threa@3
	DD	-312					; fffffec8H
	DD	4
	DD	$LN18@test_threa@3
	DD	-376					; fffffe88H
	DD	56					; 00000038H
	DD	$LN19@test_threa@3
	DD	-440					; fffffe48H
	DD	56					; 00000038H
	DD	$LN20@test_threa@3
	DD	-504					; fffffe08H
	DD	56					; 00000038H
	DD	$LN21@test_threa@3
	DD	-568					; fffffdc8H
	DD	56					; 00000038H
	DD	$LN22@test_threa@3
	DD	-580					; fffffdbcH
	DD	4
	DD	$LN23@test_threa@3
	DD	-592					; fffffdb0H
	DD	4
	DD	$LN24@test_threa@3
	DD	-604					; fffffda4H
	DD	4
	DD	$LN25@test_threa@3
	DD	-616					; fffffd98H
	DD	4
	DD	$LN26@test_threa@3
$LN26@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN25@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN24@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN23@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN22@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN21@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN20@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN19@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN18@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN17@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN16@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN15@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN14@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN13@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN12@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN11@test_threa@3:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?test_thread_proc_1@@YAXXZ$0:
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$1:
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$2:
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$3:
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$4:
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$5:
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$6:
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_proc_1@@YAXXZ$7:
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__ehhandler$?test_thread_proc_1@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-816]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?test_thread_proc_1@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?test_thread_proc_1@@YAXXZ ENDP				; test_thread_proc_1
PUBLIC	?test_thread_runable_1@@YAXXZ			; test_thread_runable_1
EXTRN	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z:PROC ; pecker_sdk::pecker_thread::start_thread
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?test_thread_runable_1@@YAXXZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?test_thread_runable_1@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?test_thread_runable_1@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$?test_thread_runable_1@@YAXXZ$9
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?test_thread_runable_1@@YAXXZ
_TEXT	SEGMENT
_thread_asyn_test_proc4$ = -552				; size = 56
_thread_asyn_test_proc3$ = -488				; size = 56
_thread_asyn_test_proc2$ = -424				; size = 56
_thread_asyn_test_proc1$ = -360				; size = 56
_asyn_run_target$ = -296				; size = 8
_thread_syn_test_proc4$ = -280				; size = 56
_thread_syn_test_proc3$ = -216				; size = 56
_thread_syn_test_proc2$ = -152				; size = 56
_thread_syn_test_proc1$ = -88				; size = 56
_syn_run_target$ = -24					; size = 8
__$EHRec$ = -12						; size = 12
?test_thread_runable_1@@YAXXZ PROC			; test_thread_runable_1, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?test_thread_runable_1@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 736				; 000002e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-748]
	mov	ecx, 184				; 000000b8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 231  : 	test_syn_runable syn_run_target;

	lea	ecx, DWORD PTR _syn_run_target$[ebp]
	call	??0test_syn_runable@@QAE@XZ		; test_syn_runable::test_syn_runable
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 232  : 	pecker_thread thread_syn_test_proc1;

	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 233  : 	pecker_thread thread_syn_test_proc2;

	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 234  : 	pecker_thread thread_syn_test_proc3;

	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 235  : 	pecker_thread thread_syn_test_proc4;

	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 236  : 
; 237  : 	PECKER_LOG_("syn obj thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BN@ICBCFPEB@syn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 238  : 
; 239  : 	thread_syn_test_proc1.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 240  : 	thread_syn_test_proc2.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 241  : 	thread_syn_test_proc3.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 242  : 	thread_syn_test_proc4.start_thread(&syn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _syn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 243  : 
; 244  : 	thread_syn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 245  : 	thread_syn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 246  : 	thread_syn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 247  : 	thread_syn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 248  : 
; 249  : 	test_asyn_runable asyn_run_target;

	lea	ecx, DWORD PTR _asyn_run_target$[ebp]
	call	??0test_asyn_runable@@QAE@XZ		; test_asyn_runable::test_asyn_runable
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 250  : 	pecker_thread thread_asyn_test_proc1;

	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 251  : 	pecker_thread thread_asyn_test_proc2;

	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 252  : 	pecker_thread thread_asyn_test_proc3;

	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 253  : 	pecker_thread thread_asyn_test_proc4;

	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??0pecker_thread@pecker_sdk@@QAE@XZ	; pecker_sdk::pecker_thread::pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 254  : 
; 255  : 	PECKER_LOG_("asyn obj thread testing.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BO@EMDLMJJH@asyn?5obj?5thread?5testing?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 256  : 
; 257  : 	thread_asyn_test_proc1.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 258  : 	thread_asyn_test_proc2.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 259  : 	thread_asyn_test_proc3.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 260  : 	thread_asyn_test_proc4.start_thread(&asyn_run_target);

	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _asyn_run_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?start_thread@pecker_thread@pecker_sdk@@UAEJPAUIpecker_runable@2@PAU_SECURITY_ATTRIBUTES@@HJ@Z ; pecker_sdk::pecker_thread::start_thread

; 261  : 
; 262  : 	thread_asyn_test_proc1.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 263  : 	thread_asyn_test_proc2.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 264  : 	thread_asyn_test_proc3.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 265  : 	thread_asyn_test_proc4.join_thread(-1);

	push	-1
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	?join_thread@pecker_thread_base@pecker_sdk@@QAEJK@Z ; pecker_sdk::pecker_thread_base::join_thread

; 266  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _asyn_run_target$[ebp]
	call	??1test_asyn_runable@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	call	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _syn_run_target$[ebp]
	call	??1test_syn_runable@@UAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@test_threa@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 748				; 000002ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN25@test_threa@4:
	DD	10					; 0000000aH
	DD	$LN24@test_threa@4
$LN24@test_threa@4:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN13@test_threa@4
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN14@test_threa@4
	DD	-152					; ffffff68H
	DD	56					; 00000038H
	DD	$LN15@test_threa@4
	DD	-216					; ffffff28H
	DD	56					; 00000038H
	DD	$LN16@test_threa@4
	DD	-280					; fffffee8H
	DD	56					; 00000038H
	DD	$LN17@test_threa@4
	DD	-296					; fffffed8H
	DD	8
	DD	$LN18@test_threa@4
	DD	-360					; fffffe98H
	DD	56					; 00000038H
	DD	$LN19@test_threa@4
	DD	-424					; fffffe58H
	DD	56					; 00000038H
	DD	$LN20@test_threa@4
	DD	-488					; fffffe18H
	DD	56					; 00000038H
	DD	$LN21@test_threa@4
	DD	-552					; fffffdd8H
	DD	56					; 00000038H
	DD	$LN22@test_threa@4
$LN22@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN21@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN20@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN19@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN18@test_threa@4:
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN17@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	52					; 00000034H
	DB	0
$LN16@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	51					; 00000033H
	DB	0
$LN15@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN14@test_threa@4:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN13@test_threa@4:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?test_thread_runable_1@@YAXXZ$0:
	lea	ecx, DWORD PTR _syn_run_target$[ebp]
	jmp	??1test_syn_runable@@UAE@XZ
__unwindfunclet$?test_thread_runable_1@@YAXXZ$1:
	lea	ecx, DWORD PTR _thread_syn_test_proc1$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$2:
	lea	ecx, DWORD PTR _thread_syn_test_proc2$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$3:
	lea	ecx, DWORD PTR _thread_syn_test_proc3$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$4:
	lea	ecx, DWORD PTR _thread_syn_test_proc4$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$5:
	lea	ecx, DWORD PTR _asyn_run_target$[ebp]
	jmp	??1test_asyn_runable@@UAE@XZ
__unwindfunclet$?test_thread_runable_1@@YAXXZ$6:
	lea	ecx, DWORD PTR _thread_asyn_test_proc1$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$7:
	lea	ecx, DWORD PTR _thread_asyn_test_proc2$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$8:
	lea	ecx, DWORD PTR _thread_asyn_test_proc3$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__unwindfunclet$?test_thread_runable_1@@YAXXZ$9:
	lea	ecx, DWORD PTR _thread_asyn_test_proc4$[ebp]
	jmp	??1pecker_thread@pecker_sdk@@UAE@XZ	; pecker_sdk::pecker_thread::~pecker_thread
__ehhandler$?test_thread_runable_1@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-752]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?test_thread_runable_1@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?test_thread_runable_1@@YAXXZ ENDP			; test_thread_runable_1
EXTRN	_atexit:PROC
EXTRN	??0pecker_critical_section@pecker_sdk@@QAE@XZ:PROC ; pecker_sdk::pecker_critical_section::pecker_critical_section
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eg_print_cs_lock@@YAXXZ
text$yc	SEGMENT
??__Eg_print_cs_lock@@YAXXZ PROC			; `dynamic initializer for 'g_print_cs_lock'', COMDAT

; 6    : static pecker_critical_section g_print_cs_lock;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _g_print_cs_lock
	call	??0pecker_critical_section@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_section::pecker_critical_section
	push	OFFSET ??__Fg_print_cs_lock@@YAXXZ	; `dynamic atexit destructor for 'g_print_cs_lock''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eg_print_cs_lock@@YAXXZ ENDP			; `dynamic initializer for 'g_print_cs_lock''
text$yc	ENDS
EXTRN	??1pecker_critical_section@pecker_sdk@@QAE@XZ:PROC ; pecker_sdk::pecker_critical_section::~pecker_critical_section
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Fg_print_cs_lock@@YAXXZ
text$yd	SEGMENT
??__Fg_print_cs_lock@@YAXXZ PROC			; `dynamic atexit destructor for 'g_print_cs_lock'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _g_print_cs_lock
	call	??1pecker_critical_section@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_critical_section::~pecker_critical_section
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fg_print_cs_lock@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_print_cs_lock''
text$yd	ENDS
_BSS	SEGMENT
_g_print_cs_lock DB 01cH DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_print_cs_lock$initializer$ DD FLAT:??__Eg_print_cs_lock@@YAXXZ
CRT$XCU	ENDS
END
