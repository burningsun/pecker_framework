; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	F:\codes\pecker_framework_git\pecker_src\pecker_framework\PeckerObject.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_gu64Hashbase DQ 0000000011223344H
_DATA	ENDS
PUBLIC	?ToHashCode@PeckerObject@pecker_sdk@@UAE_KXZ	; pecker_sdk::PeckerObject::ToHashCode
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\peckerobject.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?ToHashCode@PeckerObject@pecker_sdk@@UAE_KXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToHashCode@PeckerObject@pecker_sdk@@UAE_KXZ PROC	; pecker_sdk::PeckerObject::ToHashCode, COMDAT
; _this$ = ecx

; 14   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 15   :   return (gu64Hashbase + (U64bit)this);

	mov	eax, DWORD PTR _this$[ebp]
	cdq
	add	eax, DWORD PTR _gu64Hashbase
	adc	edx, DWORD PTR _gu64Hashbase+4

; 16   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToHashCode@PeckerObject@pecker_sdk@@UAE_KXZ ENDP	; pecker_sdk::PeckerObject::ToHashCode
_TEXT	ENDS
PUBLIC	?GetObjType@PeckerObject@pecker_sdk@@UAE?AU_st_stringchars@2@PADI@Z ; pecker_sdk::PeckerObject::GetObjType
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetObjType@PeckerObject@pecker_sdk@@UAE?AU_st_stringchars@2@PADI@Z
_TEXT	SEGMENT
_nRetnVal$ = -24					; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pStrBuf$ = 12						; size = 4
_nBufLen$ = 16						; size = 4
?GetObjType@PeckerObject@pecker_sdk@@UAE?AU_st_stringchars@2@PADI@Z PROC ; pecker_sdk::PeckerObject::GetObjType, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   :   StringChars nRetnVal =
; 21   :   { pStrBuf,nBufLen};

	mov	eax, DWORD PTR _pStrBuf$[ebp]
	mov	DWORD PTR _nRetnVal$[ebp], eax
	mov	eax, DWORD PTR _nBufLen$[ebp]
	mov	DWORD PTR _nRetnVal$[ebp+4], eax

; 22   :   this->GetObjType(nRetnVal);

	mov	esi, esp
	lea	eax, DWORD PTR _nRetnVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 23   :   return nRetnVal;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _nRetnVal$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _nRetnVal$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 24   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetObjType
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN5@GetObjType:
	DD	1
	DD	$LN4@GetObjType
$LN4@GetObjType:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@GetObjType
$LN3@GetObjType:
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?GetObjType@PeckerObject@pecker_sdk@@UAE?AU_st_stringchars@2@PADI@Z ENDP ; pecker_sdk::PeckerObject::GetObjType
_TEXT	ENDS
PUBLIC	?GetObjType@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@@Z ; pecker_sdk::PeckerObject::GetObjType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetObjType@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@@Z
_TEXT	SEGMENT
_i$65715 = -32						; size = 4
_pchar$ = -20						; size = 4
_this$ = -8						; size = 4
_pStrChars$ = 8						; size = 4
?GetObjType@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@@Z PROC ; pecker_sdk::PeckerObject::GetObjType, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 28   :   const char* pchar = 0;//typeid(*this).name();

	mov	DWORD PTR _pchar$[ebp], 0

; 29   : 
; 30   :   for(U32bit i=0;i<pStrChars._M_buffer_size;++i)

	mov	DWORD PTR _i$65715[ebp], 0
	jmp	SHORT $LN5@GetObjType@2
$LN4@GetObjType@2:
	mov	eax, DWORD PTR _i$65715[ebp]
	add	eax, 1
	mov	DWORD PTR _i$65715[ebp], eax
$LN5@GetObjType@2:
	mov	eax, DWORD PTR _pStrChars$[ebp]
	mov	ecx, DWORD PTR _i$65715[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@GetObjType@2

; 31   :   {
; 32   :     if(0 != pchar[i])

	mov	eax, DWORD PTR _pchar$[ebp]
	add	eax, DWORD PTR _i$65715[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@GetObjType@2

; 33   :     {
; 34   :       pStrChars._M_buffer[i] = pchar[i];

	mov	eax, DWORD PTR _pStrChars$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pchar$[ebp]
	add	edx, DWORD PTR _i$65715[ebp]
	mov	eax, DWORD PTR _i$65715[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax], dl

; 35   :     }
; 36   :     else

	jmp	SHORT $LN1@GetObjType@2
$LN2@GetObjType@2:

; 37   :     {
; 38   :       pStrChars._M_buffer_size = i;

	mov	eax, DWORD PTR _pStrChars$[ebp]
	mov	ecx, DWORD PTR _i$65715[ebp]
	mov	DWORD PTR [eax+4], ecx

; 39   :       break;

	jmp	SHORT $LN3@GetObjType@2
$LN1@GetObjType@2:

; 40   :     }
; 41   :   }

	jmp	SHORT $LN4@GetObjType@2
$LN3@GetObjType@2:

; 42   :   pStrChars._M_buffer[pStrChars._M_buffer_size] = 0;

	mov	eax, DWORD PTR _pStrChars$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pStrChars$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx+eax], 0

; 43   : 
; 44   :   return &pStrChars;

	mov	eax, DWORD PTR _pStrChars$[ebp]

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetObjType@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@@Z ENDP ; pecker_sdk::PeckerObject::GetObjType
_TEXT	ENDS
PUBLIC	?InitObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z ; pecker_sdk::PeckerObject::InitObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InitObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pParams$ = 8						; size = 4
?InitObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z PROC ; pecker_sdk::PeckerObject::InitObject, COMDAT
; _this$ = ecx

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 49   :   return 0;

	xor	eax, eax

; 50   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?InitObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z ENDP ; pecker_sdk::PeckerObject::InitObject
_TEXT	ENDS
PUBLIC	?ReleaseObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z ; pecker_sdk::PeckerObject::ReleaseObject
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pParams$ = 8						; size = 4
?ReleaseObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z PROC ; pecker_sdk::PeckerObject::ReleaseObject, COMDAT
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   :   return 0;

	xor	eax, eax

; 55   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseObject@PeckerObject@pecker_sdk@@UAEJPBU_st_params@2@@Z ENDP ; pecker_sdk::PeckerObject::ReleaseObject
_TEXT	ENDS
PUBLIC	?ToString@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@PBU_st_const_stringchars@2@@Z ; pecker_sdk::PeckerObject::ToString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToString@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@PBU_st_const_stringchars@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pStrChars$ = 8						; size = 4
_strFormat$ = 12					; size = 4
?ToString@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@PBU_st_const_stringchars@2@@Z PROC ; pecker_sdk::PeckerObject::ToString, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 59   :   return GetObjType(pStrChars);

	mov	esi, esp
	mov	eax, DWORD PTR _pStrChars$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 60   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ToString@PeckerObject@pecker_sdk@@UAEPBU_st_stringchars@2@AAU32@PBU_st_const_stringchars@2@@Z ENDP ; pecker_sdk::PeckerObject::ToString
_TEXT	ENDS
END
