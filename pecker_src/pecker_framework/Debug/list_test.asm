; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	F:\codes\pecker_framework_git\pecker_src\pecker_framework\list_test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
PUBLIC	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
PUBLIC	?clear@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::clear
PUBLIC	??_C@_08LCFOHBEA@?6erases?6?$AA@		; `string'
PUBLIC	?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@0@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase
PUBLIC	?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_size
PUBLIC	??_C@_07PNFCEDBI@?6erase?6?$AA@			; `string'
PUBLIC	??_C@_0BC@LCHMONGJ@node?5value?5?$DN?5null?$AA@	; `string'
PUBLIC	??_C@_0BC@DBMDACMH@?6erase?5next?4?4?4?4?4?6?$AA@ ; `string'
PUBLIC	?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase
PUBLIC	?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::copy
PUBLIC	?copy@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJABV12@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::copy
PUBLIC	??_C@_0BH@JNEMLCPG@?6iterator?5inc?5and?5dec?6?$AA@ ; `string'
PUBLIC	?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::decrement
PUBLIC	??_C@_0P@DHJENHKE@?6iterator?5dec?6?$AA@	; `string'
PUBLIC	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
PUBLIC	??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@ ; `string'
PUBLIC	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
PUBLIC	??_C@_0O@HJGCJDCC@iterator?5inc?6?$AA@		; `string'
PUBLIC	?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJW4enumLINEAR_INTERATOR_INIT_TYPE@@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init
PUBLIC	?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator
PUBLIC	?push@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEPBU?$pecker_linked_list_node_t@H@2@ABH@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::push
PUBLIC	??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
PUBLIC	??0?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
PUBLIC	?list_test@@YAHXZ				; list_test
EXTRN	__imp__printf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_08LCFOHBEA@?6erases?6?$AA@
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\list_test.cpp
CONST	SEGMENT
??_C@_08LCFOHBEA@?6erases?6?$AA@ DB 0aH, 'erases', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PNFCEDBI@?6erase?6?$AA@
CONST	SEGMENT
??_C@_07PNFCEDBI@?6erase?6?$AA@ DB 0aH, 'erase', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LCHMONGJ@node?5value?5?$DN?5null?$AA@
CONST	SEGMENT
??_C@_0BC@LCHMONGJ@node?5value?5?$DN?5null?$AA@ DB 'node value = null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DBMDACMH@?6erase?5next?4?4?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BC@DBMDACMH@?6erase?5next?4?4?4?4?4?6?$AA@ DB 0aH, 'erase next....'
	DB	'.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JNEMLCPG@?6iterator?5inc?5and?5dec?6?$AA@
CONST	SEGMENT
??_C@_0BH@JNEMLCPG@?6iterator?5inc?5and?5dec?6?$AA@ DB 0aH, 'iterator inc'
	DB	' and dec', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DHJENHKE@?6iterator?5dec?6?$AA@
CONST	SEGMENT
??_C@_0P@DHJENHKE@?6iterator?5dec?6?$AA@ DB 0aH, 'iterator dec', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
CONST	SEGMENT
??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@ DB 'node value = %d '
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HJGCJDCC@iterator?5inc?6?$AA@
CONST	SEGMENT
??_C@_0O@HJGCJDCC@iterator?5inc?6?$AA@ DB 'iterator inc', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?list_test@@YAHXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?list_test@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?list_test@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?list_test@@YAHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?list_test@@YAHXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?list_test@@YAHXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?list_test@@YAHXZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$?list_test@@YAHXZ$4
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?list_test@@YAHXZ
_TEXT	SEGMENT
$T68301 = -404						; size = 4
_i$67856 = -200						; size = 4
_i$67851 = -188						; size = 4
_i$67847 = -176						; size = 4
_i$67841 = -164						; size = 4
_i$67829 = -152						; size = 4
_i$67823 = -140						; size = 4
_i$67797 = -128						; size = 4
_lsiterator3$ = -116					; size = 12
_lsiterator2$ = -96					; size = 12
_lsiterator1$ = -76					; size = 12
_lstest2$ = -56						; size = 16
_lstest1$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
?list_test@@YAHXZ PROC					; list_test, COMDAT

; 6    : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?list_test@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-408]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 7    : 	typedef pecker_list_iterator< pecker_linked_list_node_t< int >, pecker_list< int > > _List_iterator_;
; 8    : 
; 9    : 	pecker_list< int > lstest1;

	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	??0?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 10   : 	pecker_list< int > lstest2;

	lea	ecx, DWORD PTR _lstest2$[ebp]
	call	??0?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 11   : 	_List_iterator_ lsiterator1;

	push	0
	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 12   : 	_List_iterator_ lsiterator2;

	push	0
	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 13   : 	_List_iterator_ lsiterator3;

	push	0
	lea	ecx, DWORD PTR _lsiterator3$[ebp]
	call	??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 14   : 
; 15   : 	for (int i=0;i<10;++i)

	mov	DWORD PTR _i$67797[ebp], 0
	jmp	SHORT $LN38@list_test
$LN37@list_test:
	mov	eax, DWORD PTR _i$67797[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67797[ebp], eax
$LN38@list_test:
	cmp	DWORD PTR _i$67797[ebp], 10		; 0000000aH
	jge	SHORT $LN36@list_test

; 16   : 	{
; 17   : 		lstest1.push(i);

	lea	eax, DWORD PTR _i$67797[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?push@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEPBU?$pecker_linked_list_node_t@H@2@ABH@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::push

; 18   : 	}

	jmp	SHORT $LN37@list_test
$LN36@list_test:

; 19   : 
; 20   : 	lstest1.get_iterator(&lsiterator1);

	lea	eax, DWORD PTR _lsiterator1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator

; 21   : 	lsiterator1.init(ITERATOR_INIT_BEGIN_INDEX);

	push	0
	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJW4enumLINEAR_INTERATOR_INIT_TYPE@@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init

; 22   : 
; 23   : 	PECKER_LOG_("iterator inc\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0O@HJGCJDCC@iterator?5inc?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@list_test:

; 24   : 	while(lsiterator1.get_current_node())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN34@list_test

; 25   : 	{
; 26   : 		PECKER_LOG_("node value = %d \n",lsiterator1.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 27   : 		if (P_OK != lsiterator1.increment())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
	test	eax, eax
	je	SHORT $LN33@list_test

; 28   : 		{
; 29   : 			break;

	jmp	SHORT $LN34@list_test
$LN33@list_test:

; 30   : 		}
; 31   : 	}

	jmp	SHORT $LN35@list_test
$LN34@list_test:

; 32   : 
; 33   : 	PECKER_LOG_("\niterator dec\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0P@DHJENHKE@?6iterator?5dec?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@list_test:

; 34   : 	while(lsiterator1.get_current_node())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN31@list_test

; 35   : 	{
; 36   : 		PECKER_LOG_("node value = %d \n",lsiterator1.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 37   : 		if (P_OK != lsiterator1.decrement())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::decrement
	test	eax, eax
	je	SHORT $LN30@list_test

; 38   : 		{
; 39   : 			break;

	jmp	SHORT $LN31@list_test
$LN30@list_test:

; 40   : 		}
; 41   : 	}

	jmp	SHORT $LN32@list_test
$LN31@list_test:

; 42   : 
; 43   : 	PECKER_LOG_("\niterator inc and dec\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BH@JNEMLCPG@?6iterator?5inc?5and?5dec?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 44   : 	for (int i=0;i<5;++i)

	mov	DWORD PTR _i$67823[ebp], 0
	jmp	SHORT $LN29@list_test
$LN28@list_test:
	mov	eax, DWORD PTR _i$67823[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67823[ebp], eax
$LN29@list_test:
	cmp	DWORD PTR _i$67823[ebp], 5
	jge	SHORT $LN27@list_test

; 45   : 	{
; 46   : 		if (lsiterator1.get_current_node())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN26@list_test

; 47   : 		{
; 48   : 			PECKER_LOG_("node value = %d \n",lsiterator1.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@list_test:

; 49   : 		}
; 50   : 		
; 51   : 		if (P_OK != lsiterator1.increment())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
	test	eax, eax
	je	SHORT $LN25@list_test

; 52   : 		{
; 53   : 			break;

	jmp	SHORT $LN27@list_test
$LN25@list_test:

; 54   : 		}
; 55   : 	}

	jmp	SHORT $LN28@list_test
$LN27@list_test:

; 56   : 	for (int i=0;i<5;++i)

	mov	DWORD PTR _i$67829[ebp], 0
	jmp	SHORT $LN24@list_test
$LN23@list_test:
	mov	eax, DWORD PTR _i$67829[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67829[ebp], eax
$LN24@list_test:
	cmp	DWORD PTR _i$67829[ebp], 5
	jge	SHORT $LN22@list_test

; 57   : 	{
; 58   : 		if (lsiterator1.get_current_node())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN21@list_test

; 59   : 		{
; 60   : 			PECKER_LOG_("node value = %d \n",lsiterator1.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@list_test:

; 61   : 		}
; 62   : 
; 63   : 		if (P_OK != lsiterator1.decrement())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::decrement
	test	eax, eax
	je	SHORT $LN20@list_test

; 64   : 		{
; 65   : 			break;

	jmp	SHORT $LN22@list_test
$LN20@list_test:

; 66   : 		}
; 67   : 	}

	jmp	SHORT $LN23@list_test
$LN22@list_test:

; 68   : 
; 69   : 	lstest2.copy(lstest1);

	lea	eax, DWORD PTR _lstest1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest2$[ebp]
	call	?copy@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJABV12@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::copy

; 70   : 	lsiterator2.copy(&lsiterator1);

	lea	eax, DWORD PTR _lsiterator1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::copy

; 71   : 	if (P_OK != lsiterator2.increment())

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
	test	eax, eax
	je	SHORT $LN19@list_test

; 72   : 	{
; 73   : 		lsiterator2.decrement();

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::decrement
$LN19@list_test:

; 74   : 	}
; 75   : 	lstest1.erase(&lsiterator1);

	lea	eax, DWORD PTR _lsiterator1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase

; 76   : 	lsiterator1.copy(&lsiterator2);

	lea	eax, DWORD PTR _lsiterator2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::copy

; 77   : 
; 78   : 	PECKER_LOG_("\nerase next.....\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BC@DBMDACMH@?6erase?5next?4?4?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 79   : 	if (lsiterator1.get_current_node())

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN18@list_test

; 80   : 	{
; 81   : 		PECKER_LOG_("node value = %d \n",lsiterator1.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 82   : 	}
; 83   : 	else

	jmp	SHORT $LN17@list_test
$LN18@list_test:

; 84   : 	{
; 85   : 		PECKER_LOG_("node value = null",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0BC@LCHMONGJ@node?5value?5?$DN?5null?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@list_test:

; 86   : 	}
; 87   : 
; 88   : 	lstest1.get_iterator(&lsiterator2);

	lea	eax, DWORD PTR _lsiterator2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator

; 89   : 
; 90   : 	PECKER_LOG_("\nerase\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_07PNFCEDBI@?6erase?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 91   : 	for (int i=0;i<lstest1.get_size();++i)

	mov	DWORD PTR _i$67841[ebp], 0
	jmp	SHORT $LN16@list_test
$LN15@list_test:
	mov	eax, DWORD PTR _i$67841[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67841[ebp], eax
$LN16@list_test:
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_size
	cmp	DWORD PTR _i$67841[ebp], eax
	jge	SHORT $LN14@list_test

; 92   : 	{
; 93   : 		if (lsiterator2.get_current_node())

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN13@list_test

; 94   : 		{
; 95   : 			PECKER_LOG_("node value = %d \n",lsiterator2.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@list_test:

; 96   : 		}
; 97   : 		if (P_OK != lsiterator2.increment())

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
	test	eax, eax
	je	SHORT $LN12@list_test

; 98   : 		{
; 99   : 			break;

	jmp	SHORT $LN14@list_test
$LN12@list_test:

; 100  : 		}
; 101  : 	}

	jmp	SHORT $LN15@list_test
$LN14@list_test:

; 102  : 
; 103  : 	lstest1.get_iterator(&lsiterator1);

	lea	eax, DWORD PTR _lsiterator1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator

; 104  : 	lstest1.get_iterator(&lsiterator2);

	lea	eax, DWORD PTR _lsiterator2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator

; 105  : 
; 106  : 	for (int i=0;i<4;++i)

	mov	DWORD PTR _i$67847[ebp], 0
	jmp	SHORT $LN11@list_test
$LN10@list_test:
	mov	eax, DWORD PTR _i$67847[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67847[ebp], eax
$LN11@list_test:
	cmp	DWORD PTR _i$67847[ebp], 4
	jge	SHORT $LN9@list_test

; 107  : 	{
; 108  : 		lsiterator1.increment();

	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment

; 109  : 	}

	jmp	SHORT $LN10@list_test
$LN9@list_test:

; 110  : 	for (int i=0;i<7;++i)

	mov	DWORD PTR _i$67851[ebp], 0
	jmp	SHORT $LN8@list_test
$LN7@list_test:
	mov	eax, DWORD PTR _i$67851[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67851[ebp], eax
$LN8@list_test:
	cmp	DWORD PTR _i$67851[ebp], 7
	jge	SHORT $LN6@list_test

; 111  : 	{
; 112  : 		lsiterator2.increment();

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment

; 113  : 	}

	jmp	SHORT $LN7@list_test
$LN6@list_test:

; 114  : 	lstest1.erase(&lsiterator1,&lsiterator2);

	lea	eax, DWORD PTR _lsiterator2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@0@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase

; 115  : 
; 116  : 	lstest1.get_iterator(&lsiterator2);

	lea	eax, DWORD PTR _lsiterator2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator

; 117  : 
; 118  : 	PECKER_LOG_("\nerases\n",0);

	mov	esi, esp
	push	0
	push	OFFSET ??_C@_08LCFOHBEA@?6erases?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 119  : 	for (int i=0;i<lstest1.get_size();++i)

	mov	DWORD PTR _i$67856[ebp], 0
	jmp	SHORT $LN5@list_test
$LN4@list_test:
	mov	eax, DWORD PTR _i$67856[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67856[ebp], eax
$LN5@list_test:
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_size
	cmp	DWORD PTR _i$67856[ebp], eax
	jge	SHORT $LN3@list_test

; 120  : 	{
; 121  : 		if (lsiterator2.get_current_node())

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	test	eax, eax
	je	SHORT $LN2@list_test

; 122  : 		{
; 123  : 			PECKER_LOG_("node value = %d \n",lsiterator2.get_current_node()->value);

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
	mov	esi, esp
	mov	eax, DWORD PTR [eax+8]
	push	eax
	push	OFFSET ??_C@_0BC@DPNNAMEO@node?5value?5?$DN?5?$CFd?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@list_test:

; 124  : 		}
; 125  : 		if (P_OK != lsiterator2.increment())

	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
	test	eax, eax
	je	SHORT $LN1@list_test

; 126  : 		{
; 127  : 			break;

	jmp	SHORT $LN3@list_test
$LN1@list_test:

; 128  : 		}
; 129  : 	}

	jmp	SHORT $LN4@list_test
$LN3@list_test:

; 130  : 	lstest1.clear();

	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	?clear@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::clear

; 131  : 
; 132  : 	return 0;

	mov	DWORD PTR $T68301[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _lsiterator3$[ebp]
	call	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	call	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	call	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _lstest2$[ebp]
	call	??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lstest1$[ebp]
	call	??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
	mov	eax, DWORD PTR $T68301[ebp]

; 133  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN54@list_test
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 408				; 00000198H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN54@list_test:
	DD	6
	DD	$LN53@list_test
$LN53@list_test:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN46@list_test
	DD	-56					; ffffffc8H
	DD	16					; 00000010H
	DD	$LN47@list_test
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN48@list_test
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN49@list_test
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN50@list_test
	DD	-128					; ffffff80H
	DD	4
	DD	$LN51@list_test
$LN51@list_test:
	DB	105					; 00000069H
	DB	0
$LN50@list_test:
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	51					; 00000033H
	DB	0
$LN49@list_test:
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN48@list_test:
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN47@list_test:
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN46@list_test:
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?list_test@@YAHXZ$0:
	lea	ecx, DWORD PTR _lstest1$[ebp]
	jmp	??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
__unwindfunclet$?list_test@@YAHXZ$1:
	lea	ecx, DWORD PTR _lstest2$[ebp]
	jmp	??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
__unwindfunclet$?list_test@@YAHXZ$2:
	lea	ecx, DWORD PTR _lsiterator1$[ebp]
	jmp	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
__unwindfunclet$?list_test@@YAHXZ$3:
	lea	ecx, DWORD PTR _lsiterator2$[ebp]
	jmp	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
__unwindfunclet$?list_test@@YAHXZ$4:
	lea	ecx, DWORD PTR _lsiterator3$[ebp]
	jmp	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
__ehhandler$?list_test@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-412]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?list_test@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?list_test@@YAHXZ ENDP					; list_test
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\data\pecker_list.h
;	COMDAT ??0?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >, COMDAT
; _this$ = ecx

; 37   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 38   : 
; 39   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >, COMDAT
; _this$ = ecx

; 45   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::clear

; 47   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAE@XZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::~pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >
_TEXT	ENDS
PUBLIC	?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin
PUBLIC	?pop@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJABV12@@Z
_TEXT	SEGMENT
_i$67891 = -140						; size = 4
_i$67887 = -128						; size = 4
_ptemp_other_node$67886 = -116				; size = 4
_ptemp_this_node$67885 = -104				; size = 4
_i$67880 = -92						; size = 4
_ptemp_other_node$67879 = -80				; size = 4
_ptemp_this_node$67878 = -68				; size = 4
_i$67874 = -56						; size = 4
_return_result$ = -44					; size = 4
_listsize$ = -32					; size = 4
_othersize$ = -20					; size = 4
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?copy@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJABV12@@Z PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::copy, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		if (&other == this)

	mov	eax, DWORD PTR _other$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN16@copy

; 52   : 		{
; 53   : 			return P_OK;

	xor	eax, eax
	jmp	$LN17@copy
$LN16@copy:

; 54   : 		}
; 55   : 		list_size othersize = other.get_size();

	mov	ecx, DWORD PTR _other$[ebp]
	call	?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_size
	mov	DWORD PTR _othersize$[ebp], eax

; 56   : 		list_size listsize = _M_node_count - othersize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _othersize$[ebp]
	mov	DWORD PTR _listsize$[ebp], ecx

; 57   : 		list_result return_result = P_OK;

	mov	DWORD PTR _return_result$[ebp], 0

; 58   : 		if (listsize >= 0)

	cmp	DWORD PTR _listsize$[ebp], 0
	jl	SHORT $LN15@copy

; 59   : 		{
; 60   : 			for (list_size i=0;i<listsize;++i)

	mov	DWORD PTR _i$67874[ebp], 0
	jmp	SHORT $LN14@copy
$LN13@copy:
	mov	eax, DWORD PTR _i$67874[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67874[ebp], eax
$LN14@copy:
	mov	eax, DWORD PTR _i$67874[ebp]
	cmp	eax, DWORD PTR _listsize$[ebp]
	jge	SHORT $LN12@copy

; 61   : 			{
; 62   : 				pop();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop

; 63   : 			}

	jmp	SHORT $LN13@copy
$LN12@copy:

; 64   : 			linked_list_node_t* ptemp_this_node = _M_pbegin_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ptemp_this_node$67878[ebp], ecx

; 65   : 			const linked_list_node_t* ptemp_other_node = other.begin();

	mov	ecx, DWORD PTR _other$[ebp]
	call	?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin
	mov	DWORD PTR _ptemp_other_node$67879[ebp], eax

; 66   : 			
; 67   : 			for (list_size i=0;i<othersize;++i)

	mov	DWORD PTR _i$67880[ebp], 0
	jmp	SHORT $LN11@copy
$LN10@copy:
	mov	eax, DWORD PTR _i$67880[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67880[ebp], eax
$LN11@copy:
	mov	eax, DWORD PTR _i$67880[ebp]
	cmp	eax, DWORD PTR _othersize$[ebp]
	jge	SHORT $LN9@copy

; 68   : 			{
; 69   : 				ptemp_this_node->value = ptemp_other_node->value;

	mov	eax, DWORD PTR _ptemp_this_node$67878[ebp]
	mov	ecx, DWORD PTR _ptemp_other_node$67879[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 70   : 				ptemp_this_node = ptemp_this_node->_M_next_node;

	mov	eax, DWORD PTR _ptemp_this_node$67878[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptemp_this_node$67878[ebp], ecx

; 71   : 				ptemp_other_node = ptemp_other_node->_M_next_node;

	mov	eax, DWORD PTR _ptemp_other_node$67879[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptemp_other_node$67879[ebp], ecx

; 72   : 			}

	jmp	SHORT $LN10@copy
$LN9@copy:

; 73   : 		}
; 74   : 		else

	jmp	$LN8@copy
$LN15@copy:

; 75   : 		{
; 76   : 			linked_list_node_t* ptemp_this_node = _M_pbegin_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ptemp_this_node$67885[ebp], ecx

; 77   : 			const linked_list_node_t* ptemp_other_node = other.begin();

	mov	ecx, DWORD PTR _other$[ebp]
	call	?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin
	mov	DWORD PTR _ptemp_other_node$67886[ebp], eax

; 78   : 
; 79   : 			for (list_size i=0;i<_M_node_count;++i)

	mov	DWORD PTR _i$67887[ebp], 0
	jmp	SHORT $LN7@copy
$LN6@copy:
	mov	eax, DWORD PTR _i$67887[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67887[ebp], eax
$LN7@copy:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$67887[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN5@copy

; 80   : 			{
; 81   : 				ptemp_this_node->value = ptemp_other_node->value;

	mov	eax, DWORD PTR _ptemp_this_node$67885[ebp]
	mov	ecx, DWORD PTR _ptemp_other_node$67886[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 82   : 				ptemp_this_node = ptemp_this_node->_M_next_node;

	mov	eax, DWORD PTR _ptemp_this_node$67885[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptemp_this_node$67885[ebp], ecx

; 83   : 				ptemp_other_node = ptemp_other_node->_M_next_node;

	mov	eax, DWORD PTR _ptemp_other_node$67886[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptemp_other_node$67886[ebp], ecx

; 84   : 			}

	jmp	SHORT $LN6@copy
$LN5@copy:

; 85   : 
; 86   : 			listsize = -listsize;

	mov	eax, DWORD PTR _listsize$[ebp]
	neg	eax
	mov	DWORD PTR _listsize$[ebp], eax

; 87   : 			
; 88   : 			for (list_size i=0;i<listsize;++i)

	mov	DWORD PTR _i$67891[ebp], 0
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	eax, DWORD PTR _i$67891[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67891[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR _i$67891[ebp]
	cmp	eax, DWORD PTR _listsize$[ebp]
	jge	SHORT $LN8@copy

; 89   : 			{
; 90   : 				if (null == push(ptemp_other_node->value))

	mov	eax, DWORD PTR _ptemp_other_node$67886[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEPBU?$pecker_linked_list_node_t@H@2@ABH@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::push
	test	eax, eax
	jne	SHORT $LN1@copy

; 91   : 				{
; 92   : 					return_result = P_ERR;

	mov	DWORD PTR _return_result$[ebp], -1

; 93   : 					break;

	jmp	SHORT $LN8@copy
$LN1@copy:

; 94   : 				}
; 95   : 				ptemp_other_node = ptemp_other_node->_M_next_node;

	mov	eax, DWORD PTR _ptemp_other_node$67886[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptemp_other_node$67886[ebp], ecx

; 96   : 			}

	jmp	SHORT $LN3@copy
$LN8@copy:

; 97   : 		}
; 98   : 
; 99   : 		return return_result;

	mov	eax, DWORD PTR _return_result$[ebp]
$LN17@copy:

; 100  : 
; 101  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?copy@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJABV12@@Z ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::copy
_TEXT	ENDS
PUBLIC	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node
PUBLIC	?clear@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEX_N@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::clear
PUBLIC	?Is_pool@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QBE_NXZ ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::Is_pool
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ
_TEXT	SEGMENT
_ptemp_erase$67904 = -32				; size = 4
_ptemp_b2e$67900 = -20					; size = 4
_this$ = -8						; size = 4
?clear@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::clear, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 		if (_M_allocator.Is_pool())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Is_pool@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QBE_NXZ ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::Is_pool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@clear

; 129  : 		{
; 130  : 			_M_allocator.clear(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEX_N@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::clear

; 131  : 			_M_pbegin_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 132  : 			_M_pend_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 133  : 			_M_node_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 134  : 			return P_OK;

	xor	eax, eax
	jmp	SHORT $LN5@clear

; 135  : 		}
; 136  : 		else

	jmp	SHORT $LN5@clear
$LN4@clear:

; 137  : 		{
; 138  : 			linked_list_node_t* ptemp_b2e = _M_pbegin_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ptemp_b2e$67900[ebp], ecx
$LN2@clear:

; 139  : 			while (ptemp_b2e != _M_pend_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptemp_b2e$67900[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	je	SHORT $LN1@clear

; 140  : 			{
; 141  : 				linked_list_node_t* ptemp_erase = ptemp_b2e;

	mov	eax, DWORD PTR _ptemp_b2e$67900[ebp]
	mov	DWORD PTR _ptemp_erase$67904[ebp], eax

; 142  : 				ptemp_b2e = ptemp_b2e->_M_next_node;

	mov	eax, DWORD PTR _ptemp_b2e$67900[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptemp_b2e$67900[ebp], ecx

; 143  : 				_M_allocator.release_node(ptemp_erase);

	mov	eax, DWORD PTR _ptemp_erase$67904[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node

; 144  : 			}

	jmp	SHORT $LN2@clear
$LN1@clear:

; 145  : 			_M_pbegin_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 146  : 			_M_pend_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 147  : 			_M_node_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 148  : 
; 149  : 			return P_OK;

	xor	eax, eax
$LN5@clear:

; 150  : 		}
; 151  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::clear
_TEXT	ENDS
PUBLIC	??$push_back_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJAAPAU?$pecker_linked_list_node_t@H@0@PAU10@@Z ; pecker_sdk::push_back_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
PUBLIC	?create_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEPAU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::create_node
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEPBU?$pecker_linked_list_node_t@H@2@ABH@Z
_TEXT	SEGMENT
_pnode$ = -20						; size = 4
_this$ = -8						; size = 4
_item_value$ = 8					; size = 4
?push@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEPBU?$pecker_linked_list_node_t@H@2@ABH@Z PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::push, COMDAT
; _this$ = ecx

; 154  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 155  : 		linked_list_node_t* pnode = _M_allocator.create_node();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?create_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEPAU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::create_node
	mov	DWORD PTR _pnode$[ebp], eax

; 156  : 		if (P_OK == push_back_list_node< linked_list_node_t >(_M_pend_node,pnode))

	mov	eax, DWORD PTR _pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$push_back_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJAAPAU?$pecker_linked_list_node_t@H@0@PAU10@@Z ; pecker_sdk::push_back_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@push

; 157  : 		{
; 158  : 			_M_pend_node = pnode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pnode$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 159  : 			pnode->value = item_value;

	mov	eax, DWORD PTR _pnode$[ebp]
	mov	ecx, DWORD PTR _item_value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx

; 160  : 			if (0 == _M_node_count)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@push

; 161  : 			{
; 162  : 				_M_pbegin_node = _M_pend_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
$LN2@push:

; 163  : 			}
; 164  : 			++_M_node_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 165  : 			return pnode;

	mov	eax, DWORD PTR _pnode$[ebp]
	jmp	SHORT $LN4@push

; 166  : 		}
; 167  : 		else

	jmp	SHORT $LN4@push
$LN3@push:

; 168  : 		{
; 169  : 			_M_allocator.release_node(pnode);

	mov	eax, DWORD PTR _pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node

; 170  : 			return null;

	xor	eax, eax
$LN4@push:

; 171  : 		}
; 172  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEPBU?$pecker_linked_list_node_t@H@2@ABH@Z ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::push
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_size, COMDAT
; _this$ = ecx

; 245  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		return _M_node_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 247  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_size@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEHXZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_size
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_plist_iterator$ = 8					; size = 4
?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator, COMDAT
; _this$ = ecx

; 249  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 250  : 		if (null != plist_iterator)

	cmp	DWORD PTR _plist_iterator$[ebp], 0
	je	SHORT $LN2@get_iterat

; 251  : 		{
; 252  : 			if (P_OK == plist_iterator->reinit(this))

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plist_iterator$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _plist_iterator$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@get_iterat

; 253  : 			{
; 254  : 				return plist_iterator;

	mov	eax, DWORD PTR _plist_iterator$[ebp]
	jmp	SHORT $LN3@get_iterat
$LN2@get_iterat:

; 255  : 			}
; 256  : 		}
; 257  : 		return null;

	xor	eax, eax
$LN3@get_iterat:

; 258  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_iterator@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@PAV32@@Z ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_iterator
_TEXT	ENDS
PUBLIC	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
PUBLIC	?pop_front@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop_front
PUBLIC	?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_node
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z
_TEXT	SEGMENT
_return_result$67931 = -32				; size = 4
_pitem_node$ = -20					; size = 4
_this$ = -8						; size = 4
_plist_iterator$ = 8					; size = 4
?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase, COMDAT
; _this$ = ecx

; 348  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 349  : 		linked_list_node_t* pitem_node = (linked_list_node_t*)get_node(plist_iterator);

	mov	eax, DWORD PTR _plist_iterator$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_node
	mov	DWORD PTR _pitem_node$[ebp], eax

; 350  : 		if (_M_pbegin_node == pitem_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _pitem_node$[ebp]
	jne	SHORT $LN5@erase

; 351  : 		{
; 352  : 			return pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_front@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop_front
	jmp	SHORT $LN6@erase
	jmp	SHORT $LN6@erase
$LN5@erase:

; 353  : 		}
; 354  : 		else if (_M_pend_node == pitem_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _pitem_node$[ebp]
	jne	SHORT $LN3@erase

; 355  : 		{
; 356  : 			return pop();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop
	jmp	SHORT $LN6@erase

; 357  : 		}
; 358  : 		else

	jmp	SHORT $LN6@erase
$LN3@erase:

; 359  : 		{
; 360  : 			list_result return_result = remove_list_node< linked_list_node_t >(pitem_node);

	mov	eax, DWORD PTR _pitem_node$[ebp]
	push	eax
	call	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 4
	mov	DWORD PTR _return_result$67931[ebp], eax

; 361  : 			if (P_OK == return_result)

	cmp	DWORD PTR _return_result$67931[ebp], 0
	jne	SHORT $LN1@erase

; 362  : 			{
; 363  : 				_M_allocator.release_node(pitem_node);

	mov	eax, DWORD PTR _pitem_node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node
$LN1@erase:

; 364  : 			}
; 365  : 			return return_result;

	mov	eax, DWORD PTR _return_result$67931[ebp]
$LN6@erase:

; 366  : 		}
; 367  : 
; 368  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase
_TEXT	ENDS
PUBLIC	??$remove_list_nodes_unsafe@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@0@Z ; pecker_sdk::remove_list_nodes_unsafe<pecker_sdk::pecker_linked_list_node_t<int> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@0@Z
_TEXT	SEGMENT
_pitem_node_erase$67975 = -104				; size = 4
_return_result$ = -92					; size = 4
_i$67949 = -80						; size = 4
_bcheck_ok$ = -65					; size = 1
_pitem_node_end_to_begin$ = -56				; size = 4
_pitem_node_begin_to_end$ = -44				; size = 4
_pitem_node_end$ = -32					; size = 4
_pitem_node_begin$ = -20				; size = 4
_this$ = -8						; size = 4
_plist_iterator_begin$ = 8				; size = 4
_plist_iterator_end$ = 12				; size = 4
?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@0@Z PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase, COMDAT
; _this$ = ecx

; 371  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 372  : 		linked_list_node_t* pitem_node_begin = (linked_list_node_t*)get_node(plist_iterator_begin);

	mov	eax, DWORD PTR _plist_iterator_begin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_node
	mov	DWORD PTR _pitem_node_begin$[ebp], eax

; 373  : 		linked_list_node_t* pitem_node_end = (linked_list_node_t*)get_node(plist_iterator_end);

	mov	eax, DWORD PTR _plist_iterator_end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_node
	mov	DWORD PTR _pitem_node_end$[ebp], eax

; 374  : 
; 375  : 		linked_list_node_t* pitem_node_begin_to_end = pitem_node_begin;

	mov	eax, DWORD PTR _pitem_node_begin$[ebp]
	mov	DWORD PTR _pitem_node_begin_to_end$[ebp], eax

; 376  : 		linked_list_node_t* pitem_node_end_to_begin = pitem_node_end;

	mov	eax, DWORD PTR _pitem_node_end$[ebp]
	mov	DWORD PTR _pitem_node_end_to_begin$[ebp], eax

; 377  : 
; 378  : 		boolean bcheck_ok = false;

	mov	BYTE PTR _bcheck_ok$[ebp], 0

; 379  : 
; 380  : 		if (pitem_node_begin == _M_pbegin_node && pitem_node_end == _M_pend_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_begin$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN19@erase@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_end$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN19@erase@2

; 381  : 		{
; 382  : 			bcheck_ok = true;

	mov	BYTE PTR _bcheck_ok$[ebp], 1

; 383  : 		}
; 384  : 		else

	jmp	SHORT $LN18@erase@2
$LN19@erase@2:

; 385  : 		{
; 386  : 			for (int i=0;i<=_M_node_count;++i)

	mov	DWORD PTR _i$67949[ebp], 0
	jmp	SHORT $LN17@erase@2
$LN16@erase@2:
	mov	eax, DWORD PTR _i$67949[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67949[ebp], eax
$LN17@erase@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$67949[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jg	SHORT $LN18@erase@2

; 387  : 			{
; 388  : 				if (pitem_node_end == pitem_node_begin_to_end)

	mov	eax, DWORD PTR _pitem_node_end$[ebp]
	cmp	eax, DWORD PTR _pitem_node_begin_to_end$[ebp]
	jne	SHORT $LN14@erase@2

; 389  : 				{
; 390  : 					bcheck_ok = true;

	mov	BYTE PTR _bcheck_ok$[ebp], 1

; 391  : 					break;

	jmp	SHORT $LN18@erase@2
	jmp	SHORT $LN13@erase@2
$LN14@erase@2:

; 392  : 				}
; 393  : 				else if (pitem_node_begin == pitem_node_end_to_begin)

	mov	eax, DWORD PTR _pitem_node_begin$[ebp]
	cmp	eax, DWORD PTR _pitem_node_end_to_begin$[ebp]
	jne	SHORT $LN13@erase@2

; 394  : 				{
; 395  : 					bcheck_ok = true;

	mov	BYTE PTR _bcheck_ok$[ebp], 1

; 396  : 					pitem_node_begin = pitem_node_end;

	mov	eax, DWORD PTR _pitem_node_end$[ebp]
	mov	DWORD PTR _pitem_node_begin$[ebp], eax

; 397  : 					pitem_node_end = pitem_node_end_to_begin;

	mov	eax, DWORD PTR _pitem_node_end_to_begin$[ebp]
	mov	DWORD PTR _pitem_node_end$[ebp], eax

; 398  : 					break;

	jmp	SHORT $LN18@erase@2
$LN13@erase@2:

; 399  : 				}
; 400  : 
; 401  : 				if (pitem_node_begin_to_end)

	cmp	DWORD PTR _pitem_node_begin_to_end$[ebp], 0
	je	SHORT $LN11@erase@2

; 402  : 				{
; 403  : 					pitem_node_begin_to_end = pitem_node_begin_to_end->_M_next_node;

	mov	eax, DWORD PTR _pitem_node_begin_to_end$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pitem_node_begin_to_end$[ebp], ecx
$LN11@erase@2:

; 404  : 				}
; 405  : 				if (pitem_node_end_to_begin)

	cmp	DWORD PTR _pitem_node_end_to_begin$[ebp], 0
	je	SHORT $LN10@erase@2

; 406  : 				{
; 407  : 					pitem_node_end_to_begin = pitem_node_end_to_begin->_M_next_node;

	mov	eax, DWORD PTR _pitem_node_end_to_begin$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pitem_node_end_to_begin$[ebp], ecx
$LN10@erase@2:

; 408  : 				}
; 409  : 			}

	jmp	SHORT $LN16@erase@2
$LN18@erase@2:

; 410  : 		}
; 411  : 
; 412  : 
; 413  : 		if (false == bcheck_ok)

	movzx	eax, BYTE PTR _bcheck_ok$[ebp]
	test	eax, eax
	jne	SHORT $LN9@erase@2

; 414  : 		{
; 415  : 			return P_ERR;

	or	eax, -1
	jmp	$LN20@erase@2
$LN9@erase@2:

; 416  : 		}
; 417  : 
; 418  : 		list_result return_result = remove_list_nodes_unsafe< linked_list_node_t >(pitem_node_begin,pitem_node_end);

	mov	eax, DWORD PTR _pitem_node_end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pitem_node_begin$[ebp]
	push	ecx
	call	??$remove_list_nodes_unsafe@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@0@Z ; pecker_sdk::remove_list_nodes_unsafe<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 8
	mov	DWORD PTR _return_result$[ebp], eax

; 419  : 		if (P_OK != return_result)

	cmp	DWORD PTR _return_result$[ebp], 0
	je	SHORT $LN8@erase@2

; 420  : 		{
; 421  : 			return return_result;

	mov	eax, DWORD PTR _return_result$[ebp]
	jmp	$LN20@erase@2
$LN8@erase@2:

; 422  : 		}
; 423  : 
; 424  : 		if (pitem_node_begin == _M_pbegin_node && pitem_node_end == _M_pend_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_begin$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN7@erase@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_end$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN7@erase@2

; 425  : 		{
; 426  : 			_M_pbegin_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 427  : 			_M_pend_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	jmp	SHORT $LN6@erase@2
$LN7@erase@2:

; 428  : 		}
; 429  : 		else if (pitem_node_begin == _M_pbegin_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_begin$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN5@erase@2

; 430  : 		{
; 431  : 			_M_pbegin_node = pitem_node_end->_M_next_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_end$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
	jmp	SHORT $LN6@erase@2
$LN5@erase@2:

; 432  : 		}
; 433  : 		else if (pitem_node_end == _M_pend_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_end$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN6@erase@2

; 434  : 		{
; 435  : 			_M_pend_node = pitem_node_begin->_M_pre_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pitem_node_begin$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
$LN6@erase@2:

; 436  : 		}
; 437  : 
; 438  : 		 pitem_node_end->_M_next_node = null;

	mov	eax, DWORD PTR _pitem_node_end$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@erase@2:

; 439  : 		 while (pitem_node_begin)

	cmp	DWORD PTR _pitem_node_begin$[ebp], 0
	je	SHORT $LN1@erase@2

; 440  : 		 {
; 441  : 			 linked_list_node_t* pitem_node_erase = pitem_node_begin;

	mov	eax, DWORD PTR _pitem_node_begin$[ebp]
	mov	DWORD PTR _pitem_node_erase$67975[ebp], eax

; 442  : 			 pitem_node_begin = (linked_list_node_t*)(pitem_node_begin->_M_next_node);

	mov	eax, DWORD PTR _pitem_node_begin$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pitem_node_begin$[ebp], ecx

; 443  : 			 _M_allocator.release_node(pitem_node_erase);

	mov	eax, DWORD PTR _pitem_node_erase$67975[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node

; 444  : 		 }

	jmp	SHORT $LN2@erase@2
$LN1@erase@2:

; 445  : 
; 446  : 		return P_OK;

	xor	eax, eax
$LN20@erase@2:

; 447  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJPAV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@0@Z ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::erase
_TEXT	ENDS
PUBLIC	??_7?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`vftable'
PUBLIC	??_R4?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@@8 ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init
PUBLIC	?reinit@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@W4enumLINEAR_INTERATOR_INIT_TYPE@@@Z ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::reinit
PUBLIC	?get_container@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_container
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEPAXI@Z:PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\data\pecker_list_iterator.h
rdata$r	SEGMENT
??_R1A@?0A@EA@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 DD FLAT:??_R0?AV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@@8 ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R2?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8
rdata$r	SEGMENT
??_R2?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 DD FLAT:??_R1A@?0A@EA@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8
rdata$r	SEGMENT
??_R3?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8 DD 00H ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@@8
_DATA	SEGMENT
??_R0?AV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@@8 DD FLAT:??_7type_info@@6B@ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$pecker_list_iterator@U?$pecker_linked_list_node_t@'
	DB	'H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@'
	DB	'pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked'
	DB	'_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$peck'
	DB	'er_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@
rdata$r	SEGMENT
??_R4?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@ DD 00H ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@@8
	DD	FLAT:??_R3?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@8
rdata$r	ENDS
;	COMDAT ??_7?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@
CONST	SEGMENT
??_7?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@ DD FLAT:??_R4?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`vftable'
	DD	FLAT:??_E?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEPAXI@Z
	DD	FLAT:?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJW4enumLINEAR_INTERATOR_INIT_TYPE@@@Z
	DD	FLAT:?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ
	DD	FLAT:?reinit@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@W4enumLINEAR_INTERATOR_INIT_TYPE@@@Z
	DD	FLAT:?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z
	DD	FLAT:?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ
	DD	FLAT:?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ
	DD	FLAT:?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ
	DD	FLAT:?get_container@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@XZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pcontainer$ = 8					; size = 4
??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >, COMDAT
; _this$ = ecx

; 26   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pcontainer$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 27   : 		if (null != _M_pContainer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@pecker_lis

; 28   : 		{
; 29   : 			_M_pCurrent_node = _M_pContainer->begin();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN2@pecker_lis:

; 30   : 		}
; 31   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@QAE@PBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@1@@Z ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >, COMDAT
; _this$ = ecx

; 37   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@6B@

; 38   : 		_M_pContainer = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 39   : 		_M_pCurrent_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 40   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		return init(ITERATOR_INIT_BEGIN_INDEX);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init
_TEXT	ENDS
PUBLIC	?end@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::end
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJW4enumLINEAR_INTERATOR_INIT_TYPE@@@Z
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
_init_type$ = 8						; size = 4
?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJW4enumLINEAR_INTERATOR_INIT_TYPE@@@Z PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 		if (null != _M_pContainer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN7@init

; 51   : 		{
; 52   : 			switch (init_type)

	mov	eax, DWORD PTR _init_type$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 0
	je	SHORT $LN4@init
	cmp	DWORD PTR tv66[ebp], 1
	je	SHORT $LN3@init
	jmp	SHORT $LN2@init
$LN4@init:

; 53   : 			{
; 54   : 			case ITERATOR_INIT_BEGIN_INDEX:
; 55   : 				_M_pCurrent_node = _M_pContainer->begin();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 56   : 				break;

	jmp	SHORT $LN5@init
$LN3@init:

; 57   : 			case ITERATOR_INIT_END_INDEX:
; 58   : 				_M_pCurrent_node = _M_pContainer->end();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?end@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::end
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 59   : 				break;

	jmp	SHORT $LN5@init
$LN2@init:

; 60   : 			default:
; 61   : 				return P_ERR;

	or	eax, -1
	jmp	SHORT $LN8@init
$LN5@init:

; 62   : 			}
; 63   : 			return P_OK;

	xor	eax, eax
	jmp	SHORT $LN8@init

; 64   : 		}
; 65   : 		else

	jmp	SHORT $LN8@init
$LN7@init:

; 66   : 		{
; 67   : 			_M_pCurrent_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 68   : 			return P_SUCCESS;

	mov	eax, 6
$LN8@init:

; 69   : 		}
; 70   : 
; 71   : 
; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?init@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJW4enumLINEAR_INTERATOR_INIT_TYPE@@@Z ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?reinit@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@W4enumLINEAR_INTERATOR_INIT_TYPE@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pcontainer$ = 8					; size = 4
_init_type$ = 12					; size = 4
?reinit@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@W4enumLINEAR_INTERATOR_INIT_TYPE@@@Z PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::reinit, COMDAT
; _this$ = ecx

; 75   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		if (pcontainer != null)

	cmp	DWORD PTR _pcontainer$[ebp], 0
	je	SHORT $LN1@reinit

; 77   : 		{
; 78   : 			_M_pContainer = pcontainer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pcontainer$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 79   : 			return init(init_type);

	mov	esi, esp
	mov	eax, DWORD PTR _init_type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@reinit
$LN1@reinit:

; 80   : 		}
; 81   : 		return P_ERR;

	or	eax, -1
$LN2@reinit:

; 82   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?reinit@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@W4enumLINEAR_INTERATOR_INIT_TYPE@@@Z ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::reinit
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pother_liner_iterator$ = 8				; size = 4
?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::copy, COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 		if (this == pother_liner_iterator)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR _pother_liner_iterator$[ebp]
	jne	SHORT $LN3@copy@2

; 87   : 		{
; 88   : 			return P_OK;

	xor	eax, eax
	jmp	SHORT $LN4@copy@2
	jmp	SHORT $LN2@copy@2
$LN3@copy@2:

; 89   : 		}
; 90   : 		else if (null != pother_liner_iterator)

	cmp	DWORD PTR _pother_liner_iterator$[ebp], 0
	je	SHORT $LN2@copy@2

; 91   : 		{
; 92   : 			_M_pContainer = pother_liner_iterator->_M_pContainer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pother_liner_iterator$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 93   : 			_M_pCurrent_node = pother_liner_iterator->_M_pCurrent_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pother_liner_iterator$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 94   : 			return P_OK;

	xor	eax, eax
	jmp	SHORT $LN4@copy@2
$LN2@copy@2:

; 95   : 		}
; 96   : 		return P_ERR;

	or	eax, -1
$LN4@copy@2:

; 97   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?copy@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJPBV12@@Z ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::copy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment, COMDAT
; _this$ = ecx

; 100  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 		if (null == _M_pContainer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@increment

; 102  : 		{
; 103  : 			return P_ERR;

	or	eax, -1
	jmp	SHORT $LN4@increment
$LN3@increment:

; 104  : 		}
; 105  : 		if (null != _M_pCurrent_node->_M_next_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@increment

; 106  : 		{
; 107  : 			_M_pCurrent_node = _M_pCurrent_node->_M_next_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+8], eax

; 108  : 			return P_OK;

	xor	eax, eax
	jmp	SHORT $LN4@increment

; 109  : 		}
; 110  : 		else

	jmp	SHORT $LN4@increment
$LN2@increment:

; 111  : 		{
; 112  : 			return P_SUCCESS;

	mov	eax, 6
$LN4@increment:

; 113  : 		}
; 114  : 		
; 115  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?increment@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::increment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::decrement, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 119  : 		if (null == _M_pContainer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@decrement

; 120  : 		{
; 121  : 			return P_ERR;

	or	eax, -1
	jmp	SHORT $LN4@decrement
$LN3@decrement:

; 122  : 		}
; 123  : 		if (null != _M_pCurrent_node->_M_pre_node)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@decrement

; 124  : 		{
; 125  : 			_M_pCurrent_node = _M_pCurrent_node->_M_pre_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], eax

; 126  : 			return P_OK;

	xor	eax, eax
	jmp	SHORT $LN4@decrement

; 127  : 		}
; 128  : 		else

	jmp	SHORT $LN4@decrement
$LN2@decrement:

; 129  : 		{
; 130  : 			return P_SUCCESS;

	mov	eax, 6
$LN4@decrement:

; 131  : 		}
; 132  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?decrement@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEJXZ ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::decrement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 136  : 		return _M_pCurrent_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 137  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_current_node@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBU?$pecker_linked_list_node_t@H@2@XZ ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_current_node
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_container@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get_container@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@XZ PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_container, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 141  : 		return _M_pContainer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 142  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get_container@?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UBEPBV?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@XZ ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::get_container
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEPAXI@Z PROC ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAE@XZ ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::~pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@pecker_sdk@@UAEPAXI@Z ENDP ; pecker_sdk::pecker_list_iterator<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > > >::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\data\pecker_list.h
_TEXT	ENDS
;	COMDAT ?pop@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ
_TEXT	SEGMENT
_return_result$ = -32					; size = 4
_ptemp_pre_node$ = -20					; size = 4
_this$ = -8						; size = 4
?pop@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop, COMDAT
; _this$ = ecx

; 174  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		linked_list_node_t* ptemp_pre_node = null;

	mov	DWORD PTR _ptemp_pre_node$[ebp], 0

; 176  : 		if (null != _M_pend_node)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN3@pop

; 177  : 		{
; 178  : 			ptemp_pre_node = _M_pend_node->_M_pre_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ptemp_pre_node$[ebp], edx
$LN3@pop:

; 179  : 		}
; 180  : 		list_result return_result = remove_list_node< linked_list_node_t >(_M_pend_node);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 4
	mov	DWORD PTR _return_result$[ebp], eax

; 181  : 		if (P_OK == return_result)

	cmp	DWORD PTR _return_result$[ebp], 0
	jne	SHORT $LN2@pop

; 182  : 		{
; 183  : 			_M_allocator.release_node(_M_pend_node);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node

; 184  : 			_M_pend_node = ptemp_pre_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptemp_pre_node$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 185  : 			if (1 == _M_node_count)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN1@pop

; 186  : 			{
; 187  : 				_M_pbegin_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN1@pop:

; 188  : 			}
; 189  : 			--_M_node_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@pop:

; 190  : 		}
; 191  : 		return return_result;

	mov	eax, DWORD PTR _return_result$[ebp]

; 192  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pop@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?pop_front@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ
_TEXT	SEGMENT
_return_result$ = -32					; size = 4
_ptemp_next_node$ = -20					; size = 4
_this$ = -8						; size = 4
?pop_front@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop_front, COMDAT
; _this$ = ecx

; 215  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 		linked_list_node_t* ptemp_next_node = null;

	mov	DWORD PTR _ptemp_next_node$[ebp], 0

; 217  : 		if (null != _M_pbegin_node)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@pop_front

; 218  : 		{
; 219  : 			ptemp_next_node = _M_pbegin_node->_M_next_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _ptemp_next_node$[ebp], edx
$LN3@pop_front:

; 220  : 		}
; 221  : 		list_result return_result = remove_list_node< linked_list_node_t >(_M_pbegin_node);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 4
	mov	DWORD PTR _return_result$[ebp], eax

; 222  : 		if (P_OK == return_result)

	cmp	DWORD PTR _return_result$[ebp], 0
	jne	SHORT $LN2@pop_front

; 223  : 		{
; 224  : 			_M_allocator.release_node(_M_pbegin_node);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node

; 225  : 			_M_pbegin_node = ptemp_next_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptemp_next_node$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 226  : 			if (1 == _M_node_count)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN1@pop_front

; 227  : 			{
; 228  : 				_M_pend_node = null;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@pop_front:

; 229  : 			}
; 230  : 			--_M_node_count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN2@pop_front:

; 231  : 		}
; 232  : 		return return_result;

	mov	eax, DWORD PTR _return_result$[ebp]

; 233  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QAEJXZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::pop_front
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin, COMDAT
; _this$ = ecx

; 236  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 237  : 		return _M_pbegin_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 238  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?begin@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::begin
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?end@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?end@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::end, COMDAT
; _this$ = ecx

; 240  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 		return _M_pend_node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 242  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?end@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@XZ ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::end
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_plist_iterator$ = 8					; size = 4
?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z PROC ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_node, COMDAT
; _this$ = ecx

; 260  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 261  : 		if (null != plist_iterator && plist_iterator->get_container() == this)

	cmp	DWORD PTR _plist_iterator$[ebp], 0
	je	SHORT $LN1@get_node
	mov	eax, DWORD PTR _plist_iterator$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _plist_iterator$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@get_node

; 262  : 		{
; 263  : 			return plist_iterator->get_current_node();

	mov	eax, DWORD PTR _plist_iterator$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _plist_iterator$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@get_node
$LN1@get_node:

; 264  : 		}
; 265  : 		return null;

	xor	eax, eax
$LN2@get_node:

; 266  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_node@?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@pecker_sdk@@QBEPBU?$pecker_linked_list_node_t@H@2@PBV?$pecker_list_iterator@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_list@HU?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@2@@2@@2@@Z ENDP ; pecker_sdk::pecker_list<int,pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > > >::get_node
_TEXT	ENDS
PUBLIC	?allocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAPAU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::allocate_object
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\data\pecker_nodes_allocate.h
;	COMDAT ?create_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEPAU?$pecker_linked_list_node_t@H@2@XZ
_TEXT	SEGMENT
_pcreate_node$ = -20					; size = 4
_this$ = -8						; size = 4
?create_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEPAU?$pecker_linked_list_node_t@H@2@XZ PROC ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::create_node, COMDAT
; _this$ = ecx

; 36   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 		_node_t* pcreate_node = allocate_object_t::allocate_object();

	call	?allocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAPAU?$pecker_linked_list_node_t@H@2@XZ ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::allocate_object
	mov	DWORD PTR _pcreate_node$[ebp], eax

; 38   : 		return pcreate_node;

	mov	eax, DWORD PTR _pcreate_node$[ebp]

; 39   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?create_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEPAU?$pecker_linked_list_node_t@H@2@XZ ENDP ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::create_node
_TEXT	ENDS
PUBLIC	?deallocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::deallocate_object
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pNode$ = 8						; size = 4
?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z PROC ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 		if (null != pNode)

	cmp	DWORD PTR _pNode$[ebp], 0
	je	SHORT $LN2@release_no

; 43   : 		{
; 44   : 			allocate_object_t::deallocate_object(pNode);

	mov	eax, DWORD PTR _pNode$[ebp]
	push	eax
	call	?deallocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAXPAU?$pecker_linked_list_node_t@H@2@@Z ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::deallocate_object
	add	esp, 4
$LN2@release_no:

; 45   : 		}
; 46   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?release_node@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEXPAU?$pecker_linked_list_node_t@H@2@@Z ENDP ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::release_node
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?clear@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bForce_release$ = 8					; size = 1
?clear@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEX_N@Z PROC ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::clear, COMDAT
; _this$ = ecx

; 48   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 49   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?clear@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QAEX_N@Z ENDP ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::clear
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Is_pool@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Is_pool@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QBE_NXZ PROC ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::Is_pool, COMDAT
; _this$ = ecx

; 55   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return NODES_BOOLEAN_FLASE;

	xor	al, al

; 57   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_pool@?$pecker_nodes_simple_allocater@U?$pecker_linked_list_node_t@H@pecker_sdk@@V?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@2@@pecker_sdk@@QBE_NXZ ENDP ; pecker_sdk::pecker_nodes_simple_allocater<pecker_sdk::pecker_linked_list_node_t<int>,pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> > >::Is_pool
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\native\pecker_allocator.h
;	COMDAT ?allocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAPAU?$pecker_linked_list_node_t@H@2@XZ
_TEXT	SEGMENT
$T68396 = -200						; size = 4
?allocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAPAU?$pecker_linked_list_node_t@H@2@XZ PROC ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::allocate_object, COMDAT

; 31   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 32   : 			return new className;

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68396[ebp], eax
	mov	eax, DWORD PTR $T68396[ebp]

; 33   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?allocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAPAU?$pecker_linked_list_node_t@H@2@XZ ENDP ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::allocate_object
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAXPAU?$pecker_linked_list_node_t@H@2@@Z
_TEXT	SEGMENT
$T68399 = -200						; size = 4
_pDelObject$ = 8					; size = 4
?deallocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAXPAU?$pecker_linked_list_node_t@H@2@@Z PROC ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::deallocate_object, COMDAT

; 36   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   : 		if(null != pDelObject)

	cmp	DWORD PTR _pDelObject$[ebp], 0
	je	SHORT $LN2@deallocate

; 38   : 		{
; 39   : 			delete  pDelObject;

	mov	eax, DWORD PTR _pDelObject$[ebp]
	mov	DWORD PTR $T68399[ebp], eax
	mov	ecx, DWORD PTR $T68399[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@deallocate:

; 40   : 		}
; 41   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate_object@?$pecker_simple_allocator@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@SAXPAU?$pecker_linked_list_node_t@H@2@@Z ENDP ; pecker_sdk::pecker_simple_allocator<pecker_sdk::pecker_linked_list_node_t<int> >::deallocate_object
; Function compile flags: /Odtp /RTCsu /ZI
; File f:\codes\pecker_framework_git\pecker_src\pecker_framework\data\pecker_list_algorithm.h
_TEXT	ENDS
;	COMDAT ??$push_back_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJAAPAU?$pecker_linked_list_node_t@H@0@PAU10@@Z
_TEXT	SEGMENT
_plast_node$68085 = -8					; size = 4
_pbegin_node$ = 8					; size = 4
_padd_node$ = 12					; size = 4
??$push_back_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJAAPAU?$pecker_linked_list_node_t@H@0@PAU10@@Z PROC ; pecker_sdk::push_back_list_node<pecker_sdk::pecker_linked_list_node_t<int> >, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 42   : 	if (null != padd_node)

	cmp	DWORD PTR _padd_node$[ebp], 0
	je	SHORT $LN5@push_back_

; 43   : 	{
; 44   : 		
; 45   : 		if (null == pbegin_node)

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@push_back_

; 46   : 		{
; 47   : 			pbegin_node = padd_node;

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	mov	ecx, DWORD PTR _padd_node$[ebp]
	mov	DWORD PTR [eax], ecx

; 48   : 			padd_node->_M_pre_node = null;

	mov	eax, DWORD PTR _padd_node$[ebp]
	mov	DWORD PTR [eax], 0

; 49   : 			padd_node->_M_next_node = null;

	mov	eax, DWORD PTR _padd_node$[ebp]
	mov	DWORD PTR [eax+4], 0

; 50   : 		}
; 51   : 		else

	jmp	SHORT $LN3@push_back_
$LN4@push_back_:

; 52   : 		{
; 53   : 			linked_list_node_t* plast_node = pbegin_node;

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _plast_node$68085[ebp], ecx
$LN2@push_back_:

; 54   : 			while (plast_node->_M_next_node)

	mov	eax, DWORD PTR _plast_node$68085[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@push_back_

; 55   : 			{
; 56   : 				plast_node = (linked_list_node_t*)(plast_node->_M_next_node);

	mov	eax, DWORD PTR _plast_node$68085[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _plast_node$68085[ebp], ecx

; 57   : 			}

	jmp	SHORT $LN2@push_back_
$LN1@push_back_:

; 58   : 			plast_node->_M_next_node = padd_node;

	mov	eax, DWORD PTR _plast_node$68085[ebp]
	mov	ecx, DWORD PTR _padd_node$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 59   : 			padd_node->_M_pre_node = plast_node;

	mov	eax, DWORD PTR _padd_node$[ebp]
	mov	ecx, DWORD PTR _plast_node$68085[ebp]
	mov	DWORD PTR [eax], ecx

; 60   : 			padd_node->_M_next_node = null;

	mov	eax, DWORD PTR _padd_node$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN3@push_back_:

; 61   : 		}
; 62   : 
; 63   : 		return P_OK;

	xor	eax, eax
	jmp	SHORT $LN6@push_back_
$LN5@push_back_:

; 64   : 	}
; 65   : 	
; 66   : 	return P_ERR;

	or	eax, -1
$LN6@push_back_:

; 67   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$push_back_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJAAPAU?$pecker_linked_list_node_t@H@0@PAU10@@Z ENDP ; pecker_sdk::push_back_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z
_TEXT	SEGMENT
_ptmp_pre_node$68095 = -20				; size = 4
_ptmp_next_node$68093 = -8				; size = 4
_premove_node$ = 8					; size = 4
??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z PROC ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >, COMDAT

; 148  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 149  : 	if (null == premove_node)

	cmp	DWORD PTR _premove_node$[ebp], 0
	jne	SHORT $LN4@remove_lis

; 150  : 	{
; 151  : 		return P_SUCCESS;

	mov	eax, 6
	jmp	SHORT $LN5@remove_lis

; 152  : 	}
; 153  : 	else

	jmp	SHORT $LN5@remove_lis
$LN4@remove_lis:

; 154  : 	{
; 155  : 		linked_list_node_t* ptmp_next_node = (linked_list_node_t*)(premove_node->_M_next_node);

	mov	eax, DWORD PTR _premove_node$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptmp_next_node$68093[ebp], ecx

; 156  : 		linked_list_node_t* ptmp_pre_node = (linked_list_node_t*)(premove_node->_M_pre_node);

	mov	eax, DWORD PTR _premove_node$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptmp_pre_node$68095[ebp], ecx

; 157  : 		
; 158  : 		if (null != ptmp_next_node)

	cmp	DWORD PTR _ptmp_next_node$68093[ebp], 0
	je	SHORT $LN2@remove_lis

; 159  : 		{
; 160  : 			ptmp_next_node->_M_pre_node = ptmp_pre_node;

	mov	eax, DWORD PTR _ptmp_next_node$68093[ebp]
	mov	ecx, DWORD PTR _ptmp_pre_node$68095[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@remove_lis:

; 161  : 		}
; 162  : 
; 163  : 		if (null != ptmp_pre_node)

	cmp	DWORD PTR _ptmp_pre_node$68095[ebp], 0
	je	SHORT $LN1@remove_lis

; 164  : 		{
; 165  : 			ptmp_pre_node->_M_next_node = ptmp_next_node;

	mov	eax, DWORD PTR _ptmp_pre_node$68095[ebp]
	mov	ecx, DWORD PTR _ptmp_next_node$68093[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN1@remove_lis:

; 166  : 		}
; 167  : 
; 168  : 		return P_OK;

	xor	eax, eax
$LN5@remove_lis:

; 169  : 	}
; 170  : 
; 171  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ENDP ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$remove_list_nodes_unsafe@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@0@Z
_TEXT	SEGMENT
_ptmp_pre_node$ = -20					; size = 4
_ptmp_next_node$ = -8					; size = 4
_pbegin_node$ = 8					; size = 4
_pend_node$ = 12					; size = 4
??$remove_list_nodes_unsafe@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@0@Z PROC ; pecker_sdk::remove_list_nodes_unsafe<pecker_sdk::pecker_linked_list_node_t<int> >, COMDAT

; 175  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 176  : 	if (pbegin_node == pend_node)

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	cmp	eax, DWORD PTR _pend_node$[ebp]
	jne	SHORT $LN5@remove_lis@2

; 177  : 	{
; 178  : 		return remove_list_node< linked_list_node_t >(pbegin_node);

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	push	eax
	call	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 4
	jmp	SHORT $LN6@remove_lis@2
	jmp	SHORT $LN4@remove_lis@2
$LN5@remove_lis@2:

; 179  : 	}
; 180  : 	else if (null == pbegin_node)

	cmp	DWORD PTR _pbegin_node$[ebp], 0
	jne	SHORT $LN3@remove_lis@2

; 181  : 	{
; 182  : 		return remove_list_node< linked_list_node_t >(pend_node);

	mov	eax, DWORD PTR _pend_node$[ebp]
	push	eax
	call	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 4
	jmp	SHORT $LN6@remove_lis@2
	jmp	SHORT $LN4@remove_lis@2
$LN3@remove_lis@2:

; 183  : 	}
; 184  : 	else if (null == pend_node)

	cmp	DWORD PTR _pend_node$[ebp], 0
	jne	SHORT $LN4@remove_lis@2

; 185  : 	{
; 186  : 		return remove_list_node< linked_list_node_t >(pbegin_node);

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	push	eax
	call	??$remove_list_node@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@@Z ; pecker_sdk::remove_list_node<pecker_sdk::pecker_linked_list_node_t<int> >
	add	esp, 4
	jmp	SHORT $LN6@remove_lis@2
$LN4@remove_lis@2:

; 187  : 	}
; 188  : 
; 189  : 	linked_list_node_t* ptmp_next_node = (linked_list_node_t*)(pend_node->_M_next_node);

	mov	eax, DWORD PTR _pend_node$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ptmp_next_node$[ebp], ecx

; 190  : 	linked_list_node_t* ptmp_pre_node = (linked_list_node_t*)(pbegin_node->_M_pre_node);

	mov	eax, DWORD PTR _pbegin_node$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptmp_pre_node$[ebp], ecx

; 191  : 
; 192  : 	ptmp_pre_node->_M_next_node = ptmp_next_node;

	mov	eax, DWORD PTR _ptmp_pre_node$[ebp]
	mov	ecx, DWORD PTR _ptmp_next_node$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 193  : 	ptmp_next_node->_M_pre_node = ptmp_pre_node;

	mov	eax, DWORD PTR _ptmp_next_node$[ebp]
	mov	ecx, DWORD PTR _ptmp_pre_node$[ebp]
	mov	DWORD PTR [eax], ecx

; 194  : 	return P_OK;

	xor	eax, eax
$LN6@remove_lis@2:

; 195  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$remove_list_nodes_unsafe@U?$pecker_linked_list_node_t@H@pecker_sdk@@@pecker_sdk@@YAJPAU?$pecker_linked_list_node_t@H@0@0@Z ENDP ; pecker_sdk::remove_list_nodes_unsafe<pecker_sdk::pecker_linked_list_node_t<int> >
_TEXT	ENDS
END
